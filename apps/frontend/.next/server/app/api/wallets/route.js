(()=>{var e={};e.id=824,e.ids=[824],e.modules={62:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1997:e=>{"use strict";e.exports=require("punycode")},2329:(e,t,a)=>{"use strict";let d=a(1997),i=a(6230),p={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},r=Symbol("failure");function n(e){return d.ucs2.decode(e).length}function s(e,t){let a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function o(e){return e>=48&&e<=57}function l(e){return e>=65&&e<=90||e>=97&&e<=122}function m(e){return o(e)||e>=65&&e<=70||e>=97&&e<=102}function u(e){return"."===e||"%2e"===e.toLowerCase()}function f(e){return 2===e.length&&l(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function c(e){return void 0!==p[e]}function h(e){return c(e.scheme)}function x(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function b(e){return e<=31||e>126}let v=new Set([32,34,35,60,62,63,96,123,125]);function g(e){return b(e)||v.has(e)}let y=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return g(e)||y.has(e)}function S(e,t){let a=String.fromCodePoint(e);if(t(e)){let e=new Buffer(a),t="";for(let a=0;a<e.length;++a)t+=x(e[a]);return t}return a}function E(e,t){if("["===e[0])return"]"!==e[e.length-1]?r:function(e){let t=[0,0,0,0,0,0,0,0],a=0,i=null,p=0;if(58===(e=d.ucs2.decode(e))[p]){if(58!==e[p+1])return r;p+=2,i=++a}for(;p<e.length;){if(8===a)return r;if(58===e[p]){if(null!==i)return r;++p,i=++a;continue}let d=0,n=0;for(;n<4&&m(e[p]);)d=16*d+parseInt(s(e,p),16),++p,++n;if(46===e[p]){if(0===n||(p-=n,a>6))return r;let d=0;for(;void 0!==e[p];){let i=null;if(d>0)if(46!==e[p]||!(d<4))return r;else++p;if(!o(e[p]))return r;for(;o(e[p]);){let t=parseInt(s(e,p));if(null===i)i=t;else{if(0===i)return r;i=10*i+t}if(i>255)return r;++p}t[a]=256*t[a]+i,(2==++d||4===d)&&++a}if(4!==d)return r;break}if(58===e[p]){if(void 0===e[++p])return r}else if(void 0!==e[p])return r;t[a]=d,++a}if(null!==i){let e=a-i;for(a=7;0!==a&&e>0;){let d=t[i+e-1];t[i+e-1]=t[a],t[a]=d,--a,--e}}else if(null===i&&8!==a)return r;return t}(e.substring(1,e.length-1));if(!t){var a=e;if(-1!==a.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return r;let t="",i=d.ucs2.decode(a);for(let e=0;e<i.length;++e)t+=S(i[e],b);return t}let p=function(e){let t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&m(t[e+1])&&m(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),n=i.toASCII(p,!1,i.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===n||-1!==n.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return r;let l=function(e){let t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;let a=[];for(let d of t){if(""===d)return e;let t=function(e){let t=10;return(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e)?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?r:parseInt(e,t)}(d);if(t===r)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return r;if(a[a.length-1]>=Math.pow(256,5-a.length))return r;let d=a.pop(),i=0;for(let e of a)d+=e*Math.pow(256,3-i),++i;return d}(n);return"number"==typeof l||l===r?l:n}function N(e){if("number"==typeof e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}return e instanceof Array?"["+function(e){let t="",a=function(e){let t=null,a=1,d=null,i=0;for(let p=0;p<e.length;++p)0!==e[p]?(i>a&&(t=d,a=i),d=null,i=0):(null===d&&(d=p),++i);return i>a&&(t=d,a=i),{idx:t,len:a}}(e).idx,d=!1;for(let i=0;i<=7;++i)if(!d||0!==e[i]){if(d&&(d=!1),a===i){t+=0===i?"::":":",d=!0;continue}t+=e[i].toString(16),7!==i&&(t+=":")}return t}(e)+"]":e}function T(e){let t=e.path;if(0!==t.length){var a;"file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop()}}function A(e){return""!==e.username||""!==e.password}function _(e,t,a,i,p){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=p,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let e=this.input.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"");e!==this.input&&(this.parseError=!0),this.input=e}let n=this.input.replace(/\u0009|\u000A|\u000D/g,"");for(n!==this.input&&(this.parseError=!0),this.input=n,this.state=p||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=d.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(a){if(a===r){this.failure=!0;break}}else break}}_.prototype["parse scheme start"]=function(e,t){if(l(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,r;this.state="no scheme",--this.pointer}return!0},_.prototype["parse scheme"]=function(e,t){if(l(e)||o(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride&&(h(this.url)&&!c(this.buffer)||!h(this.url)&&c(this.buffer)||(A(this.url)||null!==this.url.port)&&"file"===this.buffer||"file"===this.url.scheme&&(""===this.url.host||null===this.url.host))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;"file"===this.url.scheme?((47!==this.input[this.pointer+1]||47!==this.input[this.pointer+2])&&(this.parseError=!0),this.state="file"):h(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":h(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,r;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},_.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?r:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):("file"===this.base.scheme?this.state="file":this.state="relative",--this.pointer),!0)},_.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},_.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},_.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):h(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},_.prototype["parse relative slash"]=function(e){return h(this.url)&&(47===e||92===e)?(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"):47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0},_.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},_.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},_.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let e=n(this.buffer);for(let t=0;t<e;++t){let e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let a=S(e,w);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,r;this.pointer-=n(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},_.prototype["parse hostname"]=_.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(--this.pointer,h(this.url)&&""===this.buffer)return this.parseError=!0,r;if(this.stateOverride&&""===this.buffer&&(A(this.url)||null!==this.url.port))return this.parseError=!0,!1;let e=E(this.buffer,h(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,r;let e=E(this.buffer,h(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},_.prototype["parse port"]=function(e,t){if(o(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e)&&!this.stateOverride)return this.parseError=!0,r;if(""!==this.buffer){let e=parseInt(this.buffer);if(e>65535)return this.parseError=!0,r;this.url.port=e===p[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};let k=new Set([47,92,63,35]);_.prototype["parse file"]=function(e){if(this.url.scheme="file",47===e||92===e)92===e&&(this.parseError=!0),this.state="file slash";else if(null!==this.base&&"file"===this.base.scheme)if(isNaN(e))this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query;else if(63===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query";else if(35===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment";else{var t;this.input.length-this.pointer-1!=0&&(t=this.input[this.pointer+1],l(e)&&(58===t||124===t))&&(!(this.input.length-this.pointer-1>=2)||k.has(this.input[this.pointer+2]))?this.parseError=!0:(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)),this.state="path",--this.pointer}else this.state="path",--this.pointer;return!0},_.prototype["parse file slash"]=function(e){if(47===e||92===e)92===e&&(this.parseError=!0),this.state="file host";else{if(null!==this.base&&"file"===this.base.scheme){var t;2===(t=this.base.path[0]).length&&l(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host}this.state="path",--this.pointer}return!0},_.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&f(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=E(this.buffer,h(this.url));if(e===r)return r;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},_.prototype["parse path start"]=function(e){return h(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},_.prototype["parse path"]=function(e){if(isNaN(e)||47===e||h(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){var t;if((h(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t)?(T(this.url),47===e||h(this.url)&&92===e||this.url.path.push("")):u(this.buffer)&&47!==e&&!(h(this.url)&&92===e)?this.url.path.push(""):u(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&f(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=S(e,g);return!0},_.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+S(e,b))),!0},_.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){h(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");let t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=x(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},_.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=S(e,b))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",(""!==e.username||""!==e.password)&&(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=N(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(let t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":var a;let d;return d=(a={scheme:t.scheme,host:t.host,port:t.port}).scheme+"://"+N(a.host),null!==a.port&&(d+=":"+a.port),d;case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});let a=new _(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";let a=d.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=S(a[t],w)},e.exports.setThePassword=function(e,t){e.password="";let a=d.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=S(a[t],w)},e.exports.serializeHost=N,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3154:(e,t,a)=>{"use strict";t.URL=a(4361).interface,a(2329).serializeURL,a(2329).serializeURLOrigin,a(2329).basicURLParse,a(2329).setTheUsername,a(2329).setThePassword,a(2329).serializeHost,a(2329).serializeInteger,a(2329).parseURL},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3778:function(e,t,a){!function(e,t){"use strict";function d(e,t){if(!e)throw Error(t||"Assertion failed")}function i(e,t){e.super_=t;var a=function(){};a.prototype=t.prototype,e.prototype=new a,e.prototype.constructor=e}function p(e,t,a){if(p.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&(("le"===t||"be"===t)&&(a=t,t=10),this._init(e||0,t||10,a||"be"))}"object"==typeof e?e.exports=p:t.BN=p,p.BN=p,p.wordSize=26;try{m="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:a(9428).Buffer}catch(e){}function r(e,t){var a=e.charCodeAt(t);return a>=48&&a<=57?a-48:a>=65&&a<=70?a-55:a>=97&&a<=102?a-87:void d(!1,"Invalid character in "+e)}function n(e,t,a){var d=r(e,a);return a-1>=t&&(d|=r(e,a-1)<<4),d}function s(e,t,a,i){for(var p=0,r=0,n=Math.min(e.length,a),s=t;s<n;s++){var o=e.charCodeAt(s)-48;p*=i,r=o>=49?o-49+10:o>=17?o-17+10:o,d(o>=0&&r<i,"Invalid character"),p+=r}return p}function o(e,t){e.words=t.words,e.length=t.length,e.negative=t.negative,e.red=t.red}if(p.isBN=function(e){return e instanceof p||null!==e&&"object"==typeof e&&e.constructor.wordSize===p.wordSize&&Array.isArray(e.words)},p.max=function(e,t){return e.cmp(t)>0?e:t},p.min=function(e,t){return 0>e.cmp(t)?e:t},p.prototype._init=function(e,t,a){if("number"==typeof e)return this._initNumber(e,t,a);if("object"==typeof e)return this._initArray(e,t,a);"hex"===t&&(t=16),d(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,a):(this._parseBase(e,t,i),"le"===a&&this._initArray(this.toArray(),t,a)))},p.prototype._initNumber=function(e,t,a){e<0&&(this.negative=1,e=-e),e<0x4000000?(this.words=[0x3ffffff&e],this.length=1):e<0x10000000000000?(this.words=[0x3ffffff&e,e/0x4000000&0x3ffffff],this.length=2):(d(e<0x20000000000000),this.words=[0x3ffffff&e,e/0x4000000&0x3ffffff,1],this.length=3),"le"===a&&this._initArray(this.toArray(),t,a)},p.prototype._initArray=function(e,t,a){if(d("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=Array(this.length);for(var i,p,r=0;r<this.length;r++)this.words[r]=0;var n=0;if("be"===a)for(r=e.length-1,i=0;r>=0;r-=3)p=e[r]|e[r-1]<<8|e[r-2]<<16,this.words[i]|=p<<n&0x3ffffff,this.words[i+1]=p>>>26-n&0x3ffffff,(n+=24)>=26&&(n-=26,i++);else if("le"===a)for(r=0,i=0;r<e.length;r+=3)p=e[r]|e[r+1]<<8|e[r+2]<<16,this.words[i]|=p<<n&0x3ffffff,this.words[i+1]=p>>>26-n&0x3ffffff,(n+=24)>=26&&(n-=26,i++);return this._strip()},p.prototype._parseHex=function(e,t,a){this.length=Math.ceil((e.length-t)/6),this.words=Array(this.length);for(var d,i=0;i<this.length;i++)this.words[i]=0;var p=0,r=0;if("be"===a)for(i=e.length-1;i>=t;i-=2)d=n(e,t,i)<<p,this.words[r]|=0x3ffffff&d,p>=18?(p-=18,r+=1,this.words[r]|=d>>>26):p+=8;else for(i=(e.length-t)%2==0?t+1:t;i<e.length;i+=2)d=n(e,t,i)<<p,this.words[r]|=0x3ffffff&d,p>=18?(p-=18,r+=1,this.words[r]|=d>>>26):p+=8;this._strip()},p.prototype._parseBase=function(e,t,a){this.words=[0],this.length=1;for(var d=0,i=1;i<=0x3ffffff;i*=t)d++;d--,i=i/t|0;for(var p=e.length-a,r=p%d,n=Math.min(p,p-r)+a,o=0,l=a;l<n;l+=d)o=s(e,l,l+d,t),this.imuln(i),this.words[0]+o<0x4000000?this.words[0]+=o:this._iaddn(o);if(0!==r){var m=1;for(o=s(e,l,e.length,t),l=0;l<r;l++)m*=t;this.imuln(m),this.words[0]+o<0x4000000?this.words[0]+=o:this._iaddn(o)}this._strip()},p.prototype.copy=function(e){e.words=Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},p.prototype._move=function(e){o(e,this)},p.prototype.clone=function(){var e=new p(null);return this.copy(e),e},p.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},p.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},p.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{p.prototype[Symbol.for("nodejs.util.inspect.custom")]=l}catch(e){p.prototype.inspect=l}else p.prototype.inspect=l;function l(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var m,u=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],c=[0,0,0x2000000,0x290d741,0x1000000,0x2e90edd,0x39aa400,0x267bf47,0x1000000,0x290d741,1e7,0x12959c3,0x222c000,0x3bd7765,7529536,0xadcea1,0x1000000,0x1704f61,0x206fc40,0x2cddcf9,64e6,4084101,5153632,6436343,7962624,9765625,0xb54ba0,0xdaf26b,0x1069c00,0x138f9ad,243e5,0x1b4d89f,0x2000000,0x25528a1,0x2b54a20,0x3216b93,0x39aa400];function h(e,t,a){a.negative=t.negative^e.negative;var d=e.length+t.length|0;a.length=d,d=d-1|0;var i=0|e.words[0],p=0|t.words[0],r=i*p,n=0x3ffffff&r,s=r/0x4000000|0;a.words[0]=n;for(var o=1;o<d;o++){for(var l=s>>>26,m=0x3ffffff&s,u=Math.min(o,t.length-1),f=Math.max(0,o-e.length+1);f<=u;f++){var c=o-f|0;l+=(r=(i=0|e.words[c])*(p=0|t.words[f])+m)/0x4000000|0,m=0x3ffffff&r}a.words[o]=0|m,s=0|l}return 0!==s?a.words[o]=0|s:a.length--,a._strip()}p.prototype.toString=function(e,t){if(t=0|t||1,16===(e=e||10)||"hex"===e){for(var a="",i=0,p=0,r=0;r<this.length;r++){var n=this.words[r],s=((n<<i|p)&0xffffff).toString(16);p=n>>>24-i&0xffffff,(i+=2)>=26&&(i-=26,r--),a=0!==p||r!==this.length-1?u[6-s.length]+s+a:s+a}for(0!==p&&(a=p.toString(16)+a);a.length%t!=0;)a="0"+a;return 0!==this.negative&&(a="-"+a),a}if(e===(0|e)&&e>=2&&e<=36){var o=f[e],l=c[e];a="";var m=this.clone();for(m.negative=0;!m.isZero();){var h=m.modrn(l).toString(e);a=(m=m.idivn(l)).isZero()?h+a:u[o-h.length]+h+a}for(this.isZero()&&(a="0"+a);a.length%t!=0;)a="0"+a;return 0!==this.negative&&(a="-"+a),a}d(!1,"Base should be between 2 and 36")},p.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=0x4000000*this.words[1]:3===this.length&&1===this.words[2]?e+=0x10000000000000+0x4000000*this.words[1]:this.length>2&&d(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},p.prototype.toJSON=function(){return this.toString(16,2)},m&&(p.prototype.toBuffer=function(e,t){return this.toArrayLike(m,e,t)}),p.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},p.prototype.toArrayLike=function(e,t,a){this._strip();var i=this.byteLength(),p=a||Math.max(1,i);d(i<=p,"byte array longer than desired length"),d(p>0,"Requested array length <= 0");var r=e.allocUnsafe?e.allocUnsafe(p):new e(p);return this["_toArrayLike"+("le"===t?"LE":"BE")](r,i),r},p.prototype._toArrayLikeLE=function(e,t){for(var a=0,d=0,i=0,p=0;i<this.length;i++){var r=this.words[i]<<p|d;e[a++]=255&r,a<e.length&&(e[a++]=r>>8&255),a<e.length&&(e[a++]=r>>16&255),6===p?(a<e.length&&(e[a++]=r>>24&255),d=0,p=0):(d=r>>>24,p+=2)}if(a<e.length)for(e[a++]=d;a<e.length;)e[a++]=0},p.prototype._toArrayLikeBE=function(e,t){for(var a=e.length-1,d=0,i=0,p=0;i<this.length;i++){var r=this.words[i]<<p|d;e[a--]=255&r,a>=0&&(e[a--]=r>>8&255),a>=0&&(e[a--]=r>>16&255),6===p?(a>=0&&(e[a--]=r>>24&255),d=0,p=0):(d=r>>>24,p+=2)}if(a>=0)for(e[a--]=d;a>=0;)e[a--]=0},Math.clz32?p.prototype._countBits=function(e){return 32-Math.clz32(e)}:p.prototype._countBits=function(e){var t=e,a=0;return t>=4096&&(a+=13,t>>>=13),t>=64&&(a+=7,t>>>=7),t>=8&&(a+=4,t>>>=4),t>=2&&(a+=2,t>>>=2),a+t},p.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,a=0;return(8191&t)==0&&(a+=13,t>>>=13),(127&t)==0&&(a+=7,t>>>=7),(15&t)==0&&(a+=4,t>>>=4),(3&t)==0&&(a+=2,t>>>=2),(1&t)==0&&a++,a},p.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return(this.length-1)*26+t},p.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var a=this._zeroBits(this.words[t]);if(e+=a,26!==a)break}return e},p.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},p.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},p.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},p.prototype.isNeg=function(){return 0!==this.negative},p.prototype.neg=function(){return this.clone().ineg()},p.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},p.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},p.prototype.ior=function(e){return d((this.negative|e.negative)==0),this.iuor(e)},p.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},p.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},p.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var a=0;a<t.length;a++)this.words[a]=this.words[a]&e.words[a];return this.length=t.length,this._strip()},p.prototype.iand=function(e){return d((this.negative|e.negative)==0),this.iuand(e)},p.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},p.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},p.prototype.iuxor=function(e){this.length>e.length?(t=this,a=e):(t=e,a=this);for(var t,a,d=0;d<a.length;d++)this.words[d]=t.words[d]^a.words[d];if(this!==t)for(;d<t.length;d++)this.words[d]=t.words[d];return this.length=t.length,this._strip()},p.prototype.ixor=function(e){return d((this.negative|e.negative)==0),this.iuxor(e)},p.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},p.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},p.prototype.inotn=function(e){d("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),a=e%26;this._expand(t),a>0&&t--;for(var i=0;i<t;i++)this.words[i]=0x3ffffff&~this.words[i];return a>0&&(this.words[i]=~this.words[i]&0x3ffffff>>26-a),this._strip()},p.prototype.notn=function(e){return this.clone().inotn(e)},p.prototype.setn=function(e,t){d("number"==typeof e&&e>=0);var a=e/26|0,i=e%26;return this._expand(a+1),t?this.words[a]=this.words[a]|1<<i:this.words[a]=this.words[a]&~(1<<i),this._strip()},p.prototype.iadd=function(e){if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(a=this,d=e):(a=e,d=this);for(var t,a,d,i=0,p=0;p<d.length;p++)t=(0|a.words[p])+(0|d.words[p])+i,this.words[p]=0x3ffffff&t,i=t>>>26;for(;0!==i&&p<a.length;p++)t=(0|a.words[p])+i,this.words[p]=0x3ffffff&t,i=t>>>26;if(this.length=a.length,0!==i)this.words[this.length]=i,this.length++;else if(a!==this)for(;p<a.length;p++)this.words[p]=a.words[p];return this},p.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},p.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t,a,d=this.iadd(e);return e.negative=1,d._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(t=this,a=e):(t=e,a=this);for(var p=0,r=0;r<a.length;r++)p=(d=(0|t.words[r])-(0|a.words[r])+p)>>26,this.words[r]=0x3ffffff&d;for(;0!==p&&r<t.length;r++)p=(d=(0|t.words[r])+p)>>26,this.words[r]=0x3ffffff&d;if(0===p&&r<t.length&&t!==this)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=Math.max(this.length,r),t!==this&&(this.negative=1),this._strip()},p.prototype.sub=function(e){return this.clone().isub(e)};var x=function(e,t,a){var d,i,p,r=e.words,n=t.words,s=a.words,o=0,l=0|r[0],m=8191&l,u=l>>>13,f=0|r[1],c=8191&f,h=f>>>13,x=0|r[2],b=8191&x,v=x>>>13,g=0|r[3],y=8191&g,w=g>>>13,S=0|r[4],E=8191&S,N=S>>>13,T=0|r[5],A=8191&T,_=T>>>13,k=0|r[6],I=8191&k,B=k>>>13,D=0|r[7],P=8191&D,O=D>>>13,V=0|r[8],R=8191&V,M=V>>>13,C=0|r[9],L=8191&C,U=C>>>13,F=0|n[0],z=8191&F,K=F>>>13,H=0|n[1],j=8191&H,q=H>>>13,$=0|n[2],W=8191&$,G=$>>>13,Z=0|n[3],Y=8191&Z,X=Z>>>13,J=0|n[4],Q=8191&J,ee=J>>>13,et=0|n[5],ea=8191&et,ed=et>>>13,ei=0|n[6],ep=8191&ei,er=ei>>>13,en=0|n[7],es=8191&en,eo=en>>>13,el=0|n[8],em=8191&el,eu=el>>>13,ef=0|n[9],ec=8191&ef,eh=ef>>>13;a.negative=e.negative^t.negative,a.length=19,d=Math.imul(m,z);var ex=(o+d|0)+((8191&(i=(i=Math.imul(m,K))+Math.imul(u,z)|0))<<13)|0;o=((p=Math.imul(u,K))+(i>>>13)|0)+(ex>>>26)|0,ex&=0x3ffffff,d=Math.imul(c,z),i=(i=Math.imul(c,K))+Math.imul(h,z)|0,p=Math.imul(h,K),d=d+Math.imul(m,j)|0;var eb=(o+d|0)+((8191&(i=(i=i+Math.imul(m,q)|0)+Math.imul(u,j)|0))<<13)|0;o=((p=p+Math.imul(u,q)|0)+(i>>>13)|0)+(eb>>>26)|0,eb&=0x3ffffff,d=Math.imul(b,z),i=(i=Math.imul(b,K))+Math.imul(v,z)|0,p=Math.imul(v,K),d=d+Math.imul(c,j)|0,i=(i=i+Math.imul(c,q)|0)+Math.imul(h,j)|0,p=p+Math.imul(h,q)|0,d=d+Math.imul(m,W)|0;var ev=(o+d|0)+((8191&(i=(i=i+Math.imul(m,G)|0)+Math.imul(u,W)|0))<<13)|0;o=((p=p+Math.imul(u,G)|0)+(i>>>13)|0)+(ev>>>26)|0,ev&=0x3ffffff,d=Math.imul(y,z),i=(i=Math.imul(y,K))+Math.imul(w,z)|0,p=Math.imul(w,K),d=d+Math.imul(b,j)|0,i=(i=i+Math.imul(b,q)|0)+Math.imul(v,j)|0,p=p+Math.imul(v,q)|0,d=d+Math.imul(c,W)|0,i=(i=i+Math.imul(c,G)|0)+Math.imul(h,W)|0,p=p+Math.imul(h,G)|0,d=d+Math.imul(m,Y)|0;var eg=(o+d|0)+((8191&(i=(i=i+Math.imul(m,X)|0)+Math.imul(u,Y)|0))<<13)|0;o=((p=p+Math.imul(u,X)|0)+(i>>>13)|0)+(eg>>>26)|0,eg&=0x3ffffff,d=Math.imul(E,z),i=(i=Math.imul(E,K))+Math.imul(N,z)|0,p=Math.imul(N,K),d=d+Math.imul(y,j)|0,i=(i=i+Math.imul(y,q)|0)+Math.imul(w,j)|0,p=p+Math.imul(w,q)|0,d=d+Math.imul(b,W)|0,i=(i=i+Math.imul(b,G)|0)+Math.imul(v,W)|0,p=p+Math.imul(v,G)|0,d=d+Math.imul(c,Y)|0,i=(i=i+Math.imul(c,X)|0)+Math.imul(h,Y)|0,p=p+Math.imul(h,X)|0,d=d+Math.imul(m,Q)|0;var ey=(o+d|0)+((8191&(i=(i=i+Math.imul(m,ee)|0)+Math.imul(u,Q)|0))<<13)|0;o=((p=p+Math.imul(u,ee)|0)+(i>>>13)|0)+(ey>>>26)|0,ey&=0x3ffffff,d=Math.imul(A,z),i=(i=Math.imul(A,K))+Math.imul(_,z)|0,p=Math.imul(_,K),d=d+Math.imul(E,j)|0,i=(i=i+Math.imul(E,q)|0)+Math.imul(N,j)|0,p=p+Math.imul(N,q)|0,d=d+Math.imul(y,W)|0,i=(i=i+Math.imul(y,G)|0)+Math.imul(w,W)|0,p=p+Math.imul(w,G)|0,d=d+Math.imul(b,Y)|0,i=(i=i+Math.imul(b,X)|0)+Math.imul(v,Y)|0,p=p+Math.imul(v,X)|0,d=d+Math.imul(c,Q)|0,i=(i=i+Math.imul(c,ee)|0)+Math.imul(h,Q)|0,p=p+Math.imul(h,ee)|0,d=d+Math.imul(m,ea)|0;var ew=(o+d|0)+((8191&(i=(i=i+Math.imul(m,ed)|0)+Math.imul(u,ea)|0))<<13)|0;o=((p=p+Math.imul(u,ed)|0)+(i>>>13)|0)+(ew>>>26)|0,ew&=0x3ffffff,d=Math.imul(I,z),i=(i=Math.imul(I,K))+Math.imul(B,z)|0,p=Math.imul(B,K),d=d+Math.imul(A,j)|0,i=(i=i+Math.imul(A,q)|0)+Math.imul(_,j)|0,p=p+Math.imul(_,q)|0,d=d+Math.imul(E,W)|0,i=(i=i+Math.imul(E,G)|0)+Math.imul(N,W)|0,p=p+Math.imul(N,G)|0,d=d+Math.imul(y,Y)|0,i=(i=i+Math.imul(y,X)|0)+Math.imul(w,Y)|0,p=p+Math.imul(w,X)|0,d=d+Math.imul(b,Q)|0,i=(i=i+Math.imul(b,ee)|0)+Math.imul(v,Q)|0,p=p+Math.imul(v,ee)|0,d=d+Math.imul(c,ea)|0,i=(i=i+Math.imul(c,ed)|0)+Math.imul(h,ea)|0,p=p+Math.imul(h,ed)|0,d=d+Math.imul(m,ep)|0;var eS=(o+d|0)+((8191&(i=(i=i+Math.imul(m,er)|0)+Math.imul(u,ep)|0))<<13)|0;o=((p=p+Math.imul(u,er)|0)+(i>>>13)|0)+(eS>>>26)|0,eS&=0x3ffffff,d=Math.imul(P,z),i=(i=Math.imul(P,K))+Math.imul(O,z)|0,p=Math.imul(O,K),d=d+Math.imul(I,j)|0,i=(i=i+Math.imul(I,q)|0)+Math.imul(B,j)|0,p=p+Math.imul(B,q)|0,d=d+Math.imul(A,W)|0,i=(i=i+Math.imul(A,G)|0)+Math.imul(_,W)|0,p=p+Math.imul(_,G)|0,d=d+Math.imul(E,Y)|0,i=(i=i+Math.imul(E,X)|0)+Math.imul(N,Y)|0,p=p+Math.imul(N,X)|0,d=d+Math.imul(y,Q)|0,i=(i=i+Math.imul(y,ee)|0)+Math.imul(w,Q)|0,p=p+Math.imul(w,ee)|0,d=d+Math.imul(b,ea)|0,i=(i=i+Math.imul(b,ed)|0)+Math.imul(v,ea)|0,p=p+Math.imul(v,ed)|0,d=d+Math.imul(c,ep)|0,i=(i=i+Math.imul(c,er)|0)+Math.imul(h,ep)|0,p=p+Math.imul(h,er)|0,d=d+Math.imul(m,es)|0;var eE=(o+d|0)+((8191&(i=(i=i+Math.imul(m,eo)|0)+Math.imul(u,es)|0))<<13)|0;o=((p=p+Math.imul(u,eo)|0)+(i>>>13)|0)+(eE>>>26)|0,eE&=0x3ffffff,d=Math.imul(R,z),i=(i=Math.imul(R,K))+Math.imul(M,z)|0,p=Math.imul(M,K),d=d+Math.imul(P,j)|0,i=(i=i+Math.imul(P,q)|0)+Math.imul(O,j)|0,p=p+Math.imul(O,q)|0,d=d+Math.imul(I,W)|0,i=(i=i+Math.imul(I,G)|0)+Math.imul(B,W)|0,p=p+Math.imul(B,G)|0,d=d+Math.imul(A,Y)|0,i=(i=i+Math.imul(A,X)|0)+Math.imul(_,Y)|0,p=p+Math.imul(_,X)|0,d=d+Math.imul(E,Q)|0,i=(i=i+Math.imul(E,ee)|0)+Math.imul(N,Q)|0,p=p+Math.imul(N,ee)|0,d=d+Math.imul(y,ea)|0,i=(i=i+Math.imul(y,ed)|0)+Math.imul(w,ea)|0,p=p+Math.imul(w,ed)|0,d=d+Math.imul(b,ep)|0,i=(i=i+Math.imul(b,er)|0)+Math.imul(v,ep)|0,p=p+Math.imul(v,er)|0,d=d+Math.imul(c,es)|0,i=(i=i+Math.imul(c,eo)|0)+Math.imul(h,es)|0,p=p+Math.imul(h,eo)|0,d=d+Math.imul(m,em)|0;var eN=(o+d|0)+((8191&(i=(i=i+Math.imul(m,eu)|0)+Math.imul(u,em)|0))<<13)|0;o=((p=p+Math.imul(u,eu)|0)+(i>>>13)|0)+(eN>>>26)|0,eN&=0x3ffffff,d=Math.imul(L,z),i=(i=Math.imul(L,K))+Math.imul(U,z)|0,p=Math.imul(U,K),d=d+Math.imul(R,j)|0,i=(i=i+Math.imul(R,q)|0)+Math.imul(M,j)|0,p=p+Math.imul(M,q)|0,d=d+Math.imul(P,W)|0,i=(i=i+Math.imul(P,G)|0)+Math.imul(O,W)|0,p=p+Math.imul(O,G)|0,d=d+Math.imul(I,Y)|0,i=(i=i+Math.imul(I,X)|0)+Math.imul(B,Y)|0,p=p+Math.imul(B,X)|0,d=d+Math.imul(A,Q)|0,i=(i=i+Math.imul(A,ee)|0)+Math.imul(_,Q)|0,p=p+Math.imul(_,ee)|0,d=d+Math.imul(E,ea)|0,i=(i=i+Math.imul(E,ed)|0)+Math.imul(N,ea)|0,p=p+Math.imul(N,ed)|0,d=d+Math.imul(y,ep)|0,i=(i=i+Math.imul(y,er)|0)+Math.imul(w,ep)|0,p=p+Math.imul(w,er)|0,d=d+Math.imul(b,es)|0,i=(i=i+Math.imul(b,eo)|0)+Math.imul(v,es)|0,p=p+Math.imul(v,eo)|0,d=d+Math.imul(c,em)|0,i=(i=i+Math.imul(c,eu)|0)+Math.imul(h,em)|0,p=p+Math.imul(h,eu)|0,d=d+Math.imul(m,ec)|0;var eT=(o+d|0)+((8191&(i=(i=i+Math.imul(m,eh)|0)+Math.imul(u,ec)|0))<<13)|0;o=((p=p+Math.imul(u,eh)|0)+(i>>>13)|0)+(eT>>>26)|0,eT&=0x3ffffff,d=Math.imul(L,j),i=(i=Math.imul(L,q))+Math.imul(U,j)|0,p=Math.imul(U,q),d=d+Math.imul(R,W)|0,i=(i=i+Math.imul(R,G)|0)+Math.imul(M,W)|0,p=p+Math.imul(M,G)|0,d=d+Math.imul(P,Y)|0,i=(i=i+Math.imul(P,X)|0)+Math.imul(O,Y)|0,p=p+Math.imul(O,X)|0,d=d+Math.imul(I,Q)|0,i=(i=i+Math.imul(I,ee)|0)+Math.imul(B,Q)|0,p=p+Math.imul(B,ee)|0,d=d+Math.imul(A,ea)|0,i=(i=i+Math.imul(A,ed)|0)+Math.imul(_,ea)|0,p=p+Math.imul(_,ed)|0,d=d+Math.imul(E,ep)|0,i=(i=i+Math.imul(E,er)|0)+Math.imul(N,ep)|0,p=p+Math.imul(N,er)|0,d=d+Math.imul(y,es)|0,i=(i=i+Math.imul(y,eo)|0)+Math.imul(w,es)|0,p=p+Math.imul(w,eo)|0,d=d+Math.imul(b,em)|0,i=(i=i+Math.imul(b,eu)|0)+Math.imul(v,em)|0,p=p+Math.imul(v,eu)|0,d=d+Math.imul(c,ec)|0;var eA=(o+d|0)+((8191&(i=(i=i+Math.imul(c,eh)|0)+Math.imul(h,ec)|0))<<13)|0;o=((p=p+Math.imul(h,eh)|0)+(i>>>13)|0)+(eA>>>26)|0,eA&=0x3ffffff,d=Math.imul(L,W),i=(i=Math.imul(L,G))+Math.imul(U,W)|0,p=Math.imul(U,G),d=d+Math.imul(R,Y)|0,i=(i=i+Math.imul(R,X)|0)+Math.imul(M,Y)|0,p=p+Math.imul(M,X)|0,d=d+Math.imul(P,Q)|0,i=(i=i+Math.imul(P,ee)|0)+Math.imul(O,Q)|0,p=p+Math.imul(O,ee)|0,d=d+Math.imul(I,ea)|0,i=(i=i+Math.imul(I,ed)|0)+Math.imul(B,ea)|0,p=p+Math.imul(B,ed)|0,d=d+Math.imul(A,ep)|0,i=(i=i+Math.imul(A,er)|0)+Math.imul(_,ep)|0,p=p+Math.imul(_,er)|0,d=d+Math.imul(E,es)|0,i=(i=i+Math.imul(E,eo)|0)+Math.imul(N,es)|0,p=p+Math.imul(N,eo)|0,d=d+Math.imul(y,em)|0,i=(i=i+Math.imul(y,eu)|0)+Math.imul(w,em)|0,p=p+Math.imul(w,eu)|0,d=d+Math.imul(b,ec)|0;var e_=(o+d|0)+((8191&(i=(i=i+Math.imul(b,eh)|0)+Math.imul(v,ec)|0))<<13)|0;o=((p=p+Math.imul(v,eh)|0)+(i>>>13)|0)+(e_>>>26)|0,e_&=0x3ffffff,d=Math.imul(L,Y),i=(i=Math.imul(L,X))+Math.imul(U,Y)|0,p=Math.imul(U,X),d=d+Math.imul(R,Q)|0,i=(i=i+Math.imul(R,ee)|0)+Math.imul(M,Q)|0,p=p+Math.imul(M,ee)|0,d=d+Math.imul(P,ea)|0,i=(i=i+Math.imul(P,ed)|0)+Math.imul(O,ea)|0,p=p+Math.imul(O,ed)|0,d=d+Math.imul(I,ep)|0,i=(i=i+Math.imul(I,er)|0)+Math.imul(B,ep)|0,p=p+Math.imul(B,er)|0,d=d+Math.imul(A,es)|0,i=(i=i+Math.imul(A,eo)|0)+Math.imul(_,es)|0,p=p+Math.imul(_,eo)|0,d=d+Math.imul(E,em)|0,i=(i=i+Math.imul(E,eu)|0)+Math.imul(N,em)|0,p=p+Math.imul(N,eu)|0,d=d+Math.imul(y,ec)|0;var ek=(o+d|0)+((8191&(i=(i=i+Math.imul(y,eh)|0)+Math.imul(w,ec)|0))<<13)|0;o=((p=p+Math.imul(w,eh)|0)+(i>>>13)|0)+(ek>>>26)|0,ek&=0x3ffffff,d=Math.imul(L,Q),i=(i=Math.imul(L,ee))+Math.imul(U,Q)|0,p=Math.imul(U,ee),d=d+Math.imul(R,ea)|0,i=(i=i+Math.imul(R,ed)|0)+Math.imul(M,ea)|0,p=p+Math.imul(M,ed)|0,d=d+Math.imul(P,ep)|0,i=(i=i+Math.imul(P,er)|0)+Math.imul(O,ep)|0,p=p+Math.imul(O,er)|0,d=d+Math.imul(I,es)|0,i=(i=i+Math.imul(I,eo)|0)+Math.imul(B,es)|0,p=p+Math.imul(B,eo)|0,d=d+Math.imul(A,em)|0,i=(i=i+Math.imul(A,eu)|0)+Math.imul(_,em)|0,p=p+Math.imul(_,eu)|0,d=d+Math.imul(E,ec)|0;var eI=(o+d|0)+((8191&(i=(i=i+Math.imul(E,eh)|0)+Math.imul(N,ec)|0))<<13)|0;o=((p=p+Math.imul(N,eh)|0)+(i>>>13)|0)+(eI>>>26)|0,eI&=0x3ffffff,d=Math.imul(L,ea),i=(i=Math.imul(L,ed))+Math.imul(U,ea)|0,p=Math.imul(U,ed),d=d+Math.imul(R,ep)|0,i=(i=i+Math.imul(R,er)|0)+Math.imul(M,ep)|0,p=p+Math.imul(M,er)|0,d=d+Math.imul(P,es)|0,i=(i=i+Math.imul(P,eo)|0)+Math.imul(O,es)|0,p=p+Math.imul(O,eo)|0,d=d+Math.imul(I,em)|0,i=(i=i+Math.imul(I,eu)|0)+Math.imul(B,em)|0,p=p+Math.imul(B,eu)|0,d=d+Math.imul(A,ec)|0;var eB=(o+d|0)+((8191&(i=(i=i+Math.imul(A,eh)|0)+Math.imul(_,ec)|0))<<13)|0;o=((p=p+Math.imul(_,eh)|0)+(i>>>13)|0)+(eB>>>26)|0,eB&=0x3ffffff,d=Math.imul(L,ep),i=(i=Math.imul(L,er))+Math.imul(U,ep)|0,p=Math.imul(U,er),d=d+Math.imul(R,es)|0,i=(i=i+Math.imul(R,eo)|0)+Math.imul(M,es)|0,p=p+Math.imul(M,eo)|0,d=d+Math.imul(P,em)|0,i=(i=i+Math.imul(P,eu)|0)+Math.imul(O,em)|0,p=p+Math.imul(O,eu)|0,d=d+Math.imul(I,ec)|0;var eD=(o+d|0)+((8191&(i=(i=i+Math.imul(I,eh)|0)+Math.imul(B,ec)|0))<<13)|0;o=((p=p+Math.imul(B,eh)|0)+(i>>>13)|0)+(eD>>>26)|0,eD&=0x3ffffff,d=Math.imul(L,es),i=(i=Math.imul(L,eo))+Math.imul(U,es)|0,p=Math.imul(U,eo),d=d+Math.imul(R,em)|0,i=(i=i+Math.imul(R,eu)|0)+Math.imul(M,em)|0,p=p+Math.imul(M,eu)|0,d=d+Math.imul(P,ec)|0;var eP=(o+d|0)+((8191&(i=(i=i+Math.imul(P,eh)|0)+Math.imul(O,ec)|0))<<13)|0;o=((p=p+Math.imul(O,eh)|0)+(i>>>13)|0)+(eP>>>26)|0,eP&=0x3ffffff,d=Math.imul(L,em),i=(i=Math.imul(L,eu))+Math.imul(U,em)|0,p=Math.imul(U,eu),d=d+Math.imul(R,ec)|0;var eO=(o+d|0)+((8191&(i=(i=i+Math.imul(R,eh)|0)+Math.imul(M,ec)|0))<<13)|0;o=((p=p+Math.imul(M,eh)|0)+(i>>>13)|0)+(eO>>>26)|0,eO&=0x3ffffff,d=Math.imul(L,ec);var eV=(o+d|0)+((8191&(i=(i=Math.imul(L,eh))+Math.imul(U,ec)|0))<<13)|0;return o=((p=Math.imul(U,eh))+(i>>>13)|0)+(eV>>>26)|0,eV&=0x3ffffff,s[0]=ex,s[1]=eb,s[2]=ev,s[3]=eg,s[4]=ey,s[5]=ew,s[6]=eS,s[7]=eE,s[8]=eN,s[9]=eT,s[10]=eA,s[11]=e_,s[12]=ek,s[13]=eI,s[14]=eB,s[15]=eD,s[16]=eP,s[17]=eO,s[18]=eV,0!==o&&(s[19]=o,a.length++),a};function b(e,t,a){a.negative=t.negative^e.negative,a.length=e.length+t.length;for(var d=0,i=0,p=0;p<a.length-1;p++){var r=i;i=0;for(var n=0x3ffffff&d,s=Math.min(p,t.length-1),o=Math.max(0,p-e.length+1);o<=s;o++){var l=p-o,m=(0|e.words[l])*(0|t.words[o]),u=0x3ffffff&m;r=r+(m/0x4000000|0)|0,n=0x3ffffff&(u=u+n|0),i+=(r=r+(u>>>26)|0)>>>26,r&=0x3ffffff}a.words[p]=n,d=r,r=i}return 0!==d?a.words[p]=d:a.length--,a._strip()}function v(e,t){this.x=e,this.y=t}Math.imul||(x=h),p.prototype.mulTo=function(e,t){var a,d=this.length+e.length;return 10===this.length&&10===e.length?a=x(this,e,t):d<63?a=h(this,e,t):a=b(this,e,t),a},v.prototype.makeRBT=function(e){for(var t=Array(e),a=p.prototype._countBits(e)-1,d=0;d<e;d++)t[d]=this.revBin(d,a,e);return t},v.prototype.revBin=function(e,t,a){if(0===e||e===a-1)return e;for(var d=0,i=0;i<t;i++)d|=(1&e)<<t-i-1,e>>=1;return d},v.prototype.permute=function(e,t,a,d,i,p){for(var r=0;r<p;r++)d[r]=t[e[r]],i[r]=a[e[r]]},v.prototype.transform=function(e,t,a,d,i,p){this.permute(p,e,t,a,d,i);for(var r=1;r<i;r<<=1)for(var n=r<<1,s=Math.cos(2*Math.PI/n),o=Math.sin(2*Math.PI/n),l=0;l<i;l+=n)for(var m=s,u=o,f=0;f<r;f++){var c=a[l+f],h=d[l+f],x=a[l+f+r],b=d[l+f+r],v=m*x-u*b;b=m*b+u*x,x=v,a[l+f]=c+x,d[l+f]=h+b,a[l+f+r]=c-x,d[l+f+r]=h-b,f!==n&&(v=s*m-o*u,u=s*u+o*m,m=v)}},v.prototype.guessLen13b=function(e,t){var a=1|Math.max(t,e),d=1&a,i=0;for(a=a/2|0;a;a>>>=1)i++;return 1<<i+1+d},v.prototype.conjugate=function(e,t,a){if(!(a<=1))for(var d=0;d<a/2;d++){var i=e[d];e[d]=e[a-d-1],e[a-d-1]=i,i=t[d],t[d]=-t[a-d-1],t[a-d-1]=-i}},v.prototype.normalize13b=function(e,t){for(var a=0,d=0;d<t/2;d++){var i=8192*Math.round(e[2*d+1]/t)+Math.round(e[2*d]/t)+a;e[d]=0x3ffffff&i,a=i<0x4000000?0:i/0x4000000|0}return e},v.prototype.convert13b=function(e,t,a,i){for(var p=0,r=0;r<t;r++)p+=0|e[r],a[2*r]=8191&p,p>>>=13,a[2*r+1]=8191&p,p>>>=13;for(r=2*t;r<i;++r)a[r]=0;d(0===p),d((-8192&p)==0)},v.prototype.stub=function(e){for(var t=Array(e),a=0;a<e;a++)t[a]=0;return t},v.prototype.mulp=function(e,t,a){var d=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(d),p=this.stub(d),r=Array(d),n=Array(d),s=Array(d),o=Array(d),l=Array(d),m=Array(d),u=a.words;u.length=d,this.convert13b(e.words,e.length,r,d),this.convert13b(t.words,t.length,o,d),this.transform(r,p,n,s,d,i),this.transform(o,p,l,m,d,i);for(var f=0;f<d;f++){var c=n[f]*l[f]-s[f]*m[f];s[f]=n[f]*m[f]+s[f]*l[f],n[f]=c}return this.conjugate(n,s,d),this.transform(n,s,u,p,d,i),this.conjugate(u,p,d),this.normalize13b(u,d),a.negative=e.negative^t.negative,a.length=e.length+t.length,a._strip()},p.prototype.mul=function(e){var t=new p(null);return t.words=Array(this.length+e.length),this.mulTo(e,t)},p.prototype.mulf=function(e){var t=new p(null);return t.words=Array(this.length+e.length),b(this,e,t)},p.prototype.imul=function(e){return this.clone().mulTo(e,this)},p.prototype.imuln=function(e){var t=e<0;t&&(e=-e),d("number"==typeof e),d(e<0x4000000);for(var a=0,i=0;i<this.length;i++){var p=(0|this.words[i])*e,r=(0x3ffffff&p)+(0x3ffffff&a);a>>=26,a+=(p/0x4000000|0)+(r>>>26),this.words[i]=0x3ffffff&r}return 0!==a&&(this.words[i]=a,this.length++),this.length=0===e?1:this.length,t?this.ineg():this},p.prototype.muln=function(e){return this.clone().imuln(e)},p.prototype.sqr=function(){return this.mul(this)},p.prototype.isqr=function(){return this.imul(this.clone())},p.prototype.pow=function(e){var t=function(e){for(var t=Array(e.bitLength()),a=0;a<t.length;a++){var d=a/26|0,i=a%26;t[a]=e.words[d]>>>i&1}return t}(e);if(0===t.length)return new p(1);for(var a=this,d=0;d<t.length&&0===t[d];d++,a=a.sqr());if(++d<t.length)for(var i=a.sqr();d<t.length;d++,i=i.sqr())0!==t[d]&&(a=a.mul(i));return a},p.prototype.iushln=function(e){d("number"==typeof e&&e>=0);var t,a=e%26,i=(e-a)/26,p=0x3ffffff>>>26-a<<26-a;if(0!==a){var r=0;for(t=0;t<this.length;t++){var n=this.words[t]&p,s=(0|this.words[t])-n<<a;this.words[t]=s|r,r=n>>>26-a}r&&(this.words[t]=r,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this._strip()},p.prototype.ishln=function(e){return d(0===this.negative),this.iushln(e)},p.prototype.iushrn=function(e,t,a){d("number"==typeof e&&e>=0);var i=t?(t-t%26)/26:0,p=e%26,r=Math.min((e-p)/26,this.length),n=0x3ffffff^0x3ffffff>>>p<<p;if(i-=r,i=Math.max(0,i),a){for(var s=0;s<r;s++)a.words[s]=this.words[s];a.length=r}if(0===r);else if(this.length>r)for(this.length-=r,s=0;s<this.length;s++)this.words[s]=this.words[s+r];else this.words[0]=0,this.length=1;var o=0;for(s=this.length-1;s>=0&&(0!==o||s>=i);s--){var l=0|this.words[s];this.words[s]=o<<26-p|l>>>p,o=l&n}return a&&0!==o&&(a.words[a.length++]=o),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},p.prototype.ishrn=function(e,t,a){return d(0===this.negative),this.iushrn(e,t,a)},p.prototype.shln=function(e){return this.clone().ishln(e)},p.prototype.ushln=function(e){return this.clone().iushln(e)},p.prototype.shrn=function(e){return this.clone().ishrn(e)},p.prototype.ushrn=function(e){return this.clone().iushrn(e)},p.prototype.testn=function(e){d("number"==typeof e&&e>=0);var t=e%26,a=(e-t)/26;return!(this.length<=a)&&!!(this.words[a]&1<<t)},p.prototype.imaskn=function(e){d("number"==typeof e&&e>=0);var t=e%26,a=(e-t)/26;return(d(0===this.negative,"imaskn works only with positive numbers"),this.length<=a)?this:(0!==t&&a++,this.length=Math.min(a,this.length),0!==t&&(this.words[this.length-1]&=0x3ffffff^0x3ffffff>>>t<<t),this._strip())},p.prototype.maskn=function(e){return this.clone().imaskn(e)},p.prototype.iaddn=function(e){return(d("number"==typeof e),d(e<0x4000000),e<0)?this.isubn(-e):0!==this.negative?(1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0):(this.negative=0,this.isubn(e),this.negative=1),this):this._iaddn(e)},p.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=0x4000000;t++)this.words[t]-=0x4000000,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},p.prototype.isubn=function(e){if(d("number"==typeof e),d(e<0x4000000),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=0x4000000,this.words[t+1]-=1;return this._strip()},p.prototype.addn=function(e){return this.clone().iaddn(e)},p.prototype.subn=function(e){return this.clone().isubn(e)},p.prototype.iabs=function(){return this.negative=0,this},p.prototype.abs=function(){return this.clone().iabs()},p.prototype._ishlnsubmul=function(e,t,a){var i,p,r=e.length+a;this._expand(r);var n=0;for(i=0;i<e.length;i++){p=(0|this.words[i+a])+n;var s=(0|e.words[i])*t;p-=0x3ffffff&s,n=(p>>26)-(s/0x4000000|0),this.words[i+a]=0x3ffffff&p}for(;i<this.length-a;i++)n=(p=(0|this.words[i+a])+n)>>26,this.words[i+a]=0x3ffffff&p;if(0===n)return this._strip();for(d(-1===n),n=0,i=0;i<this.length;i++)n=(p=-(0|this.words[i])+n)>>26,this.words[i]=0x3ffffff&p;return this.negative=1,this._strip()},p.prototype._wordDiv=function(e,t){var a,d=this.length-e.length,i=this.clone(),r=e,n=0|r.words[r.length-1];0!=(d=26-this._countBits(n))&&(r=r.ushln(d),i.iushln(d),n=0|r.words[r.length-1]);var s=i.length-r.length;if("mod"!==t){(a=new p(null)).length=s+1,a.words=Array(a.length);for(var o=0;o<a.length;o++)a.words[o]=0}var l=i.clone()._ishlnsubmul(r,1,s);0===l.negative&&(i=l,a&&(a.words[s]=1));for(var m=s-1;m>=0;m--){var u=(0|i.words[r.length+m])*0x4000000+(0|i.words[r.length+m-1]);for(u=Math.min(u/n|0,0x3ffffff),i._ishlnsubmul(r,u,m);0!==i.negative;)u--,i.negative=0,i._ishlnsubmul(r,1,m),i.isZero()||(i.negative^=1);a&&(a.words[m]=u)}return a&&a._strip(),i._strip(),"div"!==t&&0!==d&&i.iushrn(d),{div:a||null,mod:i}},p.prototype.divmod=function(e,t,a){var i,r,n;return(d(!e.isZero()),this.isZero())?{div:new p(0),mod:new p(0)}:0!==this.negative&&0===e.negative?(n=this.neg().divmod(e,t),"mod"!==t&&(i=n.div.neg()),"div"!==t&&(r=n.mod.neg(),a&&0!==r.negative&&r.iadd(e)),{div:i,mod:r}):0===this.negative&&0!==e.negative?(n=this.divmod(e.neg(),t),"mod"!==t&&(i=n.div.neg()),{div:i,mod:n.mod}):(this.negative&e.negative)!=0?(n=this.neg().divmod(e.neg(),t),"div"!==t&&(r=n.mod.neg(),a&&0!==r.negative&&r.isub(e)),{div:n.div,mod:r}):e.length>this.length||0>this.cmp(e)?{div:new p(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new p(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new p(this.modrn(e.words[0]))}:this._wordDiv(e,t)},p.prototype.div=function(e){return this.divmod(e,"div",!1).div},p.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},p.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},p.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var a=0!==t.div.negative?t.mod.isub(e):t.mod,d=e.ushrn(1),i=e.andln(1),p=a.cmp(d);return p<0||1===i&&0===p?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},p.prototype.modrn=function(e){var t=e<0;t&&(e=-e),d(e<=0x3ffffff);for(var a=0x4000000%e,i=0,p=this.length-1;p>=0;p--)i=(a*i+(0|this.words[p]))%e;return t?-i:i},p.prototype.modn=function(e){return this.modrn(e)},p.prototype.idivn=function(e){var t=e<0;t&&(e=-e),d(e<=0x3ffffff);for(var a=0,i=this.length-1;i>=0;i--){var p=(0|this.words[i])+0x4000000*a;this.words[i]=p/e|0,a=p%e}return this._strip(),t?this.ineg():this},p.prototype.divn=function(e){return this.clone().idivn(e)},p.prototype.egcd=function(e){d(0===e.negative),d(!e.isZero());var t=this,a=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new p(1),r=new p(0),n=new p(0),s=new p(1),o=0;t.isEven()&&a.isEven();)t.iushrn(1),a.iushrn(1),++o;for(var l=a.clone(),m=t.clone();!t.isZero();){for(var u=0,f=1;(t.words[0]&f)==0&&u<26;++u,f<<=1);if(u>0)for(t.iushrn(u);u-- >0;)(i.isOdd()||r.isOdd())&&(i.iadd(l),r.isub(m)),i.iushrn(1),r.iushrn(1);for(var c=0,h=1;(a.words[0]&h)==0&&c<26;++c,h<<=1);if(c>0)for(a.iushrn(c);c-- >0;)(n.isOdd()||s.isOdd())&&(n.iadd(l),s.isub(m)),n.iushrn(1),s.iushrn(1);t.cmp(a)>=0?(t.isub(a),i.isub(n),r.isub(s)):(a.isub(t),n.isub(i),s.isub(r))}return{a:n,b:s,gcd:a.iushln(o)}},p.prototype._invmp=function(e){d(0===e.negative),d(!e.isZero());var t,a=this,i=e.clone();a=0!==a.negative?a.umod(e):a.clone();for(var r=new p(1),n=new p(0),s=i.clone();a.cmpn(1)>0&&i.cmpn(1)>0;){for(var o=0,l=1;(a.words[0]&l)==0&&o<26;++o,l<<=1);if(o>0)for(a.iushrn(o);o-- >0;)r.isOdd()&&r.iadd(s),r.iushrn(1);for(var m=0,u=1;(i.words[0]&u)==0&&m<26;++m,u<<=1);if(m>0)for(i.iushrn(m);m-- >0;)n.isOdd()&&n.iadd(s),n.iushrn(1);a.cmp(i)>=0?(a.isub(i),r.isub(n)):(i.isub(a),n.isub(r))}return 0>(t=0===a.cmpn(1)?r:n).cmpn(0)&&t.iadd(e),t},p.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),a=e.clone();t.negative=0,a.negative=0;for(var d=0;t.isEven()&&a.isEven();d++)t.iushrn(1),a.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;a.isEven();)a.iushrn(1);var i=t.cmp(a);if(i<0){var p=t;t=a,a=p}else if(0===i||0===a.cmpn(1))break;t.isub(a)}return a.iushln(d)},p.prototype.invm=function(e){return this.egcd(e).a.umod(e)},p.prototype.isEven=function(){return(1&this.words[0])==0},p.prototype.isOdd=function(){return(1&this.words[0])==1},p.prototype.andln=function(e){return this.words[0]&e},p.prototype.bincn=function(e){d("number"==typeof e);var t=e%26,a=(e-t)/26,i=1<<t;if(this.length<=a)return this._expand(a+1),this.words[a]|=i,this;for(var p=i,r=a;0!==p&&r<this.length;r++){var n=0|this.words[r];n+=p,p=n>>>26,n&=0x3ffffff,this.words[r]=n}return 0!==p&&(this.words[r]=p,this.length++),this},p.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},p.prototype.cmpn=function(e){var t,a=e<0;if(0!==this.negative&&!a)return -1;if(0===this.negative&&a)return 1;if(this._strip(),this.length>1)t=1;else{a&&(e=-e),d(e<=0x3ffffff,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},p.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return -1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},p.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return -1;for(var t=0,a=this.length-1;a>=0;a--){var d=0|this.words[a],i=0|e.words[a];if(d!==i){d<i?t=-1:d>i&&(t=1);break}}return t},p.prototype.gtn=function(e){return 1===this.cmpn(e)},p.prototype.gt=function(e){return 1===this.cmp(e)},p.prototype.gten=function(e){return this.cmpn(e)>=0},p.prototype.gte=function(e){return this.cmp(e)>=0},p.prototype.ltn=function(e){return -1===this.cmpn(e)},p.prototype.lt=function(e){return -1===this.cmp(e)},p.prototype.lten=function(e){return 0>=this.cmpn(e)},p.prototype.lte=function(e){return 0>=this.cmp(e)},p.prototype.eqn=function(e){return 0===this.cmpn(e)},p.prototype.eq=function(e){return 0===this.cmp(e)},p.red=function(e){return new T(e)},p.prototype.toRed=function(e){return d(!this.red,"Already a number in reduction context"),d(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},p.prototype.fromRed=function(){return d(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},p.prototype._forceRed=function(e){return this.red=e,this},p.prototype.forceRed=function(e){return d(!this.red,"Already a number in reduction context"),this._forceRed(e)},p.prototype.redAdd=function(e){return d(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},p.prototype.redIAdd=function(e){return d(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},p.prototype.redSub=function(e){return d(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},p.prototype.redISub=function(e){return d(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},p.prototype.redShl=function(e){return d(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},p.prototype.redMul=function(e){return d(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},p.prototype.redIMul=function(e){return d(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},p.prototype.redSqr=function(){return d(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},p.prototype.redISqr=function(){return d(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},p.prototype.redSqrt=function(){return d(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},p.prototype.redInvm=function(){return d(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},p.prototype.redNeg=function(){return d(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},p.prototype.redPow=function(e){return d(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var g={k256:null,p224:null,p192:null,p25519:null};function y(e,t){this.name=e,this.p=new p(t,16),this.n=this.p.bitLength(),this.k=new p(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function w(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function S(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function E(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function N(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function T(e){if("string"==typeof e){var t=p._prime(e);this.m=t.p,this.prime=t}else d(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function A(e){T.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new p(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}y.prototype._tmp=function(){var e=new p(null);return e.words=Array(Math.ceil(this.n/13)),e},y.prototype.ireduce=function(e){var t,a=e;do this.split(a,this.tmp),t=(a=(a=this.imulK(a)).iadd(this.tmp)).bitLength();while(t>this.n);var d=t<this.n?-1:a.ucmp(this.p);return 0===d?(a.words[0]=0,a.length=1):d>0?a.isub(this.p):void 0!==a.strip?a.strip():a._strip(),a},y.prototype.split=function(e,t){e.iushrn(this.n,0,t)},y.prototype.imulK=function(e){return e.imul(this.k)},i(w,y),w.prototype.split=function(e,t){for(var a=Math.min(e.length,9),d=0;d<a;d++)t.words[d]=e.words[d];if(t.length=a,e.length<=9){e.words[0]=0,e.length=1;return}var i=e.words[9];for(d=10,t.words[t.length++]=4194303&i;d<e.length;d++){var p=0|e.words[d];e.words[d-10]=(4194303&p)<<4|i>>>22,i=p}i>>>=22,e.words[d-10]=i,0===i&&e.length>10?e.length-=10:e.length-=9},w.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,a=0;a<e.length;a++){var d=0|e.words[a];t+=977*d,e.words[a]=0x3ffffff&t,t=64*d+(t/0x4000000|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(S,y),i(E,y),i(N,y),N.prototype.imulK=function(e){for(var t=0,a=0;a<e.length;a++){var d=(0|e.words[a])*19+t,i=0x3ffffff&d;d>>>=26,e.words[a]=i,t=d}return 0!==t&&(e.words[e.length++]=t),e},p._prime=function(e){var t;if(g[e])return g[e];if("k256"===e)t=new w;else if("p224"===e)t=new S;else if("p192"===e)t=new E;else if("p25519"===e)t=new N;else throw Error("Unknown prime "+e);return g[e]=t,t},T.prototype._verify1=function(e){d(0===e.negative,"red works only with positives"),d(e.red,"red works only with red numbers")},T.prototype._verify2=function(e,t){d((e.negative|t.negative)==0,"red works only with positives"),d(e.red&&e.red===t.red,"red works only with red numbers")},T.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(o(e,e.umod(this.m)._forceRed(this)),e)},T.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},T.prototype.add=function(e,t){this._verify2(e,t);var a=e.add(t);return a.cmp(this.m)>=0&&a.isub(this.m),a._forceRed(this)},T.prototype.iadd=function(e,t){this._verify2(e,t);var a=e.iadd(t);return a.cmp(this.m)>=0&&a.isub(this.m),a},T.prototype.sub=function(e,t){this._verify2(e,t);var a=e.sub(t);return 0>a.cmpn(0)&&a.iadd(this.m),a._forceRed(this)},T.prototype.isub=function(e,t){this._verify2(e,t);var a=e.isub(t);return 0>a.cmpn(0)&&a.iadd(this.m),a},T.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},T.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},T.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},T.prototype.isqr=function(e){return this.imul(e,e.clone())},T.prototype.sqr=function(e){return this.mul(e,e)},T.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(d(t%2==1),3===t){var a=this.m.add(new p(1)).iushrn(2);return this.pow(e,a)}for(var i=this.m.subn(1),r=0;!i.isZero()&&0===i.andln(1);)r++,i.iushrn(1);d(!i.isZero());var n=new p(1).toRed(this),s=n.redNeg(),o=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new p(2*l*l).toRed(this);0!==this.pow(l,o).cmp(s);)l.redIAdd(s);for(var m=this.pow(l,i),u=this.pow(e,i.addn(1).iushrn(1)),f=this.pow(e,i),c=r;0!==f.cmp(n);){for(var h=f,x=0;0!==h.cmp(n);x++)h=h.redSqr();d(x<c);var b=this.pow(m,new p(1).iushln(c-x-1));u=u.redMul(b),m=b.redSqr(),f=f.redMul(m),c=x}return u},T.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},T.prototype.pow=function(e,t){if(t.isZero())return new p(1).toRed(this);if(0===t.cmpn(1))return e.clone();var a=Array(16);a[0]=new p(1).toRed(this),a[1]=e;for(var d=2;d<a.length;d++)a[d]=this.mul(a[d-1],e);var i=a[0],r=0,n=0,s=t.bitLength()%26;for(0===s&&(s=26),d=t.length-1;d>=0;d--){for(var o=t.words[d],l=s-1;l>=0;l--){var m=o>>l&1;if(i!==a[0]&&(i=this.sqr(i)),0===m&&0===r){n=0;continue}r<<=1,r|=m,(4==++n||0===d&&0===l)&&(i=this.mul(i,a[r]),n=0,r=0)}s=26}return i},T.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},T.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},p.mont=function(e){return new A(e)},i(A,T),A.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},A.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},A.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var a=e.imul(t),d=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=a.isub(d).iushrn(this.shift),p=i;return i.cmp(this.m)>=0?p=i.isub(this.m):0>i.cmpn(0)&&(p=i.iadd(this.m)),p._forceRed(this)},A.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new p(0)._forceRed(this);var a=e.mul(t),d=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=a.isub(d).iushrn(this.shift),r=i;return i.cmp(this.m)>=0?r=i.isub(this.m):0>i.cmpn(0)&&(r=i.iadd(this.m)),r._forceRed(this)},A.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=a.nmd(e),this)},3873:e=>{"use strict";e.exports=require("path")},3945:(e,t,a)=>{var d=a(9428),i=d.Buffer;function p(e,t){for(var a in e)t[a]=e[a]}function r(e,t,a){return i(e,t,a)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=d:(p(d,t),t.Buffer=r),r.prototype=Object.create(i.prototype),p(i,r),r.from=function(e,t,a){if("number"==typeof e)throw TypeError("Argument must not be a number");return i(e,t,a)},r.alloc=function(e,t,a){if("number"!=typeof e)throw TypeError("Argument must be a number");var d=i(e);return void 0!==t?"string"==typeof a?d.fill(t,a):d.fill(t):d.fill(0),d},r.allocUnsafe=function(e){if("number"!=typeof e)throw TypeError("Argument must be a number");return i(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw TypeError("Argument must be a number");return d.SlowBuffer(e)}},4340:(e,t,a)=>{var d=a(3873).sep||"/";e.exports=function(e){if("string"!=typeof e||e.length<=7||"file://"!=e.substring(0,7))throw TypeError("must pass in a file:// URI to convert to a file path");var t=decodeURI(e.substring(7)),a=t.indexOf("/"),i=t.substring(0,a),p=t.substring(a+1);return"localhost"==i&&(i=""),i&&(i=d+d+i),p=p.replace(/^(.+)\|/,"$1:"),"\\"==d&&(p=p.replace(/\//g,"\\")),/^.+\:/.test(p)||(p=d+p),i+p}},4361:(e,t,a)=>{"use strict";let d=a(9989),i=a(7646),p=a(5832),r=i.implSymbol;function n(t){if(!this||this[r]||!(this instanceof n))throw TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=d.USVString(a[0]),void 0!==a[1]&&(a[1]=d.USVString(a[1])),e.exports.setup(this,a)}n.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");let t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[r].toJSON.apply(this[r],t)},Object.defineProperty(n.prototype,"href",{get(){return this[r].href},set(e){e=d.USVString(e),this[r].href=e},enumerable:!0,configurable:!0}),n.prototype.toString=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");return this.href},Object.defineProperty(n.prototype,"origin",{get(){return this[r].origin},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"protocol",{get(){return this[r].protocol},set(e){e=d.USVString(e),this[r].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"username",{get(){return this[r].username},set(e){e=d.USVString(e),this[r].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"password",{get(){return this[r].password},set(e){e=d.USVString(e),this[r].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"host",{get(){return this[r].host},set(e){e=d.USVString(e),this[r].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"hostname",{get(){return this[r].hostname},set(e){e=d.USVString(e),this[r].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"port",{get(){return this[r].port},set(e){e=d.USVString(e),this[r].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"pathname",{get(){return this[r].pathname},set(e){e=d.USVString(e),this[r].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"search",{get(){return this[r].search},set(e){e=d.USVString(e),this[r].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"hash",{get(){return this[r].hash},set(e){e=d.USVString(e),this[r].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[r]instanceof p.implementation,create(e,t){let a=Object.create(n.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[r]=new p.implementation(t,a),e[r][i.wrapperSymbol]=e},interface:n,expose:{Window:{URL:n},Worker:{URL:n}}}},4618:(e,t,a)=>{"use strict";let d,i,p,r,n;a.r(t),a.d(t,{patchFetch:()=>lG,routeModule:()=>lj,serverHooks:()=>lW,workAsyncStorage:()=>lq,workUnitAsyncStorage:()=>l$});var s,o,l,m,u,f,c,h,x,b={};a.r(b),a.d(b,{OG:()=>eh,My:()=>er,Ph:()=>eo,lX:()=>el,Id:()=>ec,fg:()=>ev,qj:()=>ef,aT:()=>es,lq:()=>em,z:()=>eu,Q5:()=>ey});var v={};a.r(v),a.d(v,{DELETE:()=>lK,GET:()=>lF,POST:()=>lz,getDecryptedPrivateKey:()=>lH});var g=a(7785),y=a(966),w=a(5037),S=a(2456),E=a(5511);let N="aes-256-cbc",T=process.env.MASTER_ENCRYPTION_KEY;if(!T)throw Error("FATAL: MASTER_ENCRYPTION_KEY environment variable is not set.");let A=new Uint8Array((0,E.scryptSync)(T,"salt",32));var _=a(8923);function k(e){if(!Number.isSafeInteger(e)||e<0)throw Error(`Wrong positive integer: ${e}`)}function I(e,...t){if(!(e instanceof Uint8Array))throw Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function B(e){if("function"!=typeof e||"function"!=typeof e.create)throw Error("Hash should be wrapped by utils.wrapConstructor");k(e.outputLen),k(e.blockLen)}function D(e,t=!0){if(e.destroyed)throw Error("Hash instance has been destroyed");if(t&&e.finished)throw Error("Hash#digest() has already been called")}function P(e,t){I(e);let a=t.outputLen;if(e.length<a)throw Error(`digestInto() expects output buffer of length at least ${a}`)}let O=require("node:crypto");var V=a.t(O,2);let R=V&&"object"==typeof V&&"webcrypto"in V?O.webcrypto:void 0,M=e=>e instanceof Uint8Array,C=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),L=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),U=(e,t)=>e<<32-t|e>>>t;if(68!==new Uint8Array(new Uint32Array([0x11223344]).buffer)[0])throw Error("Non little-endian hardware is not supported");(e,t)=>t.toString(16).padStart(2,"0");let F=async()=>{};async function z(e,t,a){let d=Date.now();for(let i=0;i<e;i++){a(i);let e=Date.now()-d;e>=0&&e<t||(await F(),d+=e)}}function K(e){if("string"==typeof e&&(e=function(e){if("string"!=typeof e)throw Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}(e)),!M(e))throw Error(`expected Uint8Array, got ${typeof e}`);return e}class H{clone(){return this._cloneInto()}}let j={}.toString;function q(e,t){if(void 0!==t&&"[object Object]"!==j.call(t))throw Error("Options should be object or undefined");return Object.assign(e,t)}function $(e){let t=t=>e().update(K(t)).digest(),a=e();return t.outputLen=a.outputLen,t.blockLen=a.blockLen,t.create=()=>e(),t}function W(e=32){if(R&&"function"==typeof R.getRandomValues)return R.getRandomValues(new Uint8Array(e));throw Error("crypto.getRandomValues must be defined")}class G extends H{constructor(e,t,a,d){super(),this.blockLen=e,this.outputLen=t,this.padOffset=a,this.isLE=d,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=L(this.buffer)}update(e){D(this);let{view:t,buffer:a,blockLen:d}=this,i=(e=K(e)).length;for(let p=0;p<i;){let r=Math.min(d-this.pos,i-p);if(r===d){let t=L(e);for(;d<=i-p;p+=d)this.process(t,p);continue}a.set(e.subarray(p,p+r),this.pos),this.pos+=r,p+=r,this.pos===d&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){D(this),P(e,this),this.finished=!0;let{buffer:t,view:a,blockLen:d,isLE:i}=this,{pos:p}=this;t[p++]=128,this.buffer.subarray(p).fill(0),this.padOffset>d-p&&(this.process(a,0),p=0);for(let e=p;e<d;e++)t[e]=0;!function(e,t,a,d){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,a,d);let i=BigInt(32),p=BigInt(0xffffffff),r=Number(a>>i&p),n=Number(a&p),s=4*!!d,o=4*!d;e.setUint32(t+s,r,d),e.setUint32(t+o,n,d)}(a,d-8,BigInt(8*this.length),i),this.process(a,0);let r=L(e),n=this.outputLen;if(n%4)throw Error("_sha2: outputLen should be aligned to 32bit");let s=n/4,o=this.get();if(s>o.length)throw Error("_sha2: outputLen bigger than state");for(let e=0;e<s;e++)r.setUint32(4*e,o[e],i)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let a=e.slice(0,t);return this.destroy(),a}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:a,length:d,finished:i,destroyed:p,pos:r}=this;return e.length=d,e.pos=r,e.finished=i,e.destroyed=p,d%t&&e.buffer.set(a),e}}let Z=(e,t,a)=>e&t^~e&a,Y=(e,t,a)=>e&t^e&a^t&a,X=new Uint32Array([0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0xfc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x6ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2]),J=new Uint32Array([0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19]),Q=new Uint32Array(64);class ee extends G{constructor(){super(64,32,8,!1),this.A=0|J[0],this.B=0|J[1],this.C=0|J[2],this.D=0|J[3],this.E=0|J[4],this.F=0|J[5],this.G=0|J[6],this.H=0|J[7]}get(){let{A:e,B:t,C:a,D:d,E:i,F:p,G:r,H:n}=this;return[e,t,a,d,i,p,r,n]}set(e,t,a,d,i,p,r,n){this.A=0|e,this.B=0|t,this.C=0|a,this.D=0|d,this.E=0|i,this.F=0|p,this.G=0|r,this.H=0|n}process(e,t){for(let a=0;a<16;a++,t+=4)Q[a]=e.getUint32(t,!1);for(let e=16;e<64;e++){let t=Q[e-15],a=Q[e-2],d=U(t,7)^U(t,18)^t>>>3,i=U(a,17)^U(a,19)^a>>>10;Q[e]=i+Q[e-7]+d+Q[e-16]|0}let{A:a,B:d,C:i,D:p,E:r,F:n,G:s,H:o}=this;for(let e=0;e<64;e++){let t=o+(U(r,6)^U(r,11)^U(r,25))+Z(r,n,s)+X[e]+Q[e]|0,l=(U(a,2)^U(a,13)^U(a,22))+Y(a,d,i)|0;o=s,s=n,n=r,r=p+t|0,p=i,i=d,d=a,a=t+l|0}a=a+this.A|0,d=d+this.B|0,i=i+this.C|0,p=p+this.D|0,r=r+this.E|0,n=n+this.F|0,s=s+this.G|0,o=o+this.H|0,this.set(a,d,i,p,r,n,s,o)}roundClean(){Q.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}let et=$(()=>new ee),ea=(BigInt(0),BigInt(1)),ed=BigInt(2),ei=e=>e instanceof Uint8Array,ep=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function er(e){if(!ei(e))throw Error("Uint8Array expected");let t="";for(let a=0;a<e.length;a++)t+=ep[e[a]];return t}function en(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function es(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);let t=e.length;if(t%2)throw Error("padded hex string expected, got unpadded hex of length "+t);let a=new Uint8Array(t/2);for(let t=0;t<a.length;t++){let d=2*t,i=Number.parseInt(e.slice(d,d+2),16);if(Number.isNaN(i)||i<0)throw Error("Invalid byte sequence");a[t]=i}return a}function eo(e){return en(er(e))}function el(e){if(!ei(e))throw Error("Uint8Array expected");return en(er(Uint8Array.from(e).reverse()))}function em(e,t){return es(e.toString(16).padStart(2*t,"0"))}function eu(e,t){return em(e,t).reverse()}function ef(e,t,a){let d;if("string"==typeof t)try{d=es(t)}catch(a){throw Error(`${e} must be valid hex string, got "${t}". Cause: ${a}`)}else if(ei(t))d=Uint8Array.from(t);else throw Error(`${e} must be hex string or Uint8Array`);let i=d.length;if("number"==typeof a&&i!==a)throw Error(`${e} expected ${a} bytes, got ${i}`);return d}function ec(...e){let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0)),a=0;return e.forEach(e=>{if(!ei(e))throw Error("Uint8Array expected");t.set(e,a),a+=e.length}),t}let eh=e=>(ed<<BigInt(e-1))-ea,ex=e=>new Uint8Array(e),eb=e=>Uint8Array.from(e);function ev(e,t,a){if("number"!=typeof e||e<2)throw Error("hashLen must be a number");if("number"!=typeof t||t<2)throw Error("qByteLen must be a number");if("function"!=typeof a)throw Error("hmacFn must be a function");let d=ex(e),i=ex(e),p=0,r=()=>{d.fill(1),i.fill(0),p=0},n=(...e)=>a(i,d,...e),s=(e=ex())=>{i=n(eb([0]),e),d=n(),0!==e.length&&(i=n(eb([1]),e),d=n())},o=()=>{if(p++>=1e3)throw Error("drbg: tried 1000 values");let e=0,a=[];for(;e<t;){let t=(d=n()).slice();a.push(t),e+=d.length}return ec(...a)};return(e,t)=>{let a;for(r(),s(e);!(a=t(o()));)s();return r(),a}}let eg={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,stringOrUint8Array:e=>"string"==typeof e||e instanceof Uint8Array,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function ey(e,t,a={}){let d=(t,a,d)=>{let i=eg[a];if("function"!=typeof i)throw Error(`Invalid validator "${a}", expected function`);let p=e[t];if((!d||void 0!==p)&&!i(p,e))throw Error(`Invalid param ${String(t)}=${p} (${typeof p}), expected ${a}`)};for(let[e,a]of Object.entries(t))d(e,a,!1);for(let[e,t]of Object.entries(a))d(e,t,!0);return e}let ew=BigInt(0),eS=BigInt(1),eE=BigInt(2),eN=BigInt(3),eT=BigInt(4),eA=BigInt(5),e_=BigInt(8);function ek(e,t){let a=e%t;return a>=ew?a:t+a}function eI(e,t,a){let d=e;for(;t-- >ew;)d*=d,d%=a;return d}function eB(e,t){if(e===ew||t<=ew)throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);let a=ek(e,t),d=t,i=ew,p=eS,r=eS,n=ew;for(;a!==ew;){let e=d/a,t=d%a,s=i-r*e,o=p-n*e;d=a,a=t,i=r,p=n,r=s,n=o}if(d!==eS)throw Error("invert: does not exist");return ek(i,t)}BigInt(9),BigInt(16);let eD=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function eP(e,t){let a=void 0!==t?t:e.toString(2).length,d=Math.ceil(a/8);return{nBitLength:a,nByteLength:d}}function eO(e){if("bigint"!=typeof e)throw Error("field order must be bigint");return Math.ceil(e.toString(2).length/8)}function eV(e){let t=eO(e);return t+Math.ceil(t/2)}class eR extends H{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,B(e);let a=K(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let d=this.blockLen,i=new Uint8Array(d);i.set(a.length>d?e.create().update(a).digest():a);for(let e=0;e<i.length;e++)i[e]^=54;this.iHash.update(i),this.oHash=e.create();for(let e=0;e<i.length;e++)i[e]^=106;this.oHash.update(i),i.fill(0)}update(e){return D(this),this.iHash.update(e),this}digestInto(e){D(this),I(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:a,finished:d,destroyed:i,blockLen:p,outputLen:r}=this;return e.finished=d,e.destroyed=i,e.blockLen=p,e.outputLen=r,e.oHash=t._cloneInto(e.oHash),e.iHash=a._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}let eM=(e,t,a)=>new eR(e,t).update(a).digest();eM.create=(e,t)=>new eR(e,t);let eC=BigInt(0),eL=BigInt(1);function eU(e){return ey(e.Fp,eD.reduce((e,t)=>(e[t]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"})),ey(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...eP(e.n,e.nBitLength),...e,...{p:e.Fp.ORDER}})}let{Ph:eF,aT:ez}=b,eK={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){let{Err:t}=eK;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");let a=e[1],d=e.subarray(2,a+2);if(!a||d.length!==a)throw new t("Invalid signature integer: wrong length");if(128&d[0])throw new t("Invalid signature integer: negative");if(0===d[0]&&!(128&d[1]))throw new t("Invalid signature integer: unnecessary leading zero");return{d:eF(d),l:e.subarray(a+2)}},toSig(e){let{Err:t}=eK,a="string"==typeof e?ez(e):e;if(!(a instanceof Uint8Array))throw Error("ui8a expected");let d=a.length;if(d<2||48!=a[0])throw new t("Invalid signature tag");if(a[1]!==d-2)throw new t("Invalid signature: incorrect length");let{d:i,l:p}=eK._parseInt(a.subarray(2)),{d:r,l:n}=eK._parseInt(p);if(n.length)throw new t("Invalid signature: left bytes after parsing");return{r:i,s:r}},hexFromSig(e){let t=e=>8&Number.parseInt(e[0],16)?"00"+e:e,a=e=>{let t=e.toString(16);return 1&t.length?`0${t}`:t},d=t(a(e.s)),i=t(a(e.r)),p=d.length/2,r=i.length/2,n=a(p),s=a(r);return`30${a(r+p+4)}02${s}${i}02${n}${d}`}},eH=BigInt(0),ej=BigInt(1),eq=(BigInt(2),BigInt(3)),e$=(BigInt(4),BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f")),eW=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),eG=BigInt(1),eZ=BigInt(2),eY=(e,t)=>(e+t/eZ)/t,eX=function(e,t,a=!1,d={}){if(e<=ew)throw Error(`Expected Field ORDER > 0, got ${e}`);let{nBitLength:i,nByteLength:p}=eP(e,t);if(p>2048)throw Error("Field lengths over 2048 bytes are not supported");let r=function(e){if(e%eT===eN){let t=(e+eS)/eT;return function(e,a){let d=e.pow(a,t);if(!e.eql(e.sqr(d),a))throw Error("Cannot find square root");return d}}if(e%e_===eA){let t=(e-eA)/e_;return function(e,a){let d=e.mul(a,eE),i=e.pow(d,t),p=e.mul(a,i),r=e.mul(e.mul(p,eE),i),n=e.mul(p,e.sub(r,e.ONE));if(!e.eql(e.sqr(n),a))throw Error("Cannot find square root");return n}}return function(e){let t,a,d,i=(e-eS)/eE;for(t=e-eS,a=0;t%eE===ew;t/=eE,a++);for(d=eE;d<e&&function(e,t,a){if(a<=ew||t<ew)throw Error("Expected power/modulo > 0");if(a===eS)return ew;let d=eS;for(;t>ew;)t&eS&&(d=d*e%a),e=e*e%a,t>>=eS;return d}(d,i,e)!==e-eS;d++);if(1===a){let t=(e+eS)/eT;return function(e,a){let d=e.pow(a,t);if(!e.eql(e.sqr(d),a))throw Error("Cannot find square root");return d}}let p=(t+eS)/eE;return function(e,r){if(e.pow(r,i)===e.neg(e.ONE))throw Error("Cannot find square root");let n=a,s=e.pow(e.mul(e.ONE,d),t),o=e.pow(r,p),l=e.pow(r,t);for(;!e.eql(l,e.ONE);){if(e.eql(l,e.ZERO))return e.ZERO;let t=1;for(let a=e.sqr(l);t<n&&!e.eql(a,e.ONE);t++)a=e.sqr(a);let a=e.pow(s,eS<<BigInt(n-t-1));s=e.sqr(a),o=e.mul(o,a),l=e.mul(l,s),n=t}return o}}(e)}(e),n=Object.freeze({ORDER:e,BITS:i,BYTES:p,MASK:eh(i),ZERO:ew,ONE:eS,create:t=>ek(t,e),isValid:t=>{if("bigint"!=typeof t)throw Error(`Invalid field element: expected bigint, got ${typeof t}`);return ew<=t&&t<e},is0:e=>e===ew,isOdd:e=>(e&eS)===eS,neg:t=>ek(-t,e),eql:(e,t)=>e===t,sqr:t=>ek(t*t,e),add:(t,a)=>ek(t+a,e),sub:(t,a)=>ek(t-a,e),mul:(t,a)=>ek(t*a,e),pow:(e,t)=>(function(e,t,a){if(a<ew)throw Error("Expected power > 0");if(a===ew)return e.ONE;if(a===eS)return t;let d=e.ONE,i=t;for(;a>ew;)a&eS&&(d=e.mul(d,i)),i=e.sqr(i),a>>=eS;return d})(n,e,t),div:(t,a)=>ek(t*eB(a,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>eB(t,e),sqrt:d.sqrt||(e=>r(n,e)),invertBatch:e=>(function(e,t){let a=Array(t.length),d=t.reduce((t,d,i)=>e.is0(d)?t:(a[i]=t,e.mul(t,d)),e.ONE),i=e.inv(d);return t.reduceRight((t,d,i)=>e.is0(d)?t:(a[i]=e.mul(t,a[i]),e.mul(t,d)),i),a})(n,e),cmov:(e,t,a)=>a?t:e,toBytes:e=>a?eu(e,p):em(e,p),fromBytes:e=>{if(e.length!==p)throw Error(`Fp.fromBytes: expected ${p}, got ${e.length}`);return a?el(e):eo(e)}});return Object.freeze(n)}(e$,void 0,void 0,{sqrt:function(e){let t=BigInt(3),a=BigInt(6),d=BigInt(11),i=BigInt(22),p=BigInt(23),r=BigInt(44),n=BigInt(88),s=e*e*e%e$,o=s*s*e%e$,l=eI(o,t,e$)*o%e$,m=eI(l,t,e$)*o%e$,u=eI(m,eZ,e$)*s%e$,f=eI(u,d,e$)*u%e$,c=eI(f,i,e$)*f%e$,h=eI(c,r,e$)*c%e$,x=eI(h,n,e$)*h%e$,b=eI(x,r,e$)*c%e$,v=eI(b,t,e$)*o%e$,g=eI(v,p,e$)*f%e$,y=eI(g,a,e$)*s%e$,w=eI(y,eZ,e$);if(!eX.eql(eX.sqr(w),e))throw Error("Cannot find square root");return w}}),eJ=function(e,t){let a=t=>(function(e){let t=function(e){let t=eU(e);return ey(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),{Fp:a,n:d}=t,i=a.BYTES+1,p=2*a.BYTES+1;function r(e){return ek(e,d)}let{ProjectivePoint:n,normPrivateKeyToScalar:s,weierstrassEquation:o,isWithinCurveOrder:l}=function(e){let t=function(e){let t=eU(e);ey(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:a,Fp:d,a:i}=t;if(a){if(!d.eql(i,d.ZERO))throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof a||"bigint"!=typeof a.beta||"function"!=typeof a.splitScalar)throw Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:a}=t,d=t.toBytes||((e,t,d)=>{let i=t.toAffine();return ec(Uint8Array.from([4]),a.toBytes(i.x),a.toBytes(i.y))}),i=t.fromBytes||(e=>{let t=e.subarray(1);return{x:a.fromBytes(t.subarray(0,a.BYTES)),y:a.fromBytes(t.subarray(a.BYTES,2*a.BYTES))}});function p(e){let{a:d,b:i}=t,p=a.sqr(e),r=a.mul(p,e);return a.add(a.add(r,a.mul(e,d)),i)}if(!a.eql(a.sqr(t.Gy),p(t.Gx)))throw Error("bad generator point: equation left != right");function r(e){return"bigint"==typeof e&&eH<e&&e<t.n}function n(e){if(!r(e))throw Error("Expected valid bigint: 0 < bigint < curve.n")}function s(e){let a,{allowedPrivateKeyLengths:d,nByteLength:i,wrapPrivateKey:p,n:r}=t;if(d&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=er(e)),"string"!=typeof e||!d.includes(e.length))throw Error("Invalid key");e=e.padStart(2*i,"0")}try{a="bigint"==typeof e?e:eo(ef("private key",e,i))}catch(t){throw Error(`private key must be ${i} bytes, hex or bigint, not ${typeof e}`)}return p&&(a=ek(a,r)),n(a),a}let o=new Map;function l(e){if(!(e instanceof m))throw Error("ProjectivePoint expected")}class m{constructor(e,t,d){if(this.px=e,this.py=t,this.pz=d,null==e||!a.isValid(e))throw Error("x required");if(null==t||!a.isValid(t))throw Error("y required");if(null==d||!a.isValid(d))throw Error("z required")}static fromAffine(e){let{x:t,y:d}=e||{};if(!e||!a.isValid(t)||!a.isValid(d))throw Error("invalid affine point");if(e instanceof m)throw Error("projective point not allowed");let i=e=>a.eql(e,a.ZERO);return i(t)&&i(d)?m.ZERO:new m(t,d,a.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){let t=a.invertBatch(e.map(e=>e.pz));return e.map((e,a)=>e.toAffine(t[a])).map(m.fromAffine)}static fromHex(e){let t=m.fromAffine(i(ef("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){return m.BASE.multiply(s(e))}_setWindowSize(e){this._WINDOW_SIZE=e,o.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint&&!a.is0(this.py))return;throw Error("bad point: ZERO")}let{x:e,y:d}=this.toAffine();if(!a.isValid(e)||!a.isValid(d))throw Error("bad point: x or y not FE");let i=a.sqr(d),r=p(e);if(!a.eql(i,r))throw Error("bad point: equation left != right");if(!this.isTorsionFree())throw Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:e}=this.toAffine();if(a.isOdd)return!a.isOdd(e);throw Error("Field doesn't support isOdd")}equals(e){l(e);let{px:t,py:d,pz:i}=this,{px:p,py:r,pz:n}=e,s=a.eql(a.mul(t,n),a.mul(p,i)),o=a.eql(a.mul(d,n),a.mul(r,i));return s&&o}negate(){return new m(this.px,a.neg(this.py),this.pz)}double(){let{a:e,b:d}=t,i=a.mul(d,eq),{px:p,py:r,pz:n}=this,s=a.ZERO,o=a.ZERO,l=a.ZERO,u=a.mul(p,p),f=a.mul(r,r),c=a.mul(n,n),h=a.mul(p,r);return h=a.add(h,h),l=a.mul(p,n),l=a.add(l,l),s=a.mul(e,l),o=a.mul(i,c),o=a.add(s,o),s=a.sub(f,o),o=a.add(f,o),o=a.mul(s,o),s=a.mul(h,s),l=a.mul(i,l),c=a.mul(e,c),h=a.sub(u,c),h=a.mul(e,h),h=a.add(h,l),l=a.add(u,u),u=a.add(l,u),u=a.add(u,c),u=a.mul(u,h),o=a.add(o,u),c=a.mul(r,n),c=a.add(c,c),u=a.mul(c,h),s=a.sub(s,u),l=a.mul(c,f),l=a.add(l,l),new m(s,o,l=a.add(l,l))}add(e){l(e);let{px:d,py:i,pz:p}=this,{px:r,py:n,pz:s}=e,o=a.ZERO,u=a.ZERO,f=a.ZERO,c=t.a,h=a.mul(t.b,eq),x=a.mul(d,r),b=a.mul(i,n),v=a.mul(p,s),g=a.add(d,i),y=a.add(r,n);g=a.mul(g,y),y=a.add(x,b),g=a.sub(g,y),y=a.add(d,p);let w=a.add(r,s);return y=a.mul(y,w),w=a.add(x,v),y=a.sub(y,w),w=a.add(i,p),o=a.add(n,s),w=a.mul(w,o),o=a.add(b,v),w=a.sub(w,o),f=a.mul(c,y),o=a.mul(h,v),f=a.add(o,f),o=a.sub(b,f),f=a.add(b,f),u=a.mul(o,f),b=a.add(x,x),b=a.add(b,x),v=a.mul(c,v),y=a.mul(h,y),b=a.add(b,v),v=a.sub(x,v),v=a.mul(c,v),y=a.add(y,v),x=a.mul(b,y),u=a.add(u,x),x=a.mul(w,y),o=a.mul(g,o),o=a.sub(o,x),x=a.mul(g,b),f=a.mul(w,f),new m(o,u,f=a.add(f,x))}subtract(e){return this.add(e.negate())}is0(){return this.equals(m.ZERO)}wNAF(e){return f.wNAFCached(this,o,e,e=>{let t=a.invertBatch(e.map(e=>e.pz));return e.map((e,a)=>e.toAffine(t[a])).map(m.fromAffine)})}multiplyUnsafe(e){let d=m.ZERO;if(e===eH)return d;if(n(e),e===ej)return this;let{endo:i}=t;if(!i)return f.unsafeLadder(this,e);let{k1neg:p,k1:r,k2neg:s,k2:o}=i.splitScalar(e),l=d,u=d,c=this;for(;r>eH||o>eH;)r&ej&&(l=l.add(c)),o&ej&&(u=u.add(c)),c=c.double(),r>>=ej,o>>=ej;return p&&(l=l.negate()),s&&(u=u.negate()),u=new m(a.mul(u.px,i.beta),u.py,u.pz),l.add(u)}multiply(e){let d,i;n(e);let{endo:p}=t;if(p){let{k1neg:t,k1:r,k2neg:n,k2:s}=p.splitScalar(e),{p:o,f:l}=this.wNAF(r),{p:u,f:c}=this.wNAF(s);o=f.constTimeNegate(t,o),u=f.constTimeNegate(n,u),u=new m(a.mul(u.px,p.beta),u.py,u.pz),d=o.add(u),i=l.add(c)}else{let{p:t,f:a}=this.wNAF(e);d=t,i=a}return m.normalizeZ([d,i])[0]}multiplyAndAddUnsafe(e,t,a){let d=m.BASE,i=(e,t)=>t!==eH&&t!==ej&&e.equals(d)?e.multiply(t):e.multiplyUnsafe(t),p=i(this,t).add(i(e,a));return p.is0()?void 0:p}toAffine(e){let{px:t,py:d,pz:i}=this,p=this.is0();null==e&&(e=p?a.ONE:a.inv(i));let r=a.mul(t,e),n=a.mul(d,e),s=a.mul(i,e);if(p)return{x:a.ZERO,y:a.ZERO};if(!a.eql(s,a.ONE))throw Error("invZ was invalid");return{x:r,y:n}}isTorsionFree(){let{h:e,isTorsionFree:a}=t;if(e===ej)return!0;if(a)return a(m,this);throw Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:e,clearCofactor:a}=t;return e===ej?this:a?a(m,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),d(m,this,e)}toHex(e=!0){return er(this.toRawBytes(e))}}m.BASE=new m(t.Gx,t.Gy,a.ONE),m.ZERO=new m(a.ZERO,a.ONE,a.ZERO);let u=t.nBitLength,f=function(e,t){let a=(e,t)=>{let a=t.negate();return e?a:t},d=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:a,unsafeLadder(t,a){let d=e.ZERO,i=t;for(;a>eC;)a&eL&&(d=d.add(i)),i=i.double(),a>>=eL;return d},precomputeWindow(e,t){let{windows:a,windowSize:i}=d(t),p=[],r=e,n=r;for(let e=0;e<a;e++){n=r,p.push(n);for(let e=1;e<i;e++)n=n.add(r),p.push(n);r=n.double()}return p},wNAF(t,i,p){let{windows:r,windowSize:n}=d(t),s=e.ZERO,o=e.BASE,l=BigInt(2**t-1),m=2**t,u=BigInt(t);for(let e=0;e<r;e++){let t=e*n,d=Number(p&l);p>>=u,d>n&&(d-=m,p+=eL);let r=t+Math.abs(d)-1,f=e%2!=0,c=d<0;0===d?o=o.add(a(f,i[t])):s=s.add(a(c,i[r]))}return{p:s,f:o}},wNAFCached(e,t,a,d){let i=e._WINDOW_SIZE||1,p=t.get(e);return p||(p=this.precomputeWindow(e,i),1!==i&&t.set(e,d(p))),this.wNAF(i,p,a)}}}(m,t.endo?Math.ceil(u/2):u);return{CURVE:t,ProjectivePoint:m,normPrivateKeyToScalar:s,weierstrassEquation:p,isWithinCurveOrder:r}}({...t,toBytes(e,t,d){let i=t.toAffine(),p=a.toBytes(i.x),r=ec;return d?r(Uint8Array.from([t.hasEvenY()?2:3]),p):r(Uint8Array.from([4]),p,a.toBytes(i.y))},fromBytes(e){let t=e.length,d=e[0],r=e.subarray(1);if(t===i&&(2===d||3===d)){let e=eo(r);if(!(eH<e&&e<a.ORDER))throw Error("Point is not on curve");let t=o(e),i=a.sqrt(t);return(1&d)==1!=((i&ej)===ej)&&(i=a.neg(i)),{x:e,y:i}}if(t===p&&4===d)return{x:a.fromBytes(r.subarray(0,a.BYTES)),y:a.fromBytes(r.subarray(a.BYTES,2*a.BYTES))};throw Error(`Point of length ${t} was invalid. Expected ${i} compressed bytes or ${p} uncompressed bytes`)}}),m=e=>er(em(e,t.nByteLength)),u=(e,t,a)=>eo(e.slice(t,a));class f{constructor(e,t,a){this.r=e,this.s=t,this.recovery=a,this.assertValidity()}static fromCompact(e){let a=t.nByteLength;return new f(u(e=ef("compactSignature",e,2*a),0,a),u(e,a,2*a))}static fromDER(e){let{r:t,s:a}=eK.toSig(ef("DER",e));return new f(t,a)}assertValidity(){if(!l(this.r))throw Error("r must be 0 < r < CURVE.n");if(!l(this.s))throw Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new f(this.r,this.s,e)}recoverPublicKey(e){let{r:i,s:p,recovery:s}=this,o=x(ef("msgHash",e));if(null==s||![0,1,2,3].includes(s))throw Error("recovery id invalid");let l=2===s||3===s?i+t.n:i;if(l>=a.ORDER)throw Error("recovery id 2 or 3 invalid");let u=(1&s)==0?"02":"03",f=n.fromHex(u+m(l)),c=eB(l,d),h=r(-o*c),b=r(p*c),v=n.BASE.multiplyAndAddUnsafe(f,h,b);if(!v)throw Error("point at infinify");return v.assertValidity(),v}hasHighS(){return this.s>d>>ej}normalizeS(){return this.hasHighS()?new f(this.r,r(-this.s),this.recovery):this}toDERRawBytes(){return es(this.toDERHex())}toDERHex(){return eK.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return es(this.toCompactHex())}toCompactHex(){return m(this.r)+m(this.s)}}function c(e){let t=e instanceof Uint8Array,a="string"==typeof e,d=(t||a)&&e.length;return t?d===i||d===p:a?d===2*i||d===2*p:e instanceof n}let h=t.bits2int||function(e){let a=eo(e),d=8*e.length-t.nBitLength;return d>0?a>>BigInt(d):a},x=t.bits2int_modN||function(e){return r(h(e))},b=eh(t.nBitLength);function v(e){if("bigint"!=typeof e)throw Error("bigint expected");if(!(eH<=e&&e<b))throw Error(`bigint expected < 2^${t.nBitLength}`);return em(e,t.nByteLength)}let g={lowS:t.lowS,prehash:!1},y={lowS:t.lowS,prehash:!1};return n.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return n.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,a=!0){if(c(e))throw Error("first arg must be private key");if(!c(t))throw Error("second arg must be public key");return n.fromHex(t).multiply(s(e)).toRawBytes(a)},sign:function(e,i,p=g){let{seed:o,k2sig:m}=function(e,i,p=g){if(["recovered","canonical"].some(e=>e in p))throw Error("sign() legacy options not supported");let{hash:o,randomBytes:m}=t,{lowS:u,prehash:c,extraEntropy:b}=p;null==u&&(u=!0),e=ef("msgHash",e),c&&(e=ef("prehashed msgHash",o(e)));let y=x(e),w=s(i),S=[v(w),v(y)];if(null!=b){let e=!0===b?m(a.BYTES):b;S.push(ef("extraEntropy",e))}return{seed:ec(...S),k2sig:function(e){var t;let a=h(e);if(!l(a))return;let i=eB(a,d),p=n.BASE.multiply(a).toAffine(),s=r(p.x);if(s===eH)return;let o=r(i*r(y+s*w));if(o===eH)return;let m=2*(p.x!==s)|Number(p.y&ej),c=o;return u&&o>d>>ej&&(c=(t=o)>d>>ej?r(-t):t,m^=1),new f(s,c,m)}}}(e,i,p);return ev(t.hash.outputLen,t.nByteLength,t.hmac)(o,m)},verify:function(e,a,i,p=y){let s,o;if(a=ef("msgHash",a),i=ef("publicKey",i),"strict"in p)throw Error("options.strict was renamed to lowS");let{lowS:l,prehash:m}=p;try{if("string"==typeof e||e instanceof Uint8Array)try{o=f.fromDER(e)}catch(t){if(!(t instanceof eK.Err))throw t;o=f.fromCompact(e)}else if("object"==typeof e&&"bigint"==typeof e.r&&"bigint"==typeof e.s){let{r:t,s:a}=e;o=new f(t,a)}else throw Error("PARSE");s=n.fromHex(i)}catch(e){if("PARSE"===e.message)throw Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(l&&o.hasHighS())return!1;m&&(a=t.hash(a));let{r:u,s:c}=o,h=x(a),b=eB(c,d),v=r(h*b),g=r(u*b),w=n.BASE.multiplyAndAddUnsafe(s,v,g)?.toAffine();return!!w&&r(w.x)===u},ProjectivePoint:n,Signature:f,utils:{isValidPrivateKey(e){try{return s(e),!0}catch(e){return!1}},normPrivateKeyToScalar:s,randomPrivateKey:()=>{let e=eV(t.n);return function(e,t,a=!1){let d=e.length,i=eO(t),p=eV(t);if(d<16||d<p||d>1024)throw Error(`expected ${p}-1024 bytes of input, got ${d}`);let r=ek(a?eo(e):el(e),t-eS)+eS;return a?eu(r,i):em(r,i)}(t.randomBytes(e),t.n)},precompute:(e=8,t=n.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}})({...e,hash:t,hmac:(e,...a)=>eM(t,e,function(...e){let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0)),a=0;return e.forEach(e=>{if(!M(e))throw Error("Uint8Array expected");t.set(e,a),a+=e.length}),t}(...a)),randomBytes:W});return Object.freeze({...a(t),create:a})}({a:BigInt(0),b:BigInt(7),Fp:eX,n:eW,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{let t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),a=-eG*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),d=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=BigInt("0x100000000000000000000000000000000"),p=eY(t*e,eW),r=eY(-a*e,eW),n=ek(e-p*t-r*d,eW),s=ek(-p*a-r*t,eW),o=n>i,l=s>i;if(o&&(n=eW-n),l&&(s=eW-s),n>i||s>i)throw Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:o,k1:n,k2neg:l,k2:s}}}},et),eQ=BigInt(0),e1={},e0=e=>e.toRawBytes(!0).slice(1),e2=e=>mod(e,eW),e6=eJ.ProjectivePoint,e4="6.11.1";async function e3(e){let t=Object.keys(e);return(await Promise.all(t.map(t=>Promise.resolve(e[t])))).reduce((e,a,d)=>(e[t[d]]=a,e),{})}function e9(e,t,a){for(let d in t){let i=t[d],p=a?a[d]:null;p&&function(e,t,a){let d=t.split("|").map(e=>e.trim());for(let a=0;a<d.length;a++)switch(t){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof e===t)return}let i=Error(`invalid value for type ${t}`);throw i.code="INVALID_ARGUMENT",i.argument=`value.${a}`,i.value=e,i}(i,p,d),Object.defineProperty(e,d,{enumerable:!0,value:i,writable:!1})}}function e8(e){if(null==e)return"null";if(Array.isArray(e))return"[ "+e.map(e8).join(", ")+" ]";if(e instanceof Uint8Array){let t="0123456789abcdef",a="0x";for(let d=0;d<e.length;d++)a+=t[e[d]>>4],a+=t[15&e[d]];return a}if("object"==typeof e&&"function"==typeof e.toJSON)return e8(e.toJSON());switch(typeof e){case"boolean":case"symbol":case"number":return e.toString();case"bigint":return BigInt(e).toString();case"string":return JSON.stringify(e);case"object":{let t=Object.keys(e);return t.sort(),"{ "+t.map(t=>`${e8(t)}: ${e8(e[t])}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function e5(e,t,a){let d,i=e;{let d=[];if(a){if("message"in a||"code"in a||"name"in a)throw Error(`value will overwrite populated values: ${e8(a)}`);for(let e in a){if("shortMessage"===e)continue;let t=a[e];d.push(e+"="+e8(t))}}d.push(`code=${t}`),d.push(`version=${e4}`),d.length&&(e+=" ("+d.join(", ")+")")}switch(t){case"INVALID_ARGUMENT":d=TypeError(e);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":d=RangeError(e);break;default:d=Error(e)}return e9(d,{code:t}),a&&Object.assign(d,a),null==d.shortMessage&&e9(d,{shortMessage:i}),d}function e7(e,t,a,d){if(!e)throw e5(t,a,d)}function te(e,t,a,d){e7(e,t,"INVALID_ARGUMENT",{argument:a,value:d})}let tt=["NFD","NFC","NFKD","NFKC"].reduce((e,t)=>{try{if("test"!=="test".normalize(t))throw Error("bad");if("NFD"===t){let e=String.fromCharCode(233).normalize("NFD"),t=String.fromCharCode(101,769);if(e!==t)throw Error("broken")}e.push(t)}catch(e){}return e},[]);function ta(e){e7(tt.indexOf(e)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:e}})}function td(e,t,a){if(null==a&&(a=""),e!==t){let e=a,t="new";a&&(e+=".",t+=" "+a),e7(!1,`private constructor; use ${e}from* methods`,"UNSUPPORTED_OPERATION",{operation:t})}}function ti(e,t,a){if(e instanceof Uint8Array)return a?new Uint8Array(e):e;if("string"==typeof e&&e.match(/^0x([0-9a-f][0-9a-f])*$/i)){let t=new Uint8Array((e.length-2)/2),a=2;for(let d=0;d<t.length;d++)t[d]=parseInt(e.substring(a,a+2),16),a+=2;return t}te(!1,"invalid BytesLike value",t||"value",e)}function tp(e,t){return ti(e,t,!1)}function tr(e,t){return ti(e,t,!0)}function tn(e,t){return"string"==typeof e&&!!e.match(/^0x[0-9A-Fa-f]*$/)&&("number"!=typeof t||e.length===2+2*t)&&(!0!==t||e.length%2==0)}function ts(e){return tn(e,!0)||e instanceof Uint8Array}let to="0123456789abcdef";function tl(e){let t=tp(e),a="0x";for(let e=0;e<t.length;e++){let d=t[e];a+=to[(240&d)>>4]+to[15&d]}return a}function tm(e){return"0x"+e.map(e=>tl(e).substring(2)).join("")}function tu(e){return tn(e,!0)?(e.length-2)/2:tp(e).length}function tf(e,t,a){let d=tp(e);return null!=a&&a>d.length&&e7(!1,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:d,length:d.length,offset:a}),tl(d.slice(null==t?0:t,null==a?d.length:a))}function tc(e,t){var a=e,d=t,i=!0;let p=tp(a);e7(d>=p.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(p),length:d,offset:d+1});let r=new Uint8Array(d);return r.fill(0),i?r.set(p,d-p.length):r.set(p,0),tl(r)}let th=BigInt(0),tx=BigInt(1);function tb(e,t){switch(typeof e){case"bigint":return e;case"number":return te(Number.isInteger(e),"underflow",t||"value",e),te(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),BigInt(e);case"string":try{if(""===e)throw Error("empty string");if("-"===e[0]&&"-"!==e[1])return-BigInt(e.substring(1));return BigInt(e)}catch(a){te(!1,`invalid BigNumberish string: ${a.message}`,t||"value",e)}}te(!1,"invalid BigNumberish value",t||"value",e)}function tv(e,t){let a=tb(e,t);return e7(a>=th,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:e}),a}let tg="0123456789abcdef";function ty(e){if(e instanceof Uint8Array){let t="0x0";for(let a of e)t+=tg[a>>4],t+=tg[15&a];return BigInt(t)}return tb(e)}function tw(e,t){switch(typeof e){case"bigint":return te(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),Number(e);case"number":return te(Number.isInteger(e),"underflow",t||"value",e),te(e>=-0x1fffffffffffff&&e<=0x1fffffffffffff,"overflow",t||"value",e),e;case"string":try{if(""===e)throw Error("empty string");return tw(BigInt(e),t)}catch(a){te(!1,`invalid numeric string: ${a.message}`,t||"value",e)}}te(!1,"invalid numeric value",t||"value",e)}function tS(e,t){let a=tv(e,"value").toString(16);if(null==t)a.length%2&&(a="0"+a);else{let d=tw(t,"width");for(e7(2*d>=a.length,`value exceeds width (${d} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:e});a.length<2*d;)a="0"+a}return"0x"+a}function tE(e){let t=tv(e,"value");if(t===th)return new Uint8Array([]);let a=t.toString(16);a.length%2&&(a="0"+a);let d=new Uint8Array(a.length/2);for(let e=0;e<d.length;e++){let t=2*e;d[e]=parseInt(a.substring(t,t+2),16)}return d}let tN="0x0000000000000000000000000000000000000000000000000000000000000000",tT=BigInt(0),tA=BigInt(1),t_=BigInt(2),tk=BigInt(27),tI=BigInt(28),tB=BigInt(35),tD={};class tP{#e;#t;#a;#d;get r(){return this.#e}set r(e){te(32===tu(e),"invalid r","value",e),this.#e=tl(e)}get s(){return this.#t}set s(e){te(32===tu(e),"invalid s","value",e);let t=tl(e);te(8>parseInt(t.substring(0,3)),"non-canonical s","value",t),this.#t=t}get v(){return this.#a}set v(e){let t=tw(e,"value");te(27===t||28===t,"invalid v","v",e),this.#a=t}get networkV(){return this.#d}get legacyChainId(){let e=this.networkV;return null==e?null:tP.getChainId(e)}get yParity(){return+(27!==this.v)}get yParityAndS(){let e=tp(this.s);return this.yParity&&(e[0]|=128),tl(e)}get compactSerialized(){return tm([this.r,this.yParityAndS])}get serialized(){return tm([this.r,this.s,this.yParity?"0x1c":"0x1b"])}constructor(e,t,a,d){td(e,tD,"Signature"),this.#e=t,this.#t=a,this.#a=d,this.#d=null}[Symbol.for("nodejs.util.inspect.custom")](){return`Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`}clone(){let e=new tP(tD,this.r,this.s,this.v);return this.networkV&&(e.#d=this.networkV),e}toJSON(){let e=this.networkV;return{_type:"signature",networkV:null!=e?e.toString():null,r:this.r,s:this.s,v:this.v}}static getChainId(e){let t=tb(e,"v");return t==tk||t==tI?tT:(te(t>=tB,"invalid EIP-155 v","v",e),(t-tB)/t_)}static getChainIdV(e,t){return tb(e)*t_+BigInt(35+t-27)}static getNormalizedV(e){let t=tb(e);return t===tT||t===tk?27:t===tA||t===tI?28:(te(t>=tB,"invalid v","v",e),t&tA?27:28)}static from(e){function t(t,a){te(t,a,"signature",e)}if(null==e)return new tP(tD,tN,tN,27);if("string"==typeof e){let a=tp(e,"signature");if(64===a.length){let e=tl(a.slice(0,32)),t=a.slice(32,64),d=128&t[0]?28:27;return t[0]&=127,new tP(tD,e,tl(t),d)}if(65===a.length){let e=tl(a.slice(0,32)),d=a.slice(32,64);t((128&d[0])==0,"non-canonical s");let i=tP.getNormalizedV(a[64]);return new tP(tD,e,tl(d),i)}t(!1,"invalid raw signature length")}if(e instanceof tP)return e.clone();let a=e.r;t(null!=a,"missing r");let d=tc(tE(a),32),i=function(e,a){if(null!=e)return tc(tE(e),32);if(null!=a){t(tn(a,32),"invalid yParityAndS");let e=tp(a);return e[0]&=127,tl(e)}t(!1,"missing s")}(e.s,e.yParityAndS);t((128&tp(i)[0])==0,"non-canonical s");let{networkV:p,v:r}=function(e,a,d){if(null!=e){let t=tb(e);return{networkV:t>=tB?t:void 0,v:tP.getNormalizedV(t)}}if(null!=a)return t(tn(a,32),"invalid yParityAndS"),{v:128&tp(a)[0]?28:27};if(null!=d){switch(tw(d,"sig.yParity")){case 0:return{v:27};case 1:return{v:28}}t(!1,"invalid yParity")}t(!1,"missing v")}(e.v,e.yParityAndS,e.yParity),n=new tP(tD,d,i,r);return p&&(n.#d=p),t(null==e.yParity||tw(e.yParity,"sig.yParity")===n.yParity,"yParity mismatch"),t(null==e.yParityAndS||e.yParityAndS===n.yParityAndS,"yParityAndS mismatch"),n}}class tO{#i;constructor(e){te(32===tu(e),"invalid private key","privateKey","[REDACTED]"),this.#i=tl(e)}get privateKey(){return this.#i}get publicKey(){return tO.computePublicKey(this.#i)}get compressedPublicKey(){return tO.computePublicKey(this.#i,!0)}sign(e){te(32===tu(e),"invalid digest length","digest",e);let t=eJ.sign(tr(e),tr(this.#i),{lowS:!0});return tP.from({r:tS(t.r,32),s:tS(t.s,32),v:t.recovery?28:27})}computeSharedSecret(e){let t=tO.computePublicKey(e);return tl(eJ.getSharedSecret(tr(this.#i),tp(t),!1))}static computePublicKey(e,t){let a=tp(e,"key");if(32===a.length)return tl(eJ.getPublicKey(a,!!t));if(64===a.length){let e=new Uint8Array(65);e[0]=4,e.set(a,1),a=e}return tl(eJ.ProjectivePoint.fromHex(a).toRawBytes(t))}static recoverPublicKey(e,t){te(32===tu(e),"invalid digest length","digest",e);let a=tP.from(t),d=eJ.Signature.fromCompact(tr(tm([a.r,a.s]))),i=(d=d.addRecoveryBit(a.yParity)).recoverPublicKey(tr(e));return te(null!=i,"invalid signautre for digest","signature",t),"0x"+i.toHex(!1)}static addPoints(e,t,a){let d=eJ.ProjectivePoint.fromHex(tO.computePublicKey(e).substring(2)),i=eJ.ProjectivePoint.fromHex(tO.computePublicKey(t).substring(2));return"0x"+d.add(i).toHex(!!a)}}let tV=BigInt(0x100000000-1),tR=BigInt(32),tM=(e,t,a)=>e<<a|t>>>32-a,tC=(e,t,a)=>t<<a|e>>>32-a,tL=(e,t,a)=>t<<a-32|e>>>64-a,tU=(e,t,a)=>e<<a-32|t>>>64-a,[tF,tz,tK]=[[],[],[]],tH=BigInt(0),tj=BigInt(1),tq=BigInt(2),t$=BigInt(7),tW=BigInt(256),tG=BigInt(113);for(let e=0,t=tj,a=1,d=0;e<24;e++){[a,d]=[d,(2*a+3*d)%5],tF.push(2*(5*d+a)),tz.push((e+1)*(e+2)/2%64);let i=tH;for(let e=0;e<7;e++)(t=(t<<tj^(t>>t$)*tG)%tW)&tq&&(i^=tj<<(tj<<BigInt(e))-tj);tK.push(i)}let[tZ,tY]=function(e,t=!1){let a=new Uint32Array(e.length),d=new Uint32Array(e.length);for(let i=0;i<e.length;i++){let{h:p,l:r}=function(e,t=!1){return t?{h:Number(e&tV),l:Number(e>>tR&tV)}:{h:0|Number(e>>tR&tV),l:0|Number(e&tV)}}(e[i],t);[a[i],d[i]]=[p,r]}return[a,d]}(tK,!0),tX=(e,t,a)=>a>32?tL(e,t,a):tM(e,t,a),tJ=(e,t,a)=>a>32?tU(e,t,a):tC(e,t,a);class tQ extends H{constructor(e,t,a,d=!1,i=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=a,this.enableXOF=d,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,k(a),0>=this.blockLen||this.blockLen>=200)throw Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=C(this.state)}keccak(){!function(e,t=24){let a=new Uint32Array(10);for(let d=24-t;d<24;d++){for(let t=0;t<10;t++)a[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){let d=(t+8)%10,i=(t+2)%10,p=a[i],r=a[i+1],n=tX(p,r,1)^a[d],s=tJ(p,r,1)^a[d+1];for(let a=0;a<50;a+=10)e[t+a]^=n,e[t+a+1]^=s}let t=e[2],i=e[3];for(let a=0;a<24;a++){let d=tz[a],p=tX(t,i,d),r=tJ(t,i,d),n=tF[a];t=e[n],i=e[n+1],e[n]=p,e[n+1]=r}for(let t=0;t<50;t+=10){for(let d=0;d<10;d++)a[d]=e[t+d];for(let d=0;d<10;d++)e[t+d]^=~a[(d+2)%10]&a[(d+4)%10]}e[0]^=tZ[d],e[1]^=tY[d]}a.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){D(this);let{blockLen:t,state:a}=this,d=(e=K(e)).length;for(let i=0;i<d;){let p=Math.min(t-this.pos,d-i);for(let t=0;t<p;t++)a[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:t,pos:a,blockLen:d}=this;e[a]^=t,(128&t)!=0&&a===d-1&&this.keccak(),e[d-1]^=128,this.keccak()}writeInto(e){D(this,!1),I(e),this.finish();let t=this.state,{blockLen:a}=this;for(let d=0,i=e.length;d<i;){this.posOut>=a&&this.keccak();let p=Math.min(a-this.posOut,i-d);e.set(t.subarray(this.posOut,this.posOut+p),d),this.posOut+=p,d+=p}return e}xofInto(e){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return k(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(P(e,this),this.finished)throw Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){let{blockLen:t,suffix:a,outputLen:d,rounds:i,enableXOF:p}=this;return e||(e=new tQ(t,a,d,p,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=a,e.outputLen=d,e.enableXOF=p,e.destroyed=this.destroyed,e}}let t1=$(()=>new tQ(136,1,32)),t0=!1,t2=function(e){return t1(e)},t6=t2;function t4(e){let t=tp(e,"data");return tl(t6(t))}t4._=t2,t4.lock=function(){t0=!0},t4.register=function(e){if(t0)throw TypeError("keccak256 is locked");t6=e},Object.freeze(t4);let t3=BigInt(0),t9=BigInt(36);function t8(e){let t=(e=e.toLowerCase()).substring(2).split(""),a=new Uint8Array(40);for(let e=0;e<40;e++)a[e]=t[e].charCodeAt(0);let d=tp(t4(a));for(let e=0;e<40;e+=2)d[e>>1]>>4>=8&&(t[e]=t[e].toUpperCase()),(15&d[e>>1])>=8&&(t[e+1]=t[e+1].toUpperCase());return"0x"+t.join("")}let t5={};for(let e=0;e<10;e++)t5[String(e)]=String(e);for(let e=0;e<26;e++)t5[String.fromCharCode(65+e)]=String(10+e);let t7=function(){let e={};for(let t=0;t<36;t++)e["0123456789abcdefghijklmnopqrstuvwxyz"[t]]=BigInt(t);return e}();function ae(e){if(te("string"==typeof e,"invalid address","address",e),e.match(/^(0x)?[0-9a-fA-F]{40}$/)){e.startsWith("0x")||(e="0x"+e);let t=t8(e);return te(!e.match(/([A-F].*[a-f])|([a-f].*[A-F])/)||t===e,"bad address checksum","address",e),t}if(e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){te(e.substring(2,4)===function(e){let t=(e=(e=e.toUpperCase()).substring(4)+e.substring(0,2)+"00").split("").map(e=>t5[e]).join("");for(;t.length>=15;){let e=t.substring(0,15);t=parseInt(e,10)%97+t.substring(e.length)}let a=String(98-parseInt(t,10)%97);for(;a.length<2;)a="0"+a;return a}(e),"bad icap checksum","address",e);let t=(function(e){e=e.toLowerCase();let t=t3;for(let a=0;a<e.length;a++)t=t*t9+t7[e[a]];return t})(e.substring(4)).toString(16);for(;t.length<40;)t="0"+t;return t8("0x"+t)}te(!1,"invalid address","address",e)}async function at(e,t){let a=await t;return(null==a||"0x0000000000000000000000000000000000000000"===a)&&(e7("string"!=typeof e,"unconfigured name","UNCONFIGURED_NAME",{value:e}),te(!1,"invalid AddressLike value; did not resolve to a value address","target",e)),ae(a)}function aa(e,t){return"string"==typeof e?e.match(/^0x[0-9a-f]{40}$/i)?ae(e):(e7(null!=t,"ENS resolution requires a provider","UNSUPPORTED_OPERATION",{operation:"resolveName"}),at(e,t.resolveName(e))):e&&"function"==typeof e.getAddress?at(e,e.getAddress()):e&&"function"==typeof e.then?at(e,e):void te(!1,"unsupported addressable value","target",e)}function ad(e,t,a,d,i){if("BAD_PREFIX"===e||"UNEXPECTED_CONTINUE"===e){let e=0;for(let d=t+1;d<a.length&&a[d]>>6==2;d++)e++;return e}return"OVERRUN"===e?a.length-t-1:0}let ai=Object.freeze({error:function(e,t,a,d,i){te(!1,`invalid codepoint at offset ${t}; ${e}`,"bytes",a)},ignore:ad,replace:function(e,t,a,d,i){return"OVERLONG"===e?(te("number"==typeof i,"invalid bad code point for replacement","badCodepoint",i),d.push(i),0):(d.push(65533),ad(e,t,a,d,i))}});function ap(e,t){te("string"==typeof e,"invalid string value","str",e),null!=t&&(ta(t),e=e.normalize(t));let a=[];for(let t=0;t<e.length;t++){let d=e.charCodeAt(t);if(d<128)a.push(d);else if(d<2048)a.push(d>>6|192),a.push(63&d|128);else if((64512&d)==55296){t++;let i=e.charCodeAt(t);te(t<e.length&&(64512&i)==56320,"invalid surrogate pair","str",e);let p=65536+((1023&d)<<10)+(1023&i);a.push(p>>18|240),a.push(p>>12&63|128),a.push(p>>6&63|128),a.push(63&p|128)}else a.push(d>>12|224),a.push(d>>6&63|128),a.push(63&d|128)}return new Uint8Array(a)}let ar=new Uint8Array(32);ar.fill(0);let an=BigInt(-1),as=BigInt(0),ao=BigInt(1),al=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),am=tS(ao,32),au=tS(as,32),af={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},ac=["name","version","chainId","verifyingContract","salt"];function ah(e){return function(t){return te("string"==typeof t,`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,t),t}}let ax={name:ah("name"),version:ah("version"),chainId:function(e){let t=tb(e,"domain.chainId");if(te(t>=0,"invalid chain ID","domain.chainId",e),Number.isSafeInteger(t))return Number(t);let a=tl(ts(t)?t:tE(t)).substring(2);for(;a.startsWith("0");)a=a.substring(1);return""===a&&(a="0"),"0x"+a},verifyingContract:function(e){try{return ae(e).toLowerCase()}catch(e){}te(!1,'invalid domain value "verifyingContract"',"domain.verifyingContract",e)},salt:function(e){let t=tp(e,"domain.salt");return te(32===t.length,'invalid domain value "salt"',"domain.salt",e),tl(t)}};function ab(e){{let d=e.match(/^(u?)int(\d+)$/);if(d){var t,a;let i=""===d[1],p=parseInt(d[2]);te(p%8==0&&0!==p&&p<=256&&d[2]===String(p),"invalid numeric width","type",e);let r=(t=al,a=i?p-1:p,tv(t,"value")&(tx<<BigInt(tw(a,"bits")))-tx),n=i?(r+ao)*an:as;return function(t){let a=tb(t,"value");return te(a>=n&&a<=r,`value out-of-bounds for ${e}`,"value",a),tS(i?function(e,t){let a=tb(e,"value"),d=BigInt(tw(256,"width")),i=tx<<d-tx;return a<th?(e7((a=-a)<=i,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e}),(~a&(tx<<d)-tx)+tx):(e7(a<i,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:e}),a)}(a,0):a,32)}}}{let t=e.match(/^bytes(\d+)$/);if(t){let a=parseInt(t[1]);return te(0!==a&&a<=32&&t[1]===String(a),"invalid bytes width","type",e),function(t){te(tp(t).length===a,`invalid length for ${e}`,"value",t);let d=tp(t),i=d.length%32;return i?tm([d,ar.slice(i)]):tl(d)}}}switch(e){case"address":return function(e){return tc(ae(e),32)};case"bool":return function(e){return e?am:au};case"bytes":return function(e){return t4(e)};case"string":return function(e){return t4(ap(e))}}return null}function av(e,t){return`${e}(${t.map(({name:e,type:t})=>t+" "+e).join(",")})`}function ag(e){let t=e.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);return t?{base:t[1],index:t[2]+t[4],array:{base:t[1],prefix:t[1]+t[2],count:t[5]?parseInt(t[5]):-1}}:{base:e}}class ay{primaryType;#p;get types(){return JSON.parse(this.#p)}#r;#n;constructor(e){this.#r=new Map,this.#n=new Map;let t=new Map,a=new Map,d=new Map,i={};for(let p in Object.keys(e).forEach(p=>{i[p]=e[p].map(({name:t,type:a})=>{let{base:d,index:i}=ag(a);return"int"!==d||e.int||(d="int256"),"uint"!==d||e.uint||(d="uint256"),{name:t,type:d+(i||"")}}),t.set(p,new Set),a.set(p,[]),d.set(p,new Set)}),this.#p=JSON.stringify(i),i){let d=new Set;for(let r of i[p]){te(!d.has(r.name),`duplicate variable name ${JSON.stringify(r.name)} in ${JSON.stringify(p)}`,"types",e),d.add(r.name);let i=ag(r.type).base;te(i!==p,`circular type reference to ${JSON.stringify(i)}`,"types",e),ab(i)||(te(a.has(i),`unknown type ${JSON.stringify(i)}`,"types",e),a.get(i).push(p),t.get(p).add(i))}}let p=Array.from(a.keys()).filter(e=>0===a.get(e).length);for(let[r,n]of(te(0!==p.length,"missing primary type","types",e),te(1===p.length,`ambiguous primary types or unused types: ${p.map(e=>JSON.stringify(e)).join(", ")}`,"types",e),e9(this,{primaryType:p[0]}),!function i(p,r){for(let n of(te(!r.has(p),`circular type reference to ${JSON.stringify(p)}`,"types",e),r.add(p),t.get(p)))if(a.has(n))for(let e of(i(n,r),r))d.get(e).add(n);r.delete(p)}(this.primaryType,new Set),d)){let e=Array.from(n);e.sort(),this.#r.set(r,av(r,i[r])+e.map(e=>av(e,i[e])).join(""))}}getEncoder(e){let t=this.#n.get(e);return t||(t=this.#s(e),this.#n.set(e,t)),t}#s(e){{let t=ab(e);if(t)return t}let t=ag(e).array;if(t){let e=t.prefix,a=this.getEncoder(e);return d=>{te(-1===t.count||t.count===d.length,`array length mismatch; expected length ${t.count}`,"value",d);let i=d.map(a);return this.#r.has(e)&&(i=i.map(t4)),t4(tm(i))}}let a=this.types[e];if(a){let t=t4(ap(this.#r.get(e)));return e=>{let d=a.map(({name:t,type:a})=>{let d=this.getEncoder(a)(e[t]);return this.#r.has(a)?t4(d):d});return d.unshift(t),tm(d)}}te(!1,`unknown type: ${e}`,"type",e)}encodeType(e){let t=this.#r.get(e);return te(t,`unknown type: ${JSON.stringify(e)}`,"name",e),t}encodeData(e,t){return this.getEncoder(e)(t)}hashStruct(e,t){return t4(this.encodeData(e,t))}encode(e){return this.encodeData(this.primaryType,e)}hash(e){return this.hashStruct(this.primaryType,e)}_visit(e,t,a){if(ab(e))return a(e,t);let d=ag(e).array;if(d)return te(-1===d.count||d.count===t.length,`array length mismatch; expected length ${d.count}`,"value",t),t.map(e=>this._visit(d.prefix,e,a));let i=this.types[e];if(i)return i.reduce((e,{name:d,type:i})=>(e[d]=this._visit(i,t[d],a),e),{});te(!1,`unknown type: ${e}`,"type",e)}visit(e,t){return this._visit(this.primaryType,e,t)}static from(e){return new ay(e)}static getPrimaryType(e){return ay.from(e).primaryType}static hashStruct(e,t,a){return ay.from(t).hashStruct(e,a)}static hashDomain(e){let t=[];for(let a in e){if(null==e[a])continue;let d=af[a];te(d,`invalid typed-data domain key: ${JSON.stringify(a)}`,"domain",e),t.push({name:a,type:d})}return t.sort((e,t)=>ac.indexOf(e.name)-ac.indexOf(t.name)),ay.hashStruct("EIP712Domain",{EIP712Domain:t},e)}static encode(e,t,a){return tm(["0x1901",ay.hashDomain(e),ay.from(t).hash(a)])}static hash(e,t,a){return t4(ay.encode(e,t,a))}static async resolveNames(e,t,a,d){for(let t in e=Object.assign({},e))null==e[t]&&delete e[t];let i={};e.verifyingContract&&!tn(e.verifyingContract,20)&&(i[e.verifyingContract]="0x");let p=ay.from(t);for(let e in p.visit(a,(e,t)=>("address"!==e||tn(t,20)||(i[t]="0x"),t)),i)i[e]=await d(e);return e.verifyingContract&&i[e.verifyingContract]&&(e.verifyingContract=i[e.verifyingContract]),a=p.visit(a,(e,t)=>"address"===e&&i[t]?i[t]:t),{domain:e,value:a}}static getPayload(e,t,a){ay.hashDomain(e);let d={},i=[];ac.forEach(t=>{let a=e[t];null!=a&&(d[t]=ax[t](a),i.push({name:t,type:af[t]}))});let p=ay.from(t),r=Object.assign({},t=p.types);return te(null==r.EIP712Domain,"types must not contain EIP712Domain type","types.EIP712Domain",t),r.EIP712Domain=i,p.encode(a),{types:r,domain:d,primaryType:p.primaryType,message:p.visit(a,(e,t)=>{if(e.match(/^bytes(\d*)/))return tl(tp(t));if(e.match(/^u?int/))return tb(t).toString();switch(e){case"address":return t.toLowerCase();case"bool":return!!t;case"string":return te("string"==typeof t,"invalid string","value",t),t}te(!1,"unsupported type","type",e)})}}}let aw="0x0000000000000000000000000000000000000000";function aS(e,t,a){let d=0;for(let i=0;i<a;i++)d=256*d+e[t+i];return d}function aE(e,t,a,d){let i=[];for(;a<t+1+d;){let p=aN(e,a);i.push(p.result),e7((a+=p.consumed)<=t+1+d,"child data too short","BUFFER_OVERRUN",{buffer:e,length:d,offset:t})}return{consumed:1+d,result:i}}function aN(e,t){e7(0!==e.length,"data too short","BUFFER_OVERRUN",{buffer:e,length:0,offset:1});let a=t=>{e7(t<=e.length,"data short segment too short","BUFFER_OVERRUN",{buffer:e,length:e.length,offset:t})};if(e[t]>=248){let d=e[t]-247;a(t+1+d);let i=aS(e,t+1,d);return a(t+1+d+i),aE(e,t,t+1+d,d+i)}if(e[t]>=192){let d=e[t]-192;return a(t+1+d),aE(e,t,t+1,d)}if(e[t]>=184){let d=e[t]-183;a(t+1+d);let i=aS(e,t+1,d);a(t+1+d+i);let p=tl(e.slice(t+1+d,t+1+d+i));return{consumed:1+d+i,result:p}}if(e[t]>=128){let d=e[t]-128;a(t+1+d);let i=tl(e.slice(t+1,t+1+d));return{consumed:1+d,result:i}}return{consumed:1,result:function(e){let t=e.toString(16);for(;t.length<2;)t="0"+t;return"0x"+t}(e[t])}}function aT(e){let t=tp(e,"data"),a=aN(t,0);return te(a.consumed===t.length,"unexpected junk after rlp payload","data",e),a.result}function aA(e){let t=[];for(;e;)t.unshift(255&e),e>>=8;return t}let a_="0123456789abcdef";function ak(e){let t="0x";for(let a of function e(t){if(Array.isArray(t)){let a=[];if(t.forEach(function(t){a=a.concat(e(t))}),a.length<=55)return a.unshift(192+a.length),a;let d=aA(a.length);return d.unshift(247+d.length),d.concat(a)}let a=Array.prototype.slice.call(tp(t,"object"));if(1===a.length&&a[0]<=127)return a;if(a.length<=55)return a.unshift(128+a.length),a;let d=aA(a.length);return d.unshift(183+d.length),d.concat(a)}(e))t+=a_[a>>4],t+=a_[15&a];return t}function aI(e,t){return{address:ae(e),storageKeys:t.map((e,t)=>(te(tn(e,32),"invalid slot",`storageKeys[${t}]`,e),e.toLowerCase()))}}function aB(e){if(Array.isArray(e))return e.map((t,a)=>Array.isArray(t)?(te(2===t.length,"invalid slot set",`value[${a}]`,t),aI(t[0],t[1])):(te(null!=t&&"object"==typeof t,"invalid address-slot set","value",e),aI(t.address,t.storageKeys)));te(null!=e&&"object"==typeof e,"invalid access list","value",e);let t=Object.keys(e).map(t=>{let a=e[t].reduce((e,t)=>(e[t]=!0,e),{});return aI(t,Object.keys(a).sort())});return t.sort((e,t)=>e.address.localeCompare(t.address)),t}function aD(e){let t;return ae(t4("0x"+("string"==typeof e?tO.computePublicKey(e,!1):e.publicKey).substring(4)).substring(26))}let aP=BigInt(0),aO=BigInt(2),aV=BigInt(27),aR=BigInt(28),aM=BigInt(35),aC=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function aL(e){return"0x"===e?null:ae(e)}function aU(e,t){try{return aB(e)}catch(a){te(!1,a.message,t,e)}}function aF(e,t){return"0x"===e?0:tw(e,t)}function az(e,t){if("0x"===e)return aP;let a=tb(e,t);return te(a<=aC,"value exceeds uint size",t,a),a}function aK(e,t){let a=tb(e,"value"),d=tE(a);return te(d.length<=32,"value too large",`tx.${t}`,a),d}function aH(e){return aB(e).map(e=>[e.address,e.storageKeys])}function aj(e,t){let a=[aK(e.nonce,"nonce"),aK(e.gasPrice||0,"gasPrice"),aK(e.gasLimit,"gasLimit"),e.to||"0x",aK(e.value,"value"),e.data],d=aP;if(e.chainId!=aP)d=tb(e.chainId,"tx.chainId"),te(!t||null==t.networkV||t.legacyChainId===d,"tx.chainId/sig.v mismatch","sig",t);else if(e.signature){let t=e.signature.legacyChainId;null!=t&&(d=t)}if(!t)return d!==aP&&(a.push(tE(d)),a.push("0x"),a.push("0x")),ak(a);let i=BigInt(27+t.yParity);return d!==aP?i=tP.getChainIdV(d,t.v):BigInt(t.v)!==i&&te(!1,"tx.chainId/sig.v mismatch","sig",t),a.push(tE(i)),a.push(tE(t.r)),a.push(tE(t.s)),ak(a)}function aq(e,t){let a;try{if(a=aF(t[0],"yParity"),0!==a&&1!==a)throw Error("bad yParity")}catch(e){te(!1,"invalid yParity","yParity",t[0])}let d=tc(t[1],32),i=tc(t[2],32);e.signature=tP.from({r:d,s:i,yParity:a})}function a$(e,t){let a=[aK(e.chainId,"chainId"),aK(e.nonce,"nonce"),aK(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),aK(e.maxFeePerGas||0,"maxFeePerGas"),aK(e.gasLimit,"gasLimit"),e.to||"0x",aK(e.value,"value"),e.data,aH(e.accessList||[])];return t&&(a.push(aK(t.yParity,"yParity")),a.push(tE(t.r)),a.push(tE(t.s))),tm(["0x02",ak(a)])}function aW(e,t){let a=[aK(e.chainId,"chainId"),aK(e.nonce,"nonce"),aK(e.gasPrice||0,"gasPrice"),aK(e.gasLimit,"gasLimit"),e.to||"0x",aK(e.value,"value"),e.data,aH(e.accessList||[])];return t&&(a.push(aK(t.yParity,"recoveryParam")),a.push(tE(t.r)),a.push(tE(t.s))),tm(["0x01",ak(a)])}function aG(e,t){let a=[aK(e.chainId,"chainId"),aK(e.nonce,"nonce"),aK(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),aK(e.maxFeePerGas||0,"maxFeePerGas"),aK(e.gasLimit,"gasLimit"),e.to||aw,aK(e.value,"value"),e.data,aH(e.accessList||[]),aK(e.maxFeePerBlobGas||0,"maxFeePerBlobGas"),function(e,t){te(Array.isArray(e),`invalid ${t}`,"value",e);for(let t=0;t<e.length;t++)te(tn(e[t],32),"invalid ${ param } hash",`value[${t}]`,e[t]);return e}(e.blobVersionedHashes||[],"blobVersionedHashes")];return t&&(a.push(aK(t.yParity,"yParity")),a.push(tE(t.r)),a.push(tE(t.s))),tm(["0x03",ak(a)])}class aZ{#o;#l;#m;#u;#f;#c;#h;#x;#b;#v;#g;#y;#w;#S;get type(){return this.#o}set type(e){switch(e){case null:this.#o=null;break;case 0:case"legacy":this.#o=0;break;case 1:case"berlin":case"eip-2930":this.#o=1;break;case 2:case"london":case"eip-1559":this.#o=2;break;case 3:case"cancun":case"eip-4844":this.#o=3;break;default:te(!1,"unsupported transaction type","type",e)}}get typeName(){switch(this.type){case 0:return"legacy";case 1:return"eip-2930";case 2:return"eip-1559";case 3:return"eip-4844"}return null}get to(){let e=this.#l;return null==e&&3===this.type?aw:e}set to(e){this.#l=null==e?null:ae(e)}get nonce(){return this.#u}set nonce(e){this.#u=tw(e,"value")}get gasLimit(){return this.#f}set gasLimit(e){this.#f=tb(e)}get gasPrice(){let e=this.#c;return null==e&&(0===this.type||1===this.type)?aP:e}set gasPrice(e){this.#c=null==e?null:tb(e,"gasPrice")}get maxPriorityFeePerGas(){let e=this.#h;return null==e?2===this.type||3===this.type?aP:null:e}set maxPriorityFeePerGas(e){this.#h=null==e?null:tb(e,"maxPriorityFeePerGas")}get maxFeePerGas(){let e=this.#x;return null==e?2===this.type||3===this.type?aP:null:e}set maxFeePerGas(e){this.#x=null==e?null:tb(e,"maxFeePerGas")}get data(){return this.#m}set data(e){this.#m=tl(e)}get value(){return this.#b}set value(e){this.#b=tb(e,"value")}get chainId(){return this.#v}set chainId(e){this.#v=tb(e)}get signature(){return this.#g||null}set signature(e){this.#g=null==e?null:tP.from(e)}get accessList(){let e=this.#y||null;return null==e?1===this.type||2===this.type||3===this.type?[]:null:e}set accessList(e){this.#y=null==e?null:aB(e)}get maxFeePerBlobGas(){let e=this.#w;return null==e&&3===this.type?aP:e}set maxFeePerBlobGas(e){this.#w=null==e?null:tb(e,"maxFeePerBlobGas")}get blobVersionedHashes(){let e=this.#S;return null==e&&3===this.type?[]:e}set blobVersionedHashes(e){if(null!=e){te(Array.isArray(e),"blobVersionedHashes must be an Array","value",e),e=e.slice();for(let t=0;t<e.length;t++)te(tn(e[t],32),"invalid blobVersionedHash",`value[${t}]`,e[t])}this.#S=e}constructor(){this.#o=null,this.#l=null,this.#u=0,this.#f=aP,this.#c=null,this.#h=null,this.#x=null,this.#m="0x",this.#b=aP,this.#v=aP,this.#g=null,this.#y=null,this.#w=null,this.#S=null}get hash(){return null==this.signature?null:t4(this.serialized)}get unsignedHash(){return t4(this.unsignedSerialized)}get from(){var e,t;return null==this.signature?null:(e=this.unsignedHash,t=this.signature,aD(tO.recoverPublicKey(e,t)))}get fromPublicKey(){return null==this.signature?null:tO.recoverPublicKey(this.unsignedHash,this.signature)}isSigned(){return null!=this.signature}get serialized(){switch(e7(null!=this.signature,"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized","UNSUPPORTED_OPERATION",{operation:".serialized"}),this.inferType()){case 0:return aj(this,this.signature);case 1:return aW(this,this.signature);case 2:return a$(this,this.signature);case 3:return aG(this,this.signature)}e7(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:".serialized"})}get unsignedSerialized(){switch(this.inferType()){case 0:return aj(this);case 1:return aW(this);case 2:return a$(this);case 3:return aG(this)}e7(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:".unsignedSerialized"})}inferType(){let e=this.inferTypes();return e.indexOf(2)>=0?2:e.pop()}inferTypes(){let e=null!=this.gasPrice,t=null!=this.maxFeePerGas||null!=this.maxPriorityFeePerGas,a=null!=this.accessList,d=null!=this.#w||this.#S;null!=this.maxFeePerGas&&null!=this.maxPriorityFeePerGas&&e7(this.maxFeePerGas>=this.maxPriorityFeePerGas,"priorityFee cannot be more than maxFee","BAD_DATA",{value:this}),e7(!t||0!==this.type&&1!==this.type,"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas","BAD_DATA",{value:this}),e7(0!==this.type||!a,"legacy transaction cannot have accessList","BAD_DATA",{value:this});let i=[];return null!=this.type?i.push(this.type):t?i.push(2):e?(i.push(1),a||i.push(0)):a?(i.push(1),i.push(2)):(d&&this.to||(i.push(0),i.push(1),i.push(2)),i.push(3)),i.sort(),i}isLegacy(){return 0===this.type}isBerlin(){return 1===this.type}isLondon(){return 2===this.type}isCancun(){return 3===this.type}clone(){return aZ.from(this)}toJSON(){let e=e=>null==e?null:e.toString();return{type:this.type,to:this.to,data:this.data,nonce:this.nonce,gasLimit:e(this.gasLimit),gasPrice:e(this.gasPrice),maxPriorityFeePerGas:e(this.maxPriorityFeePerGas),maxFeePerGas:e(this.maxFeePerGas),value:e(this.value),chainId:e(this.chainId),sig:this.signature?this.signature.toJSON():null,accessList:this.accessList}}static from(e){if(null==e)return new aZ;if("string"==typeof e){let t=tp(e);if(t[0]>=127)return aZ.from(function(e){let t=aT(e);te(Array.isArray(t)&&(9===t.length||6===t.length),"invalid field count for legacy transaction","data",e);let a={type:0,nonce:aF(t[0],"nonce"),gasPrice:az(t[1],"gasPrice"),gasLimit:az(t[2],"gasLimit"),to:aL(t[3]),value:az(t[4],"value"),data:tl(t[5]),chainId:aP};if(6===t.length)return a;let d=az(t[6],"v"),i=az(t[7],"r"),p=az(t[8],"s");if(i===aP&&p===aP)a.chainId=d;else{let i=(d-aM)/aO;i<aP&&(i=aP),a.chainId=i,te(i!==aP||d===aV||d===aR,"non-canonical legacy v","v",t[6]),a.signature=tP.from({r:tc(t[7],32),s:tc(t[8],32),v:d}),a.hash=t4(e)}return a}(t));switch(t[0]){case 1:return aZ.from(function(e){let t=aT(tp(e).slice(1));te(Array.isArray(t)&&(8===t.length||11===t.length),"invalid field count for transaction type: 1","data",tl(e));let a={type:1,chainId:az(t[0],"chainId"),nonce:aF(t[1],"nonce"),gasPrice:az(t[2],"gasPrice"),gasLimit:az(t[3],"gasLimit"),to:aL(t[4]),value:az(t[5],"value"),data:tl(t[6]),accessList:aU(t[7],"accessList")};return 8===t.length||(a.hash=t4(e),aq(a,t.slice(8))),a}(t));case 2:return aZ.from(function(e){let t=aT(tp(e).slice(1));te(Array.isArray(t)&&(9===t.length||12===t.length),"invalid field count for transaction type: 2","data",tl(e));let a={type:2,chainId:az(t[0],"chainId"),nonce:aF(t[1],"nonce"),maxPriorityFeePerGas:az(t[2],"maxPriorityFeePerGas"),maxFeePerGas:az(t[3],"maxFeePerGas"),gasPrice:null,gasLimit:az(t[4],"gasLimit"),to:aL(t[5]),value:az(t[6],"value"),data:tl(t[7]),accessList:aU(t[8],"accessList")};return 9===t.length||(a.hash=t4(e),aq(a,t.slice(9))),a}(t));case 3:return aZ.from(function(e){let t=aT(tp(e).slice(1));te(Array.isArray(t)&&(11===t.length||14===t.length),"invalid field count for transaction type: 3","data",tl(e));let a={type:3,chainId:az(t[0],"chainId"),nonce:aF(t[1],"nonce"),maxPriorityFeePerGas:az(t[2],"maxPriorityFeePerGas"),maxFeePerGas:az(t[3],"maxFeePerGas"),gasPrice:null,gasLimit:az(t[4],"gasLimit"),to:aL(t[5]),value:az(t[6],"value"),data:tl(t[7]),accessList:aU(t[8],"accessList"),maxFeePerBlobGas:az(t[9],"maxFeePerBlobGas"),blobVersionedHashes:t[10]};te(null!=a.to,"invalid address for transaction type: 3","data",e),te(Array.isArray(a.blobVersionedHashes),"invalid blobVersionedHashes: must be an array","data",e);for(let t=0;t<a.blobVersionedHashes.length;t++)te(tn(a.blobVersionedHashes[t],32),`invalid blobVersionedHash at index ${t}: must be length 32`,"data",e);return 11===t.length||(a.hash=t4(e),aq(a,t.slice(11))),a}(t))}e7(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:"from"})}let t=new aZ;return null!=e.type&&(t.type=e.type),null!=e.to&&(t.to=e.to),null!=e.nonce&&(t.nonce=e.nonce),null!=e.gasLimit&&(t.gasLimit=e.gasLimit),null!=e.gasPrice&&(t.gasPrice=e.gasPrice),null!=e.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=e.maxPriorityFeePerGas),null!=e.maxFeePerGas&&(t.maxFeePerGas=e.maxFeePerGas),null!=e.maxFeePerBlobGas&&(t.maxFeePerBlobGas=e.maxFeePerBlobGas),null!=e.data&&(t.data=e.data),null!=e.value&&(t.value=e.value),null!=e.chainId&&(t.chainId=e.chainId),null!=e.signature&&(t.signature=tP.from(e.signature)),null!=e.accessList&&(t.accessList=e.accessList),null!=e.blobVersionedHashes&&(t.blobVersionedHashes=e.blobVersionedHashes),null!=e.hash&&(te(t.isSigned(),"unsigned transaction cannot define hash","tx",e),te(t.hash===e.hash,"hash mismatch","tx",e)),null!=e.from&&(te(t.isSigned(),"unsigned transaction cannot define from","tx",e),te(t.from.toLowerCase()===(e.from||"").toLowerCase(),"from mismatch","tx",e)),t}}let aY=BigInt(0);function aX(e){return null==e?null:e.toString()}Symbol.iterator;Symbol.iterator;class aJ{provider;blockNumber;blockHash;index;hash;type;to;from;nonce;gasLimit;gasPrice;maxPriorityFeePerGas;maxFeePerGas;maxFeePerBlobGas;data;value;chainId;signature;accessList;blobVersionedHashes;#E;constructor(e,t){this.provider=t,this.blockNumber=null!=e.blockNumber?e.blockNumber:null,this.blockHash=null!=e.blockHash?e.blockHash:null,this.hash=e.hash,this.index=e.index,this.type=e.type,this.from=e.from,this.to=e.to||null,this.gasLimit=e.gasLimit,this.nonce=e.nonce,this.data=e.data,this.value=e.value,this.gasPrice=e.gasPrice,this.maxPriorityFeePerGas=null!=e.maxPriorityFeePerGas?e.maxPriorityFeePerGas:null,this.maxFeePerGas=null!=e.maxFeePerGas?e.maxFeePerGas:null,this.maxFeePerBlobGas=null!=e.maxFeePerBlobGas?e.maxFeePerBlobGas:null,this.chainId=e.chainId,this.signature=e.signature,this.accessList=null!=e.accessList?e.accessList:null,this.blobVersionedHashes=null!=e.blobVersionedHashes?e.blobVersionedHashes:null,this.#E=-1}toJSON(){let{blockNumber:e,blockHash:t,index:a,hash:d,type:i,to:p,from:r,nonce:n,data:s,signature:o,accessList:l,blobVersionedHashes:m}=this;return{_type:"TransactionResponse",accessList:l,blockNumber:e,blockHash:t,blobVersionedHashes:m,chainId:aX(this.chainId),data:s,from:r,gasLimit:aX(this.gasLimit),gasPrice:aX(this.gasPrice),hash:d,maxFeePerGas:aX(this.maxFeePerGas),maxPriorityFeePerGas:aX(this.maxPriorityFeePerGas),maxFeePerBlobGas:aX(this.maxFeePerBlobGas),nonce:n,signature:o,to:p,index:a,type:i,value:aX(this.value)}}async getBlock(){let e=this.blockNumber;if(null==e){let t=await this.getTransaction();t&&(e=t.blockNumber)}if(null==e)return null;let t=this.provider.getBlock(e);if(null==t)throw Error("TODO");return t}async getTransaction(){return this.provider.getTransaction(this.hash)}async confirmations(){if(null==this.blockNumber){let{tx:e,blockNumber:t}=await e3({tx:this.getTransaction(),blockNumber:this.provider.getBlockNumber()});return null==e||null==e.blockNumber?0:t-e.blockNumber+1}return await this.provider.getBlockNumber()-this.blockNumber+1}async wait(e,t){let a=null==e?1:e,d=null==t?0:t,i=this.#E,p=-1,r=-1===i,n=async()=>{if(r)return null;let{blockNumber:e,nonce:t}=await e3({blockNumber:this.provider.getBlockNumber(),nonce:this.provider.getTransactionCount(this.from)});if(t<this.nonce){i=e;return}if(r)return null;let d=await this.getTransaction();if(!d||null==d.blockNumber)for(-1===p&&(p=i-3)<this.#E&&(p=this.#E);p<=e;){if(r)return null;let t=await this.provider.getBlock(p,!0);if(null==t)break;for(let e of t)if(e===this.hash)return;for(let d=0;d<t.length;d++){let p=await t.getTransaction(d);if(p.from===this.from&&p.nonce===this.nonce){if(r)return null;let t=await this.provider.getTransactionReceipt(p.hash);if(null==t||e-t.blockNumber+1<a)return;let d="replaced";p.data===this.data&&p.to===this.to&&p.value===this.value?d="repriced":"0x"===p.data&&p.from===p.to&&p.value===aY&&(d="cancelled"),e7(!1,"transaction was replaced","TRANSACTION_REPLACED",{cancelled:"replaced"===d||"cancelled"===d,reason:d,replacement:p.replaceableTransaction(i),hash:p.hash,receipt:t})}}p++}},s=e=>{if(null==e||0!==e.status)return e;e7(!1,"transaction execution reverted","CALL_EXCEPTION",{action:"sendTransaction",data:null,reason:null,invocation:null,revert:null,transaction:{to:e.to,from:e.from,data:""},receipt:e})},o=await this.provider.getTransactionReceipt(this.hash);if(0===a)return s(o);if(o){if(await o.confirmations()>=a)return s(o)}else if(await n(),0===a)return null;let l=new Promise((e,t)=>{let p=[],o=()=>{p.forEach(e=>e())};if(p.push(()=>{r=!0}),d>0){let e=setTimeout(()=>{o(),t(e5("wait for transaction timeout","TIMEOUT"))},d);p.push(()=>{clearTimeout(e)})}let l=async d=>{if(await d.confirmations()>=a){o();try{e(s(d))}catch(e){t(e)}}};if(p.push(()=>{this.provider.off(this.hash,l)}),this.provider.on(this.hash,l),i>=0){let e=async()=>{try{await n()}catch(e){if(e&&"TRANSACTION_REPLACED"===e.code){o(),t(e);return}}r||this.provider.once("block",e)};p.push(()=>{this.provider.off("block",e)}),this.provider.once("block",e)}});return await l}isMined(){return null!=this.blockHash}isLegacy(){return 0===this.type}isBerlin(){return 1===this.type}isLondon(){return 2===this.type}isCancun(){return 3===this.type}removedEvent(){return e7(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),function(e){return{orphan:"drop-transaction",tx:e}}(this)}reorderedEvent(e){return e7(this.isMined(),"unmined transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),e7(!e||e.isMined(),"unmined 'other' transaction canot be orphaned","UNSUPPORTED_OPERATION",{operation:"removeEvent()"}),function(e,t){return{orphan:"reorder-transaction",tx:e,other:t}}(this,e)}replaceableTransaction(e){te(Number.isInteger(e)&&e>=0,"invalid startBlock","startBlock",e);let t=new aJ(this,this.provider);return t.#E=e,t}}function aQ(e,t){if(e.provider)return e.provider;e7(!1,"missing provider","UNSUPPORTED_OPERATION",{operation:t})}async function a1(e,t){let a=function(e){let t={};for(let a of(e.to&&(t.to=e.to),e.from&&(t.from=e.from),e.data&&(t.data=tl(e.data)),"chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/)))a in e&&null!=e[a]&&(t[a]=tb(e[a],`request.${a}`));for(let a of"type,nonce".split(/,/))a in e&&null!=e[a]&&(t[a]=tw(e[a],`request.${a}`));return e.accessList&&(t.accessList=aB(e.accessList)),"blockTag"in e&&(t.blockTag=e.blockTag),"enableCcipRead"in e&&(t.enableCcipRead=!!e.enableCcipRead),"customData"in e&&(t.customData=e.customData),t}(t);if(null!=a.to&&(a.to=aa(a.to,e)),null!=a.from){let t=a.from;a.from=Promise.all([e.getAddress(),aa(t,e)]).then(([e,t])=>(te(e.toLowerCase()===t.toLowerCase(),"transaction from mismatch","tx.from",t),e))}else a.from=e.getAddress();return await e3(a)}class a0{provider;constructor(e){e9(this,{provider:e||null})}async getNonce(e){return aQ(this,"getTransactionCount").getTransactionCount(await this.getAddress(),e)}async populateCall(e){return await a1(this,e)}async populateTransaction(e){let t=aQ(this,"populateTransaction"),a=await a1(this,e);null==a.nonce&&(a.nonce=await this.getNonce("pending")),null==a.gasLimit&&(a.gasLimit=await this.estimateGas(a));let d=await this.provider.getNetwork();null!=a.chainId?te(tb(a.chainId)===d.chainId,"transaction chainId mismatch","tx.chainId",e.chainId):a.chainId=d.chainId;let i=null!=a.maxFeePerGas||null!=a.maxPriorityFeePerGas;if(null!=a.gasPrice&&(2===a.type||i)?te(!1,"eip-1559 transaction do not support gasPrice","tx",e):(0===a.type||1===a.type)&&i&&te(!1,"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","tx",e),(2===a.type||null==a.type)&&null!=a.maxFeePerGas&&null!=a.maxPriorityFeePerGas)a.type=2;else if(0===a.type||1===a.type){let e=await t.getFeeData();e7(null!=e.gasPrice,"network does not support gasPrice","UNSUPPORTED_OPERATION",{operation:"getGasPrice"}),null==a.gasPrice&&(a.gasPrice=e.gasPrice)}else{let e=await t.getFeeData();if(null==a.type)if(null!=e.maxFeePerGas&&null!=e.maxPriorityFeePerGas)if(a.type=2,null!=a.gasPrice){let e=a.gasPrice;delete a.gasPrice,a.maxFeePerGas=e,a.maxPriorityFeePerGas=e}else null==a.maxFeePerGas&&(a.maxFeePerGas=e.maxFeePerGas),null==a.maxPriorityFeePerGas&&(a.maxPriorityFeePerGas=e.maxPriorityFeePerGas);else null!=e.gasPrice?(e7(!i,"network does not support EIP-1559","UNSUPPORTED_OPERATION",{operation:"populateTransaction"}),null==a.gasPrice&&(a.gasPrice=e.gasPrice),a.type=0):e7(!1,"failed to get consistent fee data","UNSUPPORTED_OPERATION",{operation:"signer.getFeeData"});else 2===a.type&&(null==a.maxFeePerGas&&(a.maxFeePerGas=e.maxFeePerGas),null==a.maxPriorityFeePerGas&&(a.maxPriorityFeePerGas=e.maxPriorityFeePerGas))}return await e3(a)}async estimateGas(e){return aQ(this,"estimateGas").estimateGas(await this.populateCall(e))}async call(e){return aQ(this,"call").call(await this.populateCall(e))}async resolveName(e){let t=aQ(this,"resolveName");return await t.resolveName(e)}async sendTransaction(e){let t=aQ(this,"sendTransaction"),a=await this.populateTransaction(e);delete a.from;let d=aZ.from(a);return await t.broadcastTransaction(await this.signTransaction(d))}}class a2 extends a0{address;constructor(e,t){super(t),e9(this,{address:e})}async getAddress(){return this.address}connect(e){return new a2(this.address,e)}#N(e,t){e7(!1,`VoidSigner cannot sign ${e}`,"UNSUPPORTED_OPERATION",{operation:t})}async signTransaction(e){this.#N("transactions","signTransaction")}async signMessage(e){this.#N("messages","signMessage")}async signTypedData(e,t,a){this.#N("typed-data","signTypedData")}}class a6 extends a0{address;#T;constructor(e,t){super(t),te(e&&"function"==typeof e.sign,"invalid private key","privateKey","[ REDACTED ]"),this.#T=e,e9(this,{address:aD(this.signingKey.publicKey)})}get signingKey(){return this.#T}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(e){return new a6(this.#T,e)}async signTransaction(e){let{to:t,from:a}=await e3({to:e.to?aa(e.to,this.provider):void 0,from:e.from?aa(e.from,this.provider):void 0});null!=t&&(e.to=t),null!=a&&(e.from=a),null!=e.from&&(te(ae(e.from)===this.address,"transaction from address mismatch","tx.from",e.from),delete e.from);let d=aZ.from(e);return d.signature=this.signingKey.sign(d.unsignedHash),d.serialized}async signMessage(e){return this.signMessageSync(e)}signMessageSync(e){var t;return this.signingKey.sign(("string"==typeof(t=e)&&(t=ap(t)),t4(tm([ap("\x19Ethereum Signed Message:\n"),ap(String(t.length)),t])))).serialized}async signTypedData(e,t,a){let d=await ay.resolveNames(e,t,a,async e=>{e7(null!=this.provider,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:e}});let t=await this.provider.resolveName(e);return e7(null!=t,"unconfigured ENS name","UNCONFIGURED_NAME",{value:e}),t});return this.signingKey.sign(ay.hash(d.domain,t,d.value)).serialized}}let a4=function(e){return(0,E.createHash)("sha256").update(e).digest()},a3=function(e){return(0,E.createHash)("sha512").update(e).digest()},a9=a4,a8=a3,a5=!1,a7=!1;function de(e){let t=tp(e,"data");return tl(a9(t))}function dt(e){let t=tp(e,"data");return tl(a8(t))}de._=a4,de.lock=function(){a5=!0},de.register=function(e){if(a5)throw Error("sha256 is locked");a9=e},Object.freeze(de),dt._=a3,dt.lock=function(){a7=!0},dt.register=function(e){if(a7)throw Error("sha512 is locked");a8=e},Object.freeze(de);let da=!1,dd=function(e,t,a){return(0,E.createHmac)(e,t).update(a).digest()},di=dd;function dp(e,t,a){let d=tp(t,"key"),i=tp(a,"data");return tl(di(e,d,i))}dp._=dd,dp.lock=function(){da=!0},dp.register=function(e){if(da)throw Error("computeHmac is locked");di=e},Object.freeze(dp);let dr=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),dn=Uint8Array.from({length:16},(e,t)=>t),ds=dn.map(e=>(9*e+5)%16),dl=[dn],dm=[ds];for(let e=0;e<4;e++)for(let t of[dl,dm])t.push(t[e].map(e=>dr[e]));let du=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(e=>new Uint8Array(e)),df=dl.map((e,t)=>e.map(e=>du[t][e])),dc=dm.map((e,t)=>e.map(e=>du[t][e])),dh=new Uint32Array([0,0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xa953fd4e]),dx=new Uint32Array([0x50a28be6,0x5c4dd124,0x6d703ef3,0x7a6d76e9,0]),db=(e,t)=>e<<t|e>>>32-t;function dv(e,t,a,d){return 0===e?t^a^d:1===e?t&a|~t&d:2===e?(t|~a)^d:3===e?t&d|a&~d:t^(a|~d)}let dg=new Uint32Array(16);class dy extends G{constructor(){super(64,20,8,!0),this.h0=0x67452301,this.h1=-0x10325477,this.h2=-0x67452302,this.h3=0x10325476,this.h4=-0x3c2d1e10}get(){let{h0:e,h1:t,h2:a,h3:d,h4:i}=this;return[e,t,a,d,i]}set(e,t,a,d,i){this.h0=0|e,this.h1=0|t,this.h2=0|a,this.h3=0|d,this.h4=0|i}process(e,t){for(let a=0;a<16;a++,t+=4)dg[a]=e.getUint32(t,!0);let a=0|this.h0,d=a,i=0|this.h1,p=i,r=0|this.h2,n=r,s=0|this.h3,o=s,l=0|this.h4,m=l;for(let e=0;e<5;e++){let t=4-e,u=dh[e],f=dx[e],c=dl[e],h=dm[e],x=df[e],b=dc[e];for(let t=0;t<16;t++){let d=db(a+dv(e,i,r,s)+dg[c[t]]+u,x[t])+l|0;a=l,l=s,s=0|db(r,10),r=i,i=d}for(let e=0;e<16;e++){let a=db(d+dv(t,p,n,o)+dg[h[e]]+f,b[e])+m|0;d=m,m=o,o=0|db(n,10),n=p,p=a}}this.set(this.h1+r+o|0,this.h2+s+m|0,this.h3+l+d|0,this.h4+a+p|0,this.h0+i+n|0)}roundClean(){dg.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}let dw=$(()=>new dy),dS=!1,dE=function(e){return dw(e)},dN=dE;function dT(e){let t=tp(e,"data");return tl(dN(t))}dT._=dE,dT.lock=function(){dS=!0},dT.register=function(e){if(dS)throw TypeError("ripemd160 is locked");dN=e},Object.freeze(dT);let dA=!1,d_=function(e){return new Uint8Array((0,E.randomBytes)(e))},dk=d_;function dI(e){return dk(e)}dI._=d_,dI.lock=function(){dA=!0},dI.register=function(e){if(dA)throw Error("randomBytes is locked");dk=e},Object.freeze(dI);let dB="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",dD=null,dP=BigInt(0),dO=BigInt(58),dV=" !#$%&'()*+,-./<=>?@[]^_`{|}~",dR=/^[a-z]*$/i;function dM(e,t){let a=97;return e.reduce((e,d)=>(d===t?a++:d.match(dR)?e.push(String.fromCharCode(a)+d):(a=97,e.push(d)),e),[])}class dC{locale;constructor(e){e9(this,{locale:e})}split(e){return e.toLowerCase().split(/\s+/g)}join(e){return e.join(" ")}}class dL extends dC{#m;#A;constructor(e,t,a){super(e),this.#m=t,this.#A=a,this.#_=null}get _data(){return this.#m}_decodeWords(){var e;return te("0"===(e=this.#m)[0],"unsupported auwl data","data",e),function(e,t){for(let a=dV.length-1;a>=0;a--)e=e.split(dV[a]).join(t.substring(2*a,2*a+2));let a=[],d=e.replace(/(:|([0-9])|([A-Z][a-z]*))/g,(e,t,d,i)=>{if(d)for(let e=parseInt(d);e>=0;e--)a.push(";");else a.push(t.toLowerCase());return""});if(d)throw Error(`leftovers: ${JSON.stringify(d)}`);return dM(dM(a,";"),":")}(e.substring(1+2*dV.length),e.substring(1,1+2*dV.length))}#_;#k(){if(null==this.#_){let e=this._decodeWords();if(t4(ap(e.join("\n")+"\n"))!==this.#A)throw Error(`BIP39 Wordlist for ${this.locale} FAILED`);this.#_=e}return this.#_}getWord(e){let t=this.#k();return te(e>=0&&e<t.length,`invalid word index: ${e}`,"index",e),t[e]}getWordIndex(e){return this.#k().indexOf(e)}}let dU=null;class dF extends dL{constructor(){super("en","0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO","0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60")}static wordlist(){return null==dU&&(dU=new dF),dU}}let dz=!1,dK=function(e,t,a,d,i){return(0,E.pbkdf2Sync)(e,t,a,d,i)},dH=dK;function dj(e,t,a,d,i){let p=tp(e,"password"),r=tp(t,"salt");return tl(dH(p,r,a,d,i))}function dq(e){return(1<<e)-1<<8-e&255}function d$(e,t){ta("NFKD"),null==t&&(t=dF.wordlist());let a=t.split(e);te(a.length%3==0&&a.length>=12&&a.length<=24,"invalid mnemonic length","mnemonic","[ REDACTED ]");let d=new Uint8Array(Math.ceil(11*a.length/8)),i=0;for(let e=0;e<a.length;e++){let p=t.getWordIndex(a[e].normalize("NFKD"));te(p>=0,`invalid mnemonic word at index ${e}`,"mnemonic","[ REDACTED ]");for(let e=0;e<11;e++)p&1<<10-e&&(d[i>>3]|=1<<7-i%8),i++}let p=32*a.length/3,r=dq(a.length/3);return te((tp(de(d.slice(0,p/8)))[0]&r)==(d[d.length-1]&r),"invalid mnemonic checksum","mnemonic","[ REDACTED ]"),tl(d.slice(0,p/8))}function dW(e,t){te(e.length%4==0&&e.length>=16&&e.length<=32,"invalid entropy size","entropy","[ REDACTED ]"),null==t&&(t=dF.wordlist());let a=[0],d=11;for(let t=0;t<e.length;t++)d>8?(a[a.length-1]<<=8,a[a.length-1]|=e[t],d-=8):(a[a.length-1]<<=d,a[a.length-1]|=e[t]>>8-d,a.push(e[t]&((1<<8-d)-1&255)),d+=3);let i=e.length/4,p=parseInt(de(e).substring(2,4),16)&dq(i);return a[a.length-1]<<=i,a[a.length-1]|=p>>8-i,t.join(a.map(e=>t.getWord(e)))}dj._=dK,dj.lock=function(){dz=!0},dj.register=function(e){if(dz)throw Error("pbkdf2 is locked");dH=e},Object.freeze(dj);let dG={};class dZ{phrase;password;wordlist;entropy;constructor(e,t,a,d,i){null==d&&(d=""),null==i&&(i=dF.wordlist()),td(e,dG,"Mnemonic"),e9(this,{phrase:a,password:d,wordlist:i,entropy:t})}computeSeed(){let e=ap("mnemonic"+this.password,"NFKD");return dj(ap(this.phrase,"NFKD"),e,2048,64,"sha512")}static fromPhrase(e,t,a){let d=d$(e,a);return e=dW(tp(d),a),new dZ(dG,d,e,t,a)}static fromEntropy(e,t,a){let d=tp(e,"entropy"),i=dW(d,a);return new dZ(dG,tl(d),i,t,a)}static entropyToPhrase(e,t){return dW(tp(e,"entropy"),t)}static phraseToEntropy(e,t){return d$(e,t)}static isValidMnemonic(e,t){try{return d$(e,t),!0}catch(e){}return!1}}var dY=function(e,t,a,d){if("a"===a&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!d:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?d:"a"===a?d.call(e):d?d.value:t.get(e)},dX=function(e,t,a,d,i){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?i.call(e,a):i?i.value=a:t.set(e,a),a};let dJ={16:10,24:12,32:14},dQ=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],d1=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],d0=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],d2=[0xc66363a5,0xf87c7c84,0xee777799,0xf67b7b8d,0xfff2f20d,0xd66b6bbd,0xde6f6fb1,0x91c5c554,0x60303050,0x2010103,0xce6767a9,0x562b2b7d,0xe7fefe19,0xb5d7d762,0x4dababe6,0xec76769a,0x8fcaca45,0x1f82829d,0x89c9c940,0xfa7d7d87,0xeffafa15,0xb25959eb,0x8e4747c9,0xfbf0f00b,0x41adadec,0xb3d4d467,0x5fa2a2fd,0x45afafea,0x239c9cbf,0x53a4a4f7,0xe4727296,0x9bc0c05b,0x75b7b7c2,0xe1fdfd1c,0x3d9393ae,0x4c26266a,0x6c36365a,0x7e3f3f41,0xf5f7f702,0x83cccc4f,0x6834345c,0x51a5a5f4,0xd1e5e534,0xf9f1f108,0xe2717193,0xabd8d873,0x62313153,0x2a15153f,0x804040c,0x95c7c752,0x46232365,0x9dc3c35e,0x30181828,0x379696a1,0xa05050f,0x2f9a9ab5,0xe070709,0x24121236,0x1b80809b,0xdfe2e23d,0xcdebeb26,0x4e272769,0x7fb2b2cd,0xea75759f,0x1209091b,0x1d83839e,0x582c2c74,0x341a1a2e,0x361b1b2d,0xdc6e6eb2,0xb45a5aee,0x5ba0a0fb,0xa45252f6,0x763b3b4d,0xb7d6d661,0x7db3b3ce,0x5229297b,0xdde3e33e,0x5e2f2f71,0x13848497,0xa65353f5,0xb9d1d168,0,0xc1eded2c,0x40202060,0xe3fcfc1f,0x79b1b1c8,0xb65b5bed,0xd46a6abe,0x8dcbcb46,0x67bebed9,0x7239394b,0x944a4ade,0x984c4cd4,0xb05858e8,0x85cfcf4a,0xbbd0d06b,0xc5efef2a,0x4faaaae5,0xedfbfb16,0x864343c5,0x9a4d4dd7,0x66333355,0x11858594,0x8a4545cf,0xe9f9f910,0x4020206,0xfe7f7f81,0xa05050f0,0x783c3c44,0x259f9fba,0x4ba8a8e3,0xa25151f3,0x5da3a3fe,0x804040c0,0x58f8f8a,0x3f9292ad,0x219d9dbc,0x70383848,0xf1f5f504,0x63bcbcdf,0x77b6b6c1,0xafdada75,0x42212163,0x20101030,0xe5ffff1a,0xfdf3f30e,0xbfd2d26d,0x81cdcd4c,0x180c0c14,0x26131335,0xc3ecec2f,0xbe5f5fe1,0x359797a2,0x884444cc,0x2e171739,0x93c4c457,0x55a7a7f2,0xfc7e7e82,0x7a3d3d47,0xc86464ac,0xba5d5de7,0x3219192b,0xe6737395,0xc06060a0,0x19818198,0x9e4f4fd1,0xa3dcdc7f,0x44222266,0x542a2a7e,0x3b9090ab,0xb888883,0x8c4646ca,0xc7eeee29,0x6bb8b8d3,0x2814143c,0xa7dede79,0xbc5e5ee2,0x160b0b1d,0xaddbdb76,0xdbe0e03b,0x64323256,0x743a3a4e,0x140a0a1e,0x924949db,0xc06060a,0x4824246c,0xb85c5ce4,0x9fc2c25d,0xbdd3d36e,0x43acacef,0xc46262a6,0x399191a8,0x319595a4,0xd3e4e437,0xf279798b,0xd5e7e732,0x8bc8c843,0x6e373759,0xda6d6db7,0x18d8d8c,0xb1d5d564,0x9c4e4ed2,0x49a9a9e0,0xd86c6cb4,0xac5656fa,0xf3f4f407,0xcfeaea25,0xca6565af,0xf47a7a8e,0x47aeaee9,0x10080818,0x6fbabad5,0xf0787888,0x4a25256f,0x5c2e2e72,0x381c1c24,0x57a6a6f1,0x73b4b4c7,0x97c6c651,0xcbe8e823,0xa1dddd7c,0xe874749c,0x3e1f1f21,0x964b4bdd,0x61bdbddc,0xd8b8b86,0xf8a8a85,0xe0707090,0x7c3e3e42,0x71b5b5c4,0xcc6666aa,0x904848d8,0x6030305,0xf7f6f601,0x1c0e0e12,0xc26161a3,0x6a35355f,0xae5757f9,0x69b9b9d0,0x17868691,0x99c1c158,0x3a1d1d27,0x279e9eb9,0xd9e1e138,0xebf8f813,0x2b9898b3,0x22111133,0xd26969bb,0xa9d9d970,0x78e8e89,0x339494a7,0x2d9b9bb6,0x3c1e1e22,0x15878792,0xc9e9e920,0x87cece49,0xaa5555ff,0x50282878,0xa5dfdf7a,0x38c8c8f,0x59a1a1f8,0x9898980,0x1a0d0d17,0x65bfbfda,0xd7e6e631,0x844242c6,0xd06868b8,0x824141c3,0x299999b0,0x5a2d2d77,0x1e0f0f11,0x7bb0b0cb,0xa85454fc,0x6dbbbbd6,0x2c16163a],d6=[0xa5c66363,0x84f87c7c,0x99ee7777,0x8df67b7b,0xdfff2f2,0xbdd66b6b,0xb1de6f6f,0x5491c5c5,0x50603030,0x3020101,0xa9ce6767,0x7d562b2b,0x19e7fefe,0x62b5d7d7,0xe64dabab,0x9aec7676,0x458fcaca,0x9d1f8282,0x4089c9c9,0x87fa7d7d,0x15effafa,0xebb25959,0xc98e4747,0xbfbf0f0,0xec41adad,0x67b3d4d4,0xfd5fa2a2,0xea45afaf,0xbf239c9c,0xf753a4a4,0x96e47272,0x5b9bc0c0,0xc275b7b7,0x1ce1fdfd,0xae3d9393,0x6a4c2626,0x5a6c3636,0x417e3f3f,0x2f5f7f7,0x4f83cccc,0x5c683434,0xf451a5a5,0x34d1e5e5,0x8f9f1f1,0x93e27171,0x73abd8d8,0x53623131,0x3f2a1515,0xc080404,0x5295c7c7,0x65462323,0x5e9dc3c3,0x28301818,0xa1379696,0xf0a0505,0xb52f9a9a,0x90e0707,0x36241212,0x9b1b8080,0x3ddfe2e2,0x26cdebeb,0x694e2727,0xcd7fb2b2,0x9fea7575,0x1b120909,0x9e1d8383,0x74582c2c,0x2e341a1a,0x2d361b1b,0xb2dc6e6e,0xeeb45a5a,0xfb5ba0a0,0xf6a45252,0x4d763b3b,0x61b7d6d6,0xce7db3b3,0x7b522929,0x3edde3e3,0x715e2f2f,0x97138484,0xf5a65353,0x68b9d1d1,0,0x2cc1eded,0x60402020,0x1fe3fcfc,0xc879b1b1,0xedb65b5b,0xbed46a6a,0x468dcbcb,0xd967bebe,0x4b723939,0xde944a4a,0xd4984c4c,0xe8b05858,0x4a85cfcf,0x6bbbd0d0,0x2ac5efef,0xe54faaaa,0x16edfbfb,0xc5864343,0xd79a4d4d,0x55663333,0x94118585,0xcf8a4545,0x10e9f9f9,0x6040202,0x81fe7f7f,0xf0a05050,0x44783c3c,0xba259f9f,0xe34ba8a8,0xf3a25151,0xfe5da3a3,0xc0804040,0x8a058f8f,0xad3f9292,0xbc219d9d,0x48703838,0x4f1f5f5,0xdf63bcbc,0xc177b6b6,0x75afdada,0x63422121,0x30201010,0x1ae5ffff,0xefdf3f3,0x6dbfd2d2,0x4c81cdcd,0x14180c0c,0x35261313,0x2fc3ecec,0xe1be5f5f,0xa2359797,0xcc884444,0x392e1717,0x5793c4c4,0xf255a7a7,0x82fc7e7e,0x477a3d3d,0xacc86464,0xe7ba5d5d,0x2b321919,0x95e67373,0xa0c06060,0x98198181,0xd19e4f4f,0x7fa3dcdc,0x66442222,0x7e542a2a,0xab3b9090,0x830b8888,0xca8c4646,0x29c7eeee,0xd36bb8b8,0x3c281414,0x79a7dede,0xe2bc5e5e,0x1d160b0b,0x76addbdb,0x3bdbe0e0,0x56643232,0x4e743a3a,0x1e140a0a,0xdb924949,0xa0c0606,0x6c482424,0xe4b85c5c,0x5d9fc2c2,0x6ebdd3d3,0xef43acac,0xa6c46262,0xa8399191,0xa4319595,0x37d3e4e4,0x8bf27979,0x32d5e7e7,0x438bc8c8,0x596e3737,0xb7da6d6d,0x8c018d8d,0x64b1d5d5,0xd29c4e4e,0xe049a9a9,0xb4d86c6c,0xfaac5656,0x7f3f4f4,0x25cfeaea,0xafca6565,0x8ef47a7a,0xe947aeae,0x18100808,0xd56fbaba,0x88f07878,0x6f4a2525,0x725c2e2e,0x24381c1c,0xf157a6a6,0xc773b4b4,0x5197c6c6,0x23cbe8e8,0x7ca1dddd,0x9ce87474,0x213e1f1f,0xdd964b4b,0xdc61bdbd,0x860d8b8b,0x850f8a8a,0x90e07070,0x427c3e3e,0xc471b5b5,0xaacc6666,0xd8904848,0x5060303,0x1f7f6f6,0x121c0e0e,0xa3c26161,0x5f6a3535,0xf9ae5757,0xd069b9b9,0x91178686,0x5899c1c1,0x273a1d1d,0xb9279e9e,0x38d9e1e1,0x13ebf8f8,0xb32b9898,0x33221111,0xbbd26969,0x70a9d9d9,0x89078e8e,0xa7339494,0xb62d9b9b,0x223c1e1e,0x92158787,0x20c9e9e9,0x4987cece,0xffaa5555,0x78502828,0x7aa5dfdf,0x8f038c8c,0xf859a1a1,0x80098989,0x171a0d0d,0xda65bfbf,0x31d7e6e6,0xc6844242,0xb8d06868,0xc3824141,0xb0299999,0x775a2d2d,0x111e0f0f,0xcb7bb0b0,0xfca85454,0xd66dbbbb,0x3a2c1616],d4=[0x63a5c663,0x7c84f87c,0x7799ee77,0x7b8df67b,0xf20dfff2,0x6bbdd66b,0x6fb1de6f,0xc55491c5,0x30506030,0x1030201,0x67a9ce67,0x2b7d562b,0xfe19e7fe,0xd762b5d7,0xabe64dab,0x769aec76,0xca458fca,0x829d1f82,0xc94089c9,0x7d87fa7d,0xfa15effa,0x59ebb259,0x47c98e47,0xf00bfbf0,0xadec41ad,0xd467b3d4,0xa2fd5fa2,0xafea45af,0x9cbf239c,0xa4f753a4,0x7296e472,0xc05b9bc0,0xb7c275b7,0xfd1ce1fd,0x93ae3d93,0x266a4c26,0x365a6c36,0x3f417e3f,0xf702f5f7,0xcc4f83cc,0x345c6834,0xa5f451a5,0xe534d1e5,0xf108f9f1,0x7193e271,0xd873abd8,0x31536231,0x153f2a15,0x40c0804,0xc75295c7,0x23654623,0xc35e9dc3,0x18283018,0x96a13796,0x50f0a05,0x9ab52f9a,0x7090e07,0x12362412,0x809b1b80,0xe23ddfe2,0xeb26cdeb,0x27694e27,0xb2cd7fb2,0x759fea75,0x91b1209,0x839e1d83,0x2c74582c,0x1a2e341a,0x1b2d361b,0x6eb2dc6e,0x5aeeb45a,0xa0fb5ba0,0x52f6a452,0x3b4d763b,0xd661b7d6,0xb3ce7db3,0x297b5229,0xe33edde3,0x2f715e2f,0x84971384,0x53f5a653,0xd168b9d1,0,0xed2cc1ed,0x20604020,0xfc1fe3fc,0xb1c879b1,0x5bedb65b,0x6abed46a,0xcb468dcb,0xbed967be,0x394b7239,0x4ade944a,0x4cd4984c,0x58e8b058,0xcf4a85cf,0xd06bbbd0,0xef2ac5ef,0xaae54faa,0xfb16edfb,0x43c58643,0x4dd79a4d,0x33556633,0x85941185,0x45cf8a45,0xf910e9f9,0x2060402,0x7f81fe7f,0x50f0a050,0x3c44783c,0x9fba259f,0xa8e34ba8,0x51f3a251,0xa3fe5da3,0x40c08040,0x8f8a058f,0x92ad3f92,0x9dbc219d,0x38487038,0xf504f1f5,0xbcdf63bc,0xb6c177b6,0xda75afda,0x21634221,0x10302010,0xff1ae5ff,0xf30efdf3,0xd26dbfd2,0xcd4c81cd,0xc14180c,0x13352613,0xec2fc3ec,0x5fe1be5f,0x97a23597,0x44cc8844,0x17392e17,0xc45793c4,0xa7f255a7,0x7e82fc7e,0x3d477a3d,0x64acc864,0x5de7ba5d,0x192b3219,0x7395e673,0x60a0c060,0x81981981,0x4fd19e4f,0xdc7fa3dc,0x22664422,0x2a7e542a,0x90ab3b90,0x88830b88,0x46ca8c46,0xee29c7ee,0xb8d36bb8,0x143c2814,0xde79a7de,0x5ee2bc5e,0xb1d160b,0xdb76addb,0xe03bdbe0,0x32566432,0x3a4e743a,0xa1e140a,0x49db9249,0x60a0c06,0x246c4824,0x5ce4b85c,0xc25d9fc2,0xd36ebdd3,0xacef43ac,0x62a6c462,0x91a83991,0x95a43195,0xe437d3e4,0x798bf279,0xe732d5e7,0xc8438bc8,0x37596e37,0x6db7da6d,0x8d8c018d,0xd564b1d5,0x4ed29c4e,0xa9e049a9,0x6cb4d86c,0x56faac56,0xf407f3f4,0xea25cfea,0x65afca65,0x7a8ef47a,0xaee947ae,0x8181008,0xbad56fba,0x7888f078,0x256f4a25,0x2e725c2e,0x1c24381c,0xa6f157a6,0xb4c773b4,0xc65197c6,0xe823cbe8,0xdd7ca1dd,0x749ce874,0x1f213e1f,0x4bdd964b,0xbddc61bd,0x8b860d8b,0x8a850f8a,0x7090e070,0x3e427c3e,0xb5c471b5,0x66aacc66,0x48d89048,0x3050603,0xf601f7f6,0xe121c0e,0x61a3c261,0x355f6a35,0x57f9ae57,0xb9d069b9,0x86911786,0xc15899c1,0x1d273a1d,0x9eb9279e,0xe138d9e1,0xf813ebf8,0x98b32b98,0x11332211,0x69bbd269,0xd970a9d9,0x8e89078e,0x94a73394,0x9bb62d9b,0x1e223c1e,0x87921587,0xe920c9e9,0xce4987ce,0x55ffaa55,0x28785028,0xdf7aa5df,0x8c8f038c,0xa1f859a1,0x89800989,0xd171a0d,0xbfda65bf,0xe631d7e6,0x42c68442,0x68b8d068,0x41c38241,0x99b02999,0x2d775a2d,0xf111e0f,0xb0cb7bb0,0x54fca854,0xbbd66dbb,0x163a2c16],d3=[0x6363a5c6,0x7c7c84f8,0x777799ee,0x7b7b8df6,0xf2f20dff,0x6b6bbdd6,0x6f6fb1de,0xc5c55491,0x30305060,0x1010302,0x6767a9ce,0x2b2b7d56,0xfefe19e7,0xd7d762b5,0xababe64d,0x76769aec,0xcaca458f,0x82829d1f,0xc9c94089,0x7d7d87fa,0xfafa15ef,0x5959ebb2,0x4747c98e,0xf0f00bfb,0xadadec41,0xd4d467b3,0xa2a2fd5f,0xafafea45,0x9c9cbf23,0xa4a4f753,0x727296e4,0xc0c05b9b,0xb7b7c275,0xfdfd1ce1,0x9393ae3d,0x26266a4c,0x36365a6c,0x3f3f417e,0xf7f702f5,0xcccc4f83,0x34345c68,0xa5a5f451,0xe5e534d1,0xf1f108f9,0x717193e2,0xd8d873ab,0x31315362,0x15153f2a,0x4040c08,0xc7c75295,0x23236546,0xc3c35e9d,0x18182830,0x9696a137,0x5050f0a,0x9a9ab52f,0x707090e,0x12123624,0x80809b1b,0xe2e23ddf,0xebeb26cd,0x2727694e,0xb2b2cd7f,0x75759fea,0x9091b12,0x83839e1d,0x2c2c7458,0x1a1a2e34,0x1b1b2d36,0x6e6eb2dc,0x5a5aeeb4,0xa0a0fb5b,0x5252f6a4,0x3b3b4d76,0xd6d661b7,0xb3b3ce7d,0x29297b52,0xe3e33edd,0x2f2f715e,0x84849713,0x5353f5a6,0xd1d168b9,0,0xeded2cc1,0x20206040,0xfcfc1fe3,0xb1b1c879,0x5b5bedb6,0x6a6abed4,0xcbcb468d,0xbebed967,0x39394b72,0x4a4ade94,0x4c4cd498,0x5858e8b0,0xcfcf4a85,0xd0d06bbb,0xefef2ac5,0xaaaae54f,0xfbfb16ed,0x4343c586,0x4d4dd79a,0x33335566,0x85859411,0x4545cf8a,0xf9f910e9,0x2020604,0x7f7f81fe,0x5050f0a0,0x3c3c4478,0x9f9fba25,0xa8a8e34b,0x5151f3a2,0xa3a3fe5d,0x4040c080,0x8f8f8a05,0x9292ad3f,0x9d9dbc21,0x38384870,0xf5f504f1,0xbcbcdf63,0xb6b6c177,0xdada75af,0x21216342,0x10103020,0xffff1ae5,0xf3f30efd,0xd2d26dbf,0xcdcd4c81,0xc0c1418,0x13133526,0xecec2fc3,0x5f5fe1be,0x9797a235,0x4444cc88,0x1717392e,0xc4c45793,0xa7a7f255,0x7e7e82fc,0x3d3d477a,0x6464acc8,0x5d5de7ba,0x19192b32,0x737395e6,0x6060a0c0,0x81819819,0x4f4fd19e,0xdcdc7fa3,0x22226644,0x2a2a7e54,0x9090ab3b,0x8888830b,0x4646ca8c,0xeeee29c7,0xb8b8d36b,0x14143c28,0xdede79a7,0x5e5ee2bc,0xb0b1d16,0xdbdb76ad,0xe0e03bdb,0x32325664,0x3a3a4e74,0xa0a1e14,0x4949db92,0x6060a0c,0x24246c48,0x5c5ce4b8,0xc2c25d9f,0xd3d36ebd,0xacacef43,0x6262a6c4,0x9191a839,0x9595a431,0xe4e437d3,0x79798bf2,0xe7e732d5,0xc8c8438b,0x3737596e,0x6d6db7da,0x8d8d8c01,0xd5d564b1,0x4e4ed29c,0xa9a9e049,0x6c6cb4d8,0x5656faac,0xf4f407f3,0xeaea25cf,0x6565afca,0x7a7a8ef4,0xaeaee947,0x8081810,0xbabad56f,0x787888f0,0x25256f4a,0x2e2e725c,0x1c1c2438,0xa6a6f157,0xb4b4c773,0xc6c65197,0xe8e823cb,0xdddd7ca1,0x74749ce8,0x1f1f213e,0x4b4bdd96,0xbdbddc61,0x8b8b860d,0x8a8a850f,0x707090e0,0x3e3e427c,0xb5b5c471,0x6666aacc,0x4848d890,0x3030506,0xf6f601f7,0xe0e121c,0x6161a3c2,0x35355f6a,0x5757f9ae,0xb9b9d069,0x86869117,0xc1c15899,0x1d1d273a,0x9e9eb927,0xe1e138d9,0xf8f813eb,0x9898b32b,0x11113322,0x6969bbd2,0xd9d970a9,0x8e8e8907,0x9494a733,0x9b9bb62d,0x1e1e223c,0x87879215,0xe9e920c9,0xcece4987,0x5555ffaa,0x28287850,0xdfdf7aa5,0x8c8c8f03,0xa1a1f859,0x89898009,0xd0d171a,0xbfbfda65,0xe6e631d7,0x4242c684,0x6868b8d0,0x4141c382,0x9999b029,0x2d2d775a,0xf0f111e,0xb0b0cb7b,0x5454fca8,0xbbbbd66d,0x16163a2c],d9=[0x51f4a750,0x7e416553,0x1a17a4c3,0x3a275e96,0x3bab6bcb,0x1f9d45f1,0xacfa58ab,0x4be30393,0x2030fa55,0xad766df6,0x88cc7691,0xf5024c25,0x4fe5d7fc,0xc52acbd7,0x26354480,0xb562a38f,0xdeb15a49,0x25ba1b67,0x45ea0e98,0x5dfec0e1,0xc32f7502,0x814cf012,0x8d4697a3,0x6bd3f9c6,0x38f5fe7,0x15929c95,0xbf6d7aeb,0x955259da,0xd4be832d,0x587421d3,0x49e06929,0x8ec9c844,0x75c2896a,0xf48e7978,0x99583e6b,0x27b971dd,0xbee14fb6,0xf088ad17,0xc920ac66,0x7dce3ab4,0x63df4a18,0xe51a3182,0x97513360,0x62537f45,0xb16477e0,0xbb6bae84,0xfe81a01c,0xf9082b94,0x70486858,0x8f45fd19,0x94de6c87,0x527bf8b7,0xab73d323,0x724b02e2,0xe31f8f57,0x6655ab2a,0xb2eb2807,0x2fb5c203,0x86c57b9a,0xd33708a5,0x302887f2,0x23bfa5b2,0x2036aba,0xed16825c,0x8acf1c2b,0xa779b492,0xf307f2f0,0x4e69e2a1,0x65daf4cd,0x605bed5,0xd134621f,0xc4a6fe8a,0x342e539d,0xa2f355a0,0x58ae132,0xa4f6eb75,0xb83ec39,0x4060efaa,0x5e719f06,0xbd6e1051,0x3e218af9,0x96dd063d,0xdd3e05ae,0x4de6bd46,0x91548db5,0x71c45d05,0x406d46f,0x605015ff,0x1998fb24,0xd6bde997,0x894043cc,0x67d99e77,0xb0e842bd,0x7898b88,0xe7195b38,0x79c8eedb,0xa17c0a47,0x7c420fe9,0xf8841ec9,0,0x9808683,0x322bed48,0x1e1170ac,0x6c5a724e,0xfd0efffb,0xf853856,0x3daed51e,0x362d3927,0xa0fd964,0x685ca621,0x9b5b54d1,0x24362e3a,0xc0a67b1,0x9357e70f,0xb4ee96d2,0x1b9b919e,0x80c0c54f,0x61dc20a2,0x5a774b69,0x1c121a16,0xe293ba0a,0xc0a02ae5,0x3c22e043,0x121b171d,0xe090d0b,0xf28bc7ad,0x2db6a8b9,0x141ea9c8,0x57f11985,0xaf75074c,0xee99ddbb,0xa37f60fd,0xf701269f,0x5c72f5bc,0x44663bc5,0x5bfb7e34,0x8b432976,0xcb23c6dc,0xb6edfc68,0xb8e4f163,0xd731dcca,0x42638510,0x13972240,0x84c61120,0x854a247d,0xd2bb3df8,0xaef93211,0xc729a16d,0x1d9e2f4b,0xdcb230f3,0xd8652ec,0x77c1e3d0,0x2bb3166c,0xa970b999,0x119448fa,0x47e96422,0xa8fc8cc4,0xa0f03f1a,0x567d2cd8,0x223390ef,0x87494ec7,0xd938d1c1,0x8ccaa2fe,0x98d40b36,0xa6f581cf,0xa57ade28,0xdab78e26,0x3fadbfa4,0x2c3a9de4,0x5078920d,0x6a5fcc9b,0x547e4662,0xf68d13c2,0x90d8b8e8,0x2e39f75e,0x82c3aff5,0x9f5d80be,0x69d0937c,0x6fd52da9,0xcf2512b3,0xc8ac993b,0x10187da7,0xe89c636e,0xdb3bbb7b,0xcd267809,0x6e5918f4,0xec9ab701,0x834f9aa8,0xe6956e65,0xaaffe67e,0x21bccf08,0xef15e8e6,0xbae79bd9,0x4a6f36ce,0xea9f09d4,0x29b07cd6,0x31a4b2af,0x2a3f2331,0xc6a59430,0x35a266c0,0x744ebc37,0xfc82caa6,0xe090d0b0,0x33a7d815,0xf104984a,0x41ecdaf7,0x7fcd500e,0x1791f62f,0x764dd68d,0x43efb04d,0xccaa4d54,0xe49604df,0x9ed1b5e3,0x4c6a881b,0xc12c1fb8,0x4665517f,0x9d5eea04,0x18c355d,0xfa877473,0xfb0b412e,0xb3671d5a,0x92dbd252,0xe9105633,0x6dd64713,0x9ad7618c,0x37a10c7a,0x59f8148e,0xeb133c89,0xcea927ee,0xb761c935,0xe11ce5ed,0x7a47b13c,0x9cd2df59,0x55f2733f,0x1814ce79,0x73c737bf,0x53f7cdea,0x5ffdaa5b,0xdf3d6f14,0x7844db86,0xcaaff381,0xb968c43e,0x3824342c,0xc2a3405f,0x161dc372,0xbce2250c,0x283c498b,0xff0d9541,0x39a80171,0x80cb3de,0xd8b4e49c,0x6456c190,0x7bcb8461,0xd532b670,0x486c5c74,0xd0b85742],d8=[0x5051f4a7,0x537e4165,0xc31a17a4,0x963a275e,0xcb3bab6b,0xf11f9d45,0xabacfa58,0x934be303,0x552030fa,0xf6ad766d,0x9188cc76,0x25f5024c,0xfc4fe5d7,0xd7c52acb,0x80263544,0x8fb562a3,0x49deb15a,0x6725ba1b,0x9845ea0e,0xe15dfec0,0x2c32f75,0x12814cf0,0xa38d4697,0xc66bd3f9,0xe7038f5f,0x9515929c,0xebbf6d7a,0xda955259,0x2dd4be83,0xd3587421,0x2949e069,0x448ec9c8,0x6a75c289,0x78f48e79,0x6b99583e,0xdd27b971,0xb6bee14f,0x17f088ad,0x66c920ac,0xb47dce3a,0x1863df4a,0x82e51a31,0x60975133,0x4562537f,0xe0b16477,0x84bb6bae,0x1cfe81a0,0x94f9082b,0x58704868,0x198f45fd,0x8794de6c,0xb7527bf8,0x23ab73d3,0xe2724b02,0x57e31f8f,0x2a6655ab,0x7b2eb28,0x32fb5c2,0x9a86c57b,0xa5d33708,0xf2302887,0xb223bfa5,0xba02036a,0x5ced1682,0x2b8acf1c,0x92a779b4,0xf0f307f2,0xa14e69e2,0xcd65daf4,0xd50605be,0x1fd13462,0x8ac4a6fe,0x9d342e53,0xa0a2f355,0x32058ae1,0x75a4f6eb,0x390b83ec,0xaa4060ef,0x65e719f,0x51bd6e10,0xf93e218a,0x3d96dd06,0xaedd3e05,0x464de6bd,0xb591548d,0x571c45d,0x6f0406d4,0xff605015,0x241998fb,0x97d6bde9,0xcc894043,0x7767d99e,0xbdb0e842,0x8807898b,0x38e7195b,0xdb79c8ee,0x47a17c0a,0xe97c420f,0xc9f8841e,0,0x83098086,0x48322bed,0xac1e1170,0x4e6c5a72,0xfbfd0eff,0x560f8538,0x1e3daed5,0x27362d39,0x640a0fd9,0x21685ca6,0xd19b5b54,0x3a24362e,0xb10c0a67,0xf9357e7,0xd2b4ee96,0x9e1b9b91,0x4f80c0c5,0xa261dc20,0x695a774b,0x161c121a,0xae293ba,0xe5c0a02a,0x433c22e0,0x1d121b17,0xb0e090d,0xadf28bc7,0xb92db6a8,0xc8141ea9,0x8557f119,0x4caf7507,0xbbee99dd,0xfda37f60,0x9ff70126,0xbc5c72f5,0xc544663b,0x345bfb7e,0x768b4329,0xdccb23c6,0x68b6edfc,0x63b8e4f1,0xcad731dc,0x10426385,0x40139722,0x2084c611,0x7d854a24,0xf8d2bb3d,0x11aef932,0x6dc729a1,0x4b1d9e2f,0xf3dcb230,0xec0d8652,0xd077c1e3,0x6c2bb316,0x99a970b9,0xfa119448,0x2247e964,0xc4a8fc8c,0x1aa0f03f,0xd8567d2c,0xef223390,0xc787494e,0xc1d938d1,0xfe8ccaa2,0x3698d40b,0xcfa6f581,0x28a57ade,0x26dab78e,0xa43fadbf,0xe42c3a9d,0xd507892,0x9b6a5fcc,0x62547e46,0xc2f68d13,0xe890d8b8,0x5e2e39f7,0xf582c3af,0xbe9f5d80,0x7c69d093,0xa96fd52d,0xb3cf2512,0x3bc8ac99,0xa710187d,0x6ee89c63,0x7bdb3bbb,0x9cd2678,0xf46e5918,0x1ec9ab7,0xa8834f9a,0x65e6956e,0x7eaaffe6,0x821bccf,0xe6ef15e8,0xd9bae79b,0xce4a6f36,0xd4ea9f09,0xd629b07c,0xaf31a4b2,0x312a3f23,0x30c6a594,0xc035a266,0x37744ebc,0xa6fc82ca,0xb0e090d0,0x1533a7d8,0x4af10498,0xf741ecda,0xe7fcd50,0x2f1791f6,0x8d764dd6,0x4d43efb0,0x54ccaa4d,0xdfe49604,0xe39ed1b5,0x1b4c6a88,0xb8c12c1f,0x7f466551,0x49d5eea,0x5d018c35,0x73fa8774,0x2efb0b41,0x5ab3671d,0x5292dbd2,0x33e91056,0x136dd647,0x8c9ad761,0x7a37a10c,0x8e59f814,0x89eb133c,0xeecea927,0x35b761c9,0xede11ce5,0x3c7a47b1,0x599cd2df,0x3f55f273,0x791814ce,0xbf73c737,0xea53f7cd,0x5b5ffdaa,0x14df3d6f,0x867844db,0x81caaff3,0x3eb968c4,0x2c382434,0x5fc2a340,0x72161dc3,0xcbce225,0x8b283c49,0x41ff0d95,0x7139a801,0xde080cb3,0x9cd8b4e4,0x906456c1,0x617bcb84,0x70d532b6,0x74486c5c,0x42d0b857],d5=[0xa75051f4,0x65537e41,0xa4c31a17,0x5e963a27,0x6bcb3bab,0x45f11f9d,0x58abacfa,0x3934be3,0xfa552030,0x6df6ad76,0x769188cc,0x4c25f502,0xd7fc4fe5,0xcbd7c52a,0x44802635,0xa38fb562,0x5a49deb1,0x1b6725ba,0xe9845ea,0xc0e15dfe,0x7502c32f,0xf012814c,0x97a38d46,0xf9c66bd3,0x5fe7038f,0x9c951592,0x7aebbf6d,0x59da9552,0x832dd4be,0x21d35874,0x692949e0,0xc8448ec9,0x896a75c2,0x7978f48e,1047239e3,0x71dd27b9,0x4fb6bee1,0xad17f088,0xac66c920,0x3ab47dce,0x4a1863df,0x3182e51a,0x33609751,0x7f456253,0x77e0b164,0xae84bb6b,0xa01cfe81,0x2b94f908,0x68587048,0xfd198f45,0x6c8794de,0xf8b7527b,0xd323ab73,0x2e2724b,0x8f57e31f,0xab2a6655,0x2807b2eb,0xc2032fb5,0x7b9a86c5,0x8a5d337,0x87f23028,0xa5b223bf,0x6aba0203,0x825ced16,0x1c2b8acf,0xb492a779,0xf2f0f307,0xe2a14e69,0xf4cd65da,0xbed50605,0x621fd134,0xfe8ac4a6,0x539d342e,0x55a0a2f3,0xe132058a,0xeb75a4f6,0xec390b83,0xefaa4060,0x9f065e71,0x1051bd6e,0x8af93e21,0x63d96dd,0x5aedd3e,0xbd464de6,0x8db59154,0x5d0571c4,0xd46f0406,0x15ff6050,0xfb241998,0xe997d6bd,0x43cc8940,0x9e7767d9,0x42bdb0e8,0x8b880789,0x5b38e719,0xeedb79c8,0xa47a17c,0xfe97c42,0x1ec9f884,0,0x86830980,0xed48322b,0x70ac1e11,0x724e6c5a,0xfffbfd0e,0x38560f85,0xd51e3dae,0x3927362d,0xd9640a0f,0xa621685c,0x54d19b5b,0x2e3a2436,0x67b10c0a,0xe70f9357,0x96d2b4ee,0x919e1b9b,0xc54f80c0,0x20a261dc,0x4b695a77,0x1a161c12,0xba0ae293,0x2ae5c0a0,0xe0433c22,0x171d121b,0xd0b0e09,0xc7adf28b,0xa8b92db6,0xa9c8141e,0x198557f1,0x74caf75,0xddbbee99,0x60fda37f,0x269ff701,0xf5bc5c72,0x3bc54466,0x7e345bfb,0x29768b43,0xc6dccb23,0xfc68b6ed,0xf163b8e4,0xdccad731,0x85104263,0x22401397,0x112084c6,0x247d854a,0x3df8d2bb,0x3211aef9,0xa16dc729,0x2f4b1d9e,0x30f3dcb2,0x52ec0d86,0xe3d077c1,0x166c2bb3,0xb999a970,0x48fa1194,0x642247e9,0x8cc4a8fc,0x3f1aa0f0,0x2cd8567d,0x90ef2233,0x4ec78749,0xd1c1d938,0xa2fe8cca,0xb3698d4,0x81cfa6f5,0xde28a57a,0x8e26dab7,0xbfa43fad,0x9de42c3a,0x920d5078,0xcc9b6a5f,0x4662547e,0x13c2f68d,0xb8e890d8,0xf75e2e39,0xaff582c3,0x80be9f5d,0x937c69d0,0x2da96fd5,0x12b3cf25,0x993bc8ac,0x7da71018,0x636ee89c,0xbb7bdb3b,0x7809cd26,0x18f46e59,0xb701ec9a,0x9aa8834f,0x6e65e695,0xe67eaaff,0xcf0821bc,0xe8e6ef15,0x9bd9bae7,0x36ce4a6f,0x9d4ea9f,0x7cd629b0,0xb2af31a4,0x23312a3f,0x9430c6a5,0x66c035a2,0xbc37744e,0xcaa6fc82,0xd0b0e090,0xd81533a7,0x984af104,0xdaf741ec,0x500e7fcd,0xf62f1791,0xd68d764d,0xb04d43ef,0x4d54ccaa,0x4dfe496,0xb5e39ed1,0x881b4c6a,0x1fb8c12c,0x517f4665,0xea049d5e,0x355d018c,0x7473fa87,0x412efb0b,0x1d5ab367,0xd25292db,0x5633e910,0x47136dd6,0x618c9ad7,0xc7a37a1,0x148e59f8,0x3c89eb13,0x27eecea9,0xc935b761,0xe5ede11c,0xb13c7a47,0xdf599cd2,0x733f55f2,0xce791814,0x37bf73c7,0xcdea53f7,0xaa5b5ffd,0x6f14df3d,0xdb867844,0xf381caaf,0xc43eb968,0x342c3824,0x405fc2a3,0xc372161d,0x250cbce2,0x498b283c,0x9541ff0d,0x17139a8,0xb3de080c,0xe49cd8b4,0xc1906456,0x84617bcb,0xb670d532,0x5c74486c,0x5742d0b8],d7=[0xf4a75051,0x4165537e,0x17a4c31a,0x275e963a,0xab6bcb3b,0x9d45f11f,0xfa58abac,0xe303934b,0x30fa5520,0x766df6ad,0xcc769188,0x24c25f5,0xe5d7fc4f,0x2acbd7c5,0x35448026,0x62a38fb5,0xb15a49de,0xba1b6725,0xea0e9845,0xfec0e15d,0x2f7502c3,0x4cf01281,0x4697a38d,0xd3f9c66b,0x8f5fe703,0x929c9515,0x6d7aebbf,0x5259da95,0xbe832dd4,0x7421d358,0xe0692949,0xc9c8448e,0xc2896a75,0x8e7978f4,0x583e6b99,0xb971dd27,0xe14fb6be,0x88ad17f0,0x20ac66c9,0xce3ab47d,0xdf4a1863,0x1a3182e5,0x51336097,0x537f4562,0x6477e0b1,0x6bae84bb,0x81a01cfe,0x82b94f9,0x48685870,0x45fd198f,0xde6c8794,0x7bf8b752,0x73d323ab,0x4b02e272,0x1f8f57e3,0x55ab2a66,0xeb2807b2,0xb5c2032f,0xc57b9a86,0x3708a5d3,679998e3,0xbfa5b223,0x36aba02,0x16825ced,0xcf1c2b8a,0x79b492a7,0x7f2f0f3,0x69e2a14e,0xdaf4cd65,0x5bed506,0x34621fd1,0xa6fe8ac4,0x2e539d34,0xf355a0a2,0x8ae13205,0xf6eb75a4,0x83ec390b,0x60efaa40,0x719f065e,0x6e1051bd,0x218af93e,0xdd063d96,0x3e05aedd,0xe6bd464d,0x548db591,0xc45d0571,0x6d46f04,0x5015ff60,0x98fb2419,0xbde997d6,0x4043cc89,0xd99e7767,0xe842bdb0,0x898b8807,0x195b38e7,0xc8eedb79,0x7c0a47a1,0x420fe97c,0x841ec9f8,0,0x80868309,0x2bed4832,0x1170ac1e,0x5a724e6c,0xefffbfd,0x8538560f,0xaed51e3d,0x2d392736,0xfd9640a,0x5ca62168,0x5b54d19b,0x362e3a24,0xa67b10c,0x57e70f93,0xee96d2b4,0x9b919e1b,0xc0c54f80,0xdc20a261,0x774b695a,0x121a161c,0x93ba0ae2,0xa02ae5c0,0x22e0433c,0x1b171d12,0x90d0b0e,0x8bc7adf2,0xb6a8b92d,0x1ea9c814,0xf1198557,0x75074caf,0x99ddbbee,0x7f60fda3,0x1269ff7,0x72f5bc5c,0x663bc544,0xfb7e345b,0x4329768b,0x23c6dccb,0xedfc68b6,0xe4f163b8,0x31dccad7,0x63851042,0x97224013,0xc6112084,0x4a247d85,0xbb3df8d2,0xf93211ae,0x29a16dc7,0x9e2f4b1d,0xb230f3dc,0x8652ec0d,0xc1e3d077,0xb3166c2b,0x70b999a9,0x9448fa11,0xe9642247,0xfc8cc4a8,0xf03f1aa0,0x7d2cd856,0x3390ef22,0x494ec787,0x38d1c1d9,0xcaa2fe8c,0xd40b3698,0xf581cfa6,0x7ade28a5,0xb78e26da,0xadbfa43f,0x3a9de42c,0x78920d50,0x5fcc9b6a,0x7e466254,0x8d13c2f6,0xd8b8e890,0x39f75e2e,0xc3aff582,0x5d80be9f,0xd0937c69,0xd52da96f,0x2512b3cf,0xac993bc8,0x187da710,0x9c636ee8,0x3bbb7bdb,0x267809cd,0x5918f46e,0x9ab701ec,0x4f9aa883,0x956e65e6,0xffe67eaa,0xbccf0821,0x15e8e6ef,0xe79bd9ba,0x6f36ce4a,0x9f09d4ea,0xb07cd629,0xa4b2af31,0x3f23312a,0xa59430c6,0xa266c035,0x4ebc3774,0x82caa6fc,0x90d0b0e0,0xa7d81533,0x4984af1,0xecdaf741,0xcd500e7f,0x91f62f17,0x4dd68d76,0xefb04d43,0xaa4d54cc,0x9604dfe4,0xd1b5e39e,0x6a881b4c,0x2c1fb8c1,0x65517f46,0x5eea049d,0x8c355d01,0x877473fa,0xb412efb,0x671d5ab3,0xdbd25292,0x105633e9,0xd647136d,0xd7618c9a,0xa10c7a37,0xf8148e59,0x133c89eb,0xa927eece,0x61c935b7,0x1ce5ede1,0x47b13c7a,0xd2df599c,0xf2733f55,0x14ce7918,0xc737bf73,0xf7cdea53,0xfdaa5b5f,0x3d6f14df,0x44db8678,0xaff381ca,0x68c43eb9,0x24342c38,0xa3405fc2,0x1dc37216,0xe2250cbc,0x3c498b28,0xd9541ff,0xa8017139,0xcb3de08,0xb4e49cd8,0x56c19064,0xcb84617b,0x32b670d5,0x6c5c7448,0xb85742d0],ie=[0,0xe090d0b,0x1c121a16,0x121b171d,0x3824342c,0x362d3927,0x24362e3a,0x2a3f2331,0x70486858,0x7e416553,0x6c5a724e,0x62537f45,0x486c5c74,0x4665517f,0x547e4662,0x5a774b69,0xe090d0b0,0xee99ddbb,0xfc82caa6,0xf28bc7ad,0xd8b4e49c,0xd6bde997,0xc4a6fe8a,0xcaaff381,0x90d8b8e8,0x9ed1b5e3,0x8ccaa2fe,0x82c3aff5,0xa8fc8cc4,0xa6f581cf,0xb4ee96d2,0xbae79bd9,0xdb3bbb7b,0xd532b670,0xc729a16d,0xc920ac66,0xe31f8f57,0xed16825c,0xff0d9541,0xf104984a,0xab73d323,0xa57ade28,0xb761c935,0xb968c43e,0x9357e70f,0x9d5eea04,0x8f45fd19,0x814cf012,0x3bab6bcb,0x35a266c0,0x27b971dd,0x29b07cd6,0x38f5fe7,0xd8652ec,0x1f9d45f1,0x119448fa,0x4be30393,0x45ea0e98,0x57f11985,0x59f8148e,0x73c737bf,0x7dce3ab4,0x6fd52da9,0x61dc20a2,0xad766df6,0xa37f60fd,0xb16477e0,0xbf6d7aeb,0x955259da,0x9b5b54d1,0x894043cc,0x87494ec7,0xdd3e05ae,0xd33708a5,0xc12c1fb8,0xcf2512b3,0xe51a3182,0xeb133c89,0xf9082b94,0xf701269f,0x4de6bd46,0x43efb04d,0x51f4a750,0x5ffdaa5b,0x75c2896a,0x7bcb8461,0x69d0937c,0x67d99e77,0x3daed51e,0x33a7d815,0x21bccf08,0x2fb5c203,0x58ae132,0xb83ec39,0x1998fb24,0x1791f62f,0x764dd68d,0x7844db86,0x6a5fcc9b,0x6456c190,0x4e69e2a1,0x4060efaa,0x527bf8b7,0x5c72f5bc,0x605bed5,0x80cb3de,0x1a17a4c3,0x141ea9c8,0x3e218af9,0x302887f2,0x223390ef,0x2c3a9de4,0x96dd063d,0x98d40b36,0x8acf1c2b,0x84c61120,0xaef93211,0xa0f03f1a,0xb2eb2807,0xbce2250c,0xe6956e65,0xe89c636e,0xfa877473,0xf48e7978,0xdeb15a49,0xd0b85742,0xc2a3405f,0xccaa4d54,0x41ecdaf7,0x4fe5d7fc,0x5dfec0e1,0x53f7cdea,0x79c8eedb,0x77c1e3d0,0x65daf4cd,0x6bd3f9c6,0x31a4b2af,0x3fadbfa4,0x2db6a8b9,0x23bfa5b2,0x9808683,0x7898b88,0x15929c95,0x1b9b919e,0xa17c0a47,0xaf75074c,0xbd6e1051,0xb3671d5a,0x99583e6b,0x97513360,0x854a247d,0x8b432976,0xd134621f,0xdf3d6f14,0xcd267809,0xc32f7502,0xe9105633,0xe7195b38,0xf5024c25,0xfb0b412e,0x9ad7618c,0x94de6c87,0x86c57b9a,0x88cc7691,0xa2f355a0,0xacfa58ab,0xbee14fb6,0xb0e842bd,0xea9f09d4,0xe49604df,0xf68d13c2,0xf8841ec9,0xd2bb3df8,0xdcb230f3,0xcea927ee,0xc0a02ae5,0x7a47b13c,0x744ebc37,0x6655ab2a,0x685ca621,0x42638510,0x4c6a881b,0x5e719f06,0x5078920d,0xa0fd964,0x406d46f,0x161dc372,0x1814ce79,0x322bed48,0x3c22e043,0x2e39f75e,0x2030fa55,0xec9ab701,0xe293ba0a,0xf088ad17,0xfe81a01c,0xd4be832d,0xdab78e26,0xc8ac993b,0xc6a59430,0x9cd2df59,0x92dbd252,0x80c0c54f,0x8ec9c844,0xa4f6eb75,0xaaffe67e,0xb8e4f163,0xb6edfc68,0xc0a67b1,0x2036aba,0x10187da7,0x1e1170ac,0x342e539d,0x3a275e96,0x283c498b,0x26354480,0x7c420fe9,0x724b02e2,0x605015ff,0x6e5918f4,0x44663bc5,0x4a6f36ce,0x587421d3,0x567d2cd8,0x37a10c7a,0x39a80171,0x2bb3166c,0x25ba1b67,0xf853856,0x18c355d,0x13972240,0x1d9e2f4b,0x47e96422,0x49e06929,0x5bfb7e34,0x55f2733f,0x7fcd500e,0x71c45d05,0x63df4a18,0x6dd64713,0xd731dcca,0xd938d1c1,0xcb23c6dc,0xc52acbd7,0xef15e8e6,0xe11ce5ed,0xf307f2f0,0xfd0efffb,0xa779b492,0xa970b999,0xbb6bae84,0xb562a38f,0x9f5d80be,0x91548db5,0x834f9aa8,0x8d4697a3],it=[0,0xb0e090d,0x161c121a,0x1d121b17,0x2c382434,0x27362d39,0x3a24362e,0x312a3f23,0x58704868,0x537e4165,0x4e6c5a72,0x4562537f,0x74486c5c,0x7f466551,0x62547e46,0x695a774b,0xb0e090d0,0xbbee99dd,0xa6fc82ca,0xadf28bc7,0x9cd8b4e4,0x97d6bde9,0x8ac4a6fe,0x81caaff3,0xe890d8b8,0xe39ed1b5,0xfe8ccaa2,0xf582c3af,0xc4a8fc8c,0xcfa6f581,0xd2b4ee96,0xd9bae79b,0x7bdb3bbb,0x70d532b6,0x6dc729a1,0x66c920ac,0x57e31f8f,0x5ced1682,0x41ff0d95,0x4af10498,0x23ab73d3,0x28a57ade,0x35b761c9,0x3eb968c4,0xf9357e7,0x49d5eea,0x198f45fd,0x12814cf0,0xcb3bab6b,0xc035a266,0xdd27b971,0xd629b07c,0xe7038f5f,0xec0d8652,0xf11f9d45,0xfa119448,0x934be303,0x9845ea0e,0x8557f119,0x8e59f814,0xbf73c737,0xb47dce3a,0xa96fd52d,0xa261dc20,0xf6ad766d,0xfda37f60,0xe0b16477,0xebbf6d7a,0xda955259,0xd19b5b54,0xcc894043,0xc787494e,0xaedd3e05,0xa5d33708,0xb8c12c1f,0xb3cf2512,0x82e51a31,0x89eb133c,0x94f9082b,0x9ff70126,0x464de6bd,0x4d43efb0,0x5051f4a7,0x5b5ffdaa,0x6a75c289,0x617bcb84,0x7c69d093,0x7767d99e,0x1e3daed5,0x1533a7d8,0x821bccf,0x32fb5c2,0x32058ae1,0x390b83ec,0x241998fb,0x2f1791f6,0x8d764dd6,0x867844db,0x9b6a5fcc,0x906456c1,0xa14e69e2,0xaa4060ef,0xb7527bf8,0xbc5c72f5,0xd50605be,0xde080cb3,0xc31a17a4,0xc8141ea9,0xf93e218a,0xf2302887,0xef223390,0xe42c3a9d,0x3d96dd06,0x3698d40b,0x2b8acf1c,0x2084c611,0x11aef932,0x1aa0f03f,0x7b2eb28,0xcbce225,0x65e6956e,0x6ee89c63,0x73fa8774,0x78f48e79,0x49deb15a,0x42d0b857,0x5fc2a340,0x54ccaa4d,0xf741ecda,0xfc4fe5d7,0xe15dfec0,0xea53f7cd,0xdb79c8ee,0xd077c1e3,0xcd65daf4,0xc66bd3f9,0xaf31a4b2,0xa43fadbf,0xb92db6a8,0xb223bfa5,0x83098086,0x8807898b,0x9515929c,0x9e1b9b91,0x47a17c0a,0x4caf7507,0x51bd6e10,0x5ab3671d,0x6b99583e,0x60975133,0x7d854a24,0x768b4329,0x1fd13462,0x14df3d6f,0x9cd2678,0x2c32f75,0x33e91056,0x38e7195b,0x25f5024c,0x2efb0b41,0x8c9ad761,0x8794de6c,0x9a86c57b,0x9188cc76,0xa0a2f355,0xabacfa58,0xb6bee14f,0xbdb0e842,0xd4ea9f09,0xdfe49604,0xc2f68d13,0xc9f8841e,0xf8d2bb3d,0xf3dcb230,0xeecea927,0xe5c0a02a,0x3c7a47b1,0x37744ebc,0x2a6655ab,0x21685ca6,0x10426385,0x1b4c6a88,0x65e719f,0xd507892,0x640a0fd9,0x6f0406d4,0x72161dc3,0x791814ce,0x48322bed,0x433c22e0,0x5e2e39f7,0x552030fa,0x1ec9ab7,0xae293ba,0x17f088ad,0x1cfe81a0,0x2dd4be83,0x26dab78e,0x3bc8ac99,0x30c6a594,0x599cd2df,0x5292dbd2,0x4f80c0c5,0x448ec9c8,0x75a4f6eb,0x7eaaffe6,0x63b8e4f1,0x68b6edfc,0xb10c0a67,0xba02036a,0xa710187d,0xac1e1170,0x9d342e53,0x963a275e,0x8b283c49,0x80263544,0xe97c420f,0xe2724b02,0xff605015,0xf46e5918,0xc544663b,0xce4a6f36,0xd3587421,0xd8567d2c,0x7a37a10c,0x7139a801,0x6c2bb316,0x6725ba1b,0x560f8538,0x5d018c35,0x40139722,0x4b1d9e2f,0x2247e964,0x2949e069,0x345bfb7e,0x3f55f273,0xe7fcd50,0x571c45d,0x1863df4a,0x136dd647,0xcad731dc,0xc1d938d1,0xdccb23c6,0xd7c52acb,0xe6ef15e8,0xede11ce5,0xf0f307f2,0xfbfd0eff,0x92a779b4,0x99a970b9,0x84bb6bae,0x8fb562a3,0xbe9f5d80,0xb591548d,0xa8834f9a,0xa38d4697],ia=[0,0xd0b0e09,0x1a161c12,0x171d121b,0x342c3824,0x3927362d,0x2e3a2436,0x23312a3f,0x68587048,0x65537e41,0x724e6c5a,0x7f456253,0x5c74486c,0x517f4665,0x4662547e,0x4b695a77,0xd0b0e090,0xddbbee99,0xcaa6fc82,0xc7adf28b,0xe49cd8b4,0xe997d6bd,0xfe8ac4a6,0xf381caaf,0xb8e890d8,0xb5e39ed1,0xa2fe8cca,0xaff582c3,0x8cc4a8fc,0x81cfa6f5,0x96d2b4ee,0x9bd9bae7,0xbb7bdb3b,0xb670d532,0xa16dc729,0xac66c920,0x8f57e31f,0x825ced16,0x9541ff0d,0x984af104,0xd323ab73,0xde28a57a,0xc935b761,0xc43eb968,0xe70f9357,0xea049d5e,0xfd198f45,0xf012814c,0x6bcb3bab,0x66c035a2,0x71dd27b9,0x7cd629b0,0x5fe7038f,0x52ec0d86,0x45f11f9d,0x48fa1194,0x3934be3,0xe9845ea,0x198557f1,0x148e59f8,0x37bf73c7,0x3ab47dce,0x2da96fd5,0x20a261dc,0x6df6ad76,0x60fda37f,0x77e0b164,0x7aebbf6d,0x59da9552,0x54d19b5b,0x43cc8940,0x4ec78749,0x5aedd3e,0x8a5d337,0x1fb8c12c,0x12b3cf25,0x3182e51a,0x3c89eb13,0x2b94f908,0x269ff701,0xbd464de6,0xb04d43ef,0xa75051f4,0xaa5b5ffd,0x896a75c2,0x84617bcb,0x937c69d0,0x9e7767d9,0xd51e3dae,0xd81533a7,0xcf0821bc,0xc2032fb5,0xe132058a,0xec390b83,0xfb241998,0xf62f1791,0xd68d764d,0xdb867844,0xcc9b6a5f,0xc1906456,0xe2a14e69,0xefaa4060,0xf8b7527b,0xf5bc5c72,0xbed50605,0xb3de080c,0xa4c31a17,0xa9c8141e,0x8af93e21,0x87f23028,0x90ef2233,0x9de42c3a,0x63d96dd,0xb3698d4,0x1c2b8acf,0x112084c6,0x3211aef9,0x3f1aa0f0,0x2807b2eb,0x250cbce2,0x6e65e695,0x636ee89c,0x7473fa87,0x7978f48e,0x5a49deb1,0x5742d0b8,0x405fc2a3,0x4d54ccaa,0xdaf741ec,0xd7fc4fe5,0xc0e15dfe,0xcdea53f7,0xeedb79c8,0xe3d077c1,0xf4cd65da,0xf9c66bd3,0xb2af31a4,0xbfa43fad,0xa8b92db6,0xa5b223bf,0x86830980,0x8b880789,0x9c951592,0x919e1b9b,0xa47a17c,0x74caf75,0x1051bd6e,0x1d5ab367,1047239e3,0x33609751,0x247d854a,0x29768b43,0x621fd134,0x6f14df3d,0x7809cd26,0x7502c32f,0x5633e910,0x5b38e719,0x4c25f502,0x412efb0b,0x618c9ad7,0x6c8794de,0x7b9a86c5,0x769188cc,0x55a0a2f3,0x58abacfa,0x4fb6bee1,0x42bdb0e8,0x9d4ea9f,0x4dfe496,0x13c2f68d,0x1ec9f884,0x3df8d2bb,0x30f3dcb2,0x27eecea9,0x2ae5c0a0,0xb13c7a47,0xbc37744e,0xab2a6655,0xa621685c,0x85104263,0x881b4c6a,0x9f065e71,0x920d5078,0xd9640a0f,0xd46f0406,0xc372161d,0xce791814,0xed48322b,0xe0433c22,0xf75e2e39,0xfa552030,0xb701ec9a,0xba0ae293,0xad17f088,0xa01cfe81,0x832dd4be,0x8e26dab7,0x993bc8ac,0x9430c6a5,0xdf599cd2,0xd25292db,0xc54f80c0,0xc8448ec9,0xeb75a4f6,0xe67eaaff,0xf163b8e4,0xfc68b6ed,0x67b10c0a,0x6aba0203,0x7da71018,0x70ac1e11,0x539d342e,0x5e963a27,0x498b283c,0x44802635,0xfe97c42,0x2e2724b,0x15ff6050,0x18f46e59,0x3bc54466,0x36ce4a6f,0x21d35874,0x2cd8567d,0xc7a37a1,0x17139a8,0x166c2bb3,0x1b6725ba,0x38560f85,0x355d018c,0x22401397,0x2f4b1d9e,0x642247e9,0x692949e0,0x7e345bfb,0x733f55f2,0x500e7fcd,0x5d0571c4,0x4a1863df,0x47136dd6,0xdccad731,0xd1c1d938,0xc6dccb23,0xcbd7c52a,0xe8e6ef15,0xe5ede11c,0xf2f0f307,0xfffbfd0e,0xb492a779,0xb999a970,0xae84bb6b,0xa38fb562,0x80be9f5d,0x8db59154,0x9aa8834f,0x97a38d46],id=[0,0x90d0b0e,0x121a161c,0x1b171d12,0x24342c38,0x2d392736,0x362e3a24,0x3f23312a,0x48685870,0x4165537e,0x5a724e6c,0x537f4562,0x6c5c7448,0x65517f46,0x7e466254,0x774b695a,0x90d0b0e0,0x99ddbbee,0x82caa6fc,0x8bc7adf2,0xb4e49cd8,0xbde997d6,0xa6fe8ac4,0xaff381ca,0xd8b8e890,0xd1b5e39e,0xcaa2fe8c,0xc3aff582,0xfc8cc4a8,0xf581cfa6,0xee96d2b4,0xe79bd9ba,0x3bbb7bdb,0x32b670d5,0x29a16dc7,0x20ac66c9,0x1f8f57e3,0x16825ced,0xd9541ff,0x4984af1,0x73d323ab,0x7ade28a5,0x61c935b7,0x68c43eb9,0x57e70f93,0x5eea049d,0x45fd198f,0x4cf01281,0xab6bcb3b,0xa266c035,0xb971dd27,0xb07cd629,0x8f5fe703,0x8652ec0d,0x9d45f11f,0x9448fa11,0xe303934b,0xea0e9845,0xf1198557,0xf8148e59,0xc737bf73,0xce3ab47d,0xd52da96f,0xdc20a261,0x766df6ad,0x7f60fda3,0x6477e0b1,0x6d7aebbf,0x5259da95,0x5b54d19b,0x4043cc89,0x494ec787,0x3e05aedd,0x3708a5d3,0x2c1fb8c1,0x2512b3cf,0x1a3182e5,0x133c89eb,0x82b94f9,0x1269ff7,0xe6bd464d,0xefb04d43,0xf4a75051,0xfdaa5b5f,0xc2896a75,0xcb84617b,0xd0937c69,0xd99e7767,0xaed51e3d,0xa7d81533,0xbccf0821,0xb5c2032f,0x8ae13205,0x83ec390b,0x98fb2419,0x91f62f17,0x4dd68d76,0x44db8678,0x5fcc9b6a,0x56c19064,0x69e2a14e,0x60efaa40,0x7bf8b752,0x72f5bc5c,0x5bed506,0xcb3de08,0x17a4c31a,0x1ea9c814,0x218af93e,679998e3,0x3390ef22,0x3a9de42c,0xdd063d96,0xd40b3698,0xcf1c2b8a,0xc6112084,0xf93211ae,0xf03f1aa0,0xeb2807b2,0xe2250cbc,0x956e65e6,0x9c636ee8,0x877473fa,0x8e7978f4,0xb15a49de,0xb85742d0,0xa3405fc2,0xaa4d54cc,0xecdaf741,0xe5d7fc4f,0xfec0e15d,0xf7cdea53,0xc8eedb79,0xc1e3d077,0xdaf4cd65,0xd3f9c66b,0xa4b2af31,0xadbfa43f,0xb6a8b92d,0xbfa5b223,0x80868309,0x898b8807,0x929c9515,0x9b919e1b,0x7c0a47a1,0x75074caf,0x6e1051bd,0x671d5ab3,0x583e6b99,0x51336097,0x4a247d85,0x4329768b,0x34621fd1,0x3d6f14df,0x267809cd,0x2f7502c3,0x105633e9,0x195b38e7,0x24c25f5,0xb412efb,0xd7618c9a,0xde6c8794,0xc57b9a86,0xcc769188,0xf355a0a2,0xfa58abac,0xe14fb6be,0xe842bdb0,0x9f09d4ea,0x9604dfe4,0x8d13c2f6,0x841ec9f8,0xbb3df8d2,0xb230f3dc,0xa927eece,0xa02ae5c0,0x47b13c7a,0x4ebc3774,0x55ab2a66,0x5ca62168,0x63851042,0x6a881b4c,0x719f065e,0x78920d50,0xfd9640a,0x6d46f04,0x1dc37216,0x14ce7918,0x2bed4832,0x22e0433c,0x39f75e2e,0x30fa5520,0x9ab701ec,0x93ba0ae2,0x88ad17f0,0x81a01cfe,0xbe832dd4,0xb78e26da,0xac993bc8,0xa59430c6,0xd2df599c,0xdbd25292,0xc0c54f80,0xc9c8448e,0xf6eb75a4,0xffe67eaa,0xe4f163b8,0xedfc68b6,0xa67b10c,0x36aba02,0x187da710,0x1170ac1e,0x2e539d34,0x275e963a,0x3c498b28,0x35448026,0x420fe97c,0x4b02e272,0x5015ff60,0x5918f46e,0x663bc544,0x6f36ce4a,0x7421d358,0x7d2cd856,0xa10c7a37,0xa8017139,0xb3166c2b,0xba1b6725,0x8538560f,0x8c355d01,0x97224013,0x9e2f4b1d,0xe9642247,0xe0692949,0xfb7e345b,0xf2733f55,0xcd500e7f,0xc45d0571,0xdf4a1863,0xd647136d,0x31dccad7,0x38d1c1d9,0x23c6dccb,0x2acbd7c5,0x15e8e6ef,0x1ce5ede1,0x7f2f0f3,0xefffbfd,0x79b492a7,0x70b999a9,0x6bae84bb,0x62a38fb5,0x5d80be9f,0x548db591,0x4f9aa883,0x4697a38d];function ii(e){let t=[];for(let a=0;a<e.length;a+=4)t.push(e[a]<<24|e[a+1]<<16|e[a+2]<<8|e[a+3]);return t}class ip{get key(){return dY(this,s,"f").slice()}constructor(e){let t;if(s.set(this,void 0),o.set(this,void 0),l.set(this,void 0),!(this instanceof ip))throw Error("AES must be instanitated with `new`");dX(this,s,new Uint8Array(e),"f");let a=dJ[this.key.length];if(null==a)throw TypeError("invalid key size (must be 16, 24 or 32 bytes)");dX(this,l,[],"f"),dX(this,o,[],"f");for(let e=0;e<=a;e++)dY(this,l,"f").push([0,0,0,0]),dY(this,o,"f").push([0,0,0,0]);let d=(a+1)*4,i=this.key.length/4,p=ii(this.key);for(let e=0;e<i;e++)t=e>>2,dY(this,l,"f")[t][e%4]=p[e],dY(this,o,"f")[a-t][e%4]=p[e];let r=0,n=i,m;for(;n<d;){if(m=p[i-1],p[0]^=d1[m>>16&255]<<24^d1[m>>8&255]<<16^d1[255&m]<<8^d1[m>>24&255]^dQ[r]<<24,r+=1,8!=i)for(let e=1;e<i;e++)p[e]^=p[e-1];else{for(let e=1;e<i/2;e++)p[e]^=p[e-1];m=p[i/2-1],p[i/2]^=d1[255&m]^d1[m>>8&255]<<8^d1[m>>16&255]<<16^d1[m>>24&255]<<24;for(let e=i/2+1;e<i;e++)p[e]^=p[e-1]}let e=0,t,s;for(;e<i&&n<d;)t=n>>2,s=n%4,dY(this,l,"f")[t][s]=p[e],dY(this,o,"f")[a-t][s]=p[e++],n++}for(let e=1;e<a;e++)for(let t=0;t<4;t++)m=dY(this,o,"f")[e][t],dY(this,o,"f")[e][t]=ie[m>>24&255]^it[m>>16&255]^ia[m>>8&255]^id[255&m]}encrypt(e){if(16!=e.length)throw TypeError("invalid plaintext size (must be 16 bytes)");let t=dY(this,l,"f").length-1,a=[0,0,0,0],d=ii(e);for(let e=0;e<4;e++)d[e]^=dY(this,l,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)a[t]=d2[d[t]>>24&255]^d6[d[(t+1)%4]>>16&255]^d4[d[(t+2)%4]>>8&255]^d3[255&d[(t+3)%4]]^dY(this,l,"f")[e][t];d=a.slice()}let i=new Uint8Array(16),p=0;for(let e=0;e<4;e++)p=dY(this,l,"f")[t][e],i[4*e]=(d1[d[e]>>24&255]^p>>24)&255,i[4*e+1]=(d1[d[(e+1)%4]>>16&255]^p>>16)&255,i[4*e+2]=(d1[d[(e+2)%4]>>8&255]^p>>8)&255,i[4*e+3]=(d1[255&d[(e+3)%4]]^p)&255;return i}decrypt(e){if(16!=e.length)throw TypeError("invalid ciphertext size (must be 16 bytes)");let t=dY(this,o,"f").length-1,a=[0,0,0,0],d=ii(e);for(let e=0;e<4;e++)d[e]^=dY(this,o,"f")[0][e];for(let e=1;e<t;e++){for(let t=0;t<4;t++)a[t]=d9[d[t]>>24&255]^d8[d[(t+3)%4]>>16&255]^d5[d[(t+2)%4]>>8&255]^d7[255&d[(t+1)%4]]^dY(this,o,"f")[e][t];d=a.slice()}let i=new Uint8Array(16),p=0;for(let e=0;e<4;e++)p=dY(this,o,"f")[t][e],i[4*e]=(d0[d[e]>>24&255]^p>>24)&255,i[4*e+1]=(d0[d[(e+3)%4]>>16&255]^p>>16)&255,i[4*e+2]=(d0[d[(e+2)%4]>>8&255]^p>>8)&255,i[4*e+3]=(d0[255&d[(e+1)%4]]^p)&255;return i}}s=new WeakMap,o=new WeakMap,l=new WeakMap;class ir{constructor(e,t,a){if(a&&!(this instanceof a))throw Error(`${e} must be instantiated with "new"`);Object.defineProperties(this,{aes:{enumerable:!0,value:new ip(t)},name:{enumerable:!0,value:e}})}}var is=function(e,t,a,d,i){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?i.call(e,a):i?i.value=a:t.set(e,a),a},io=function(e,t,a,d){if("a"===a&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!d:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?d:"a"===a?d.call(e):d?d.value:t.get(e)};class il extends ir{constructor(e,t){if(super("ECC",e,il),m.set(this,void 0),u.set(this,void 0),t){if(t.length%16)throw TypeError("invalid iv size (must be 16 bytes)");is(this,m,new Uint8Array(t),"f")}else is(this,m,new Uint8Array(16),"f");is(this,u,this.iv,"f")}get iv(){return new Uint8Array(io(this,m,"f"))}encrypt(e){if(e.length%16)throw TypeError("invalid plaintext size (must be multiple of 16 bytes)");let t=new Uint8Array(e.length);for(let a=0;a<e.length;a+=16){for(let t=0;t<16;t++)io(this,u,"f")[t]^=e[a+t];is(this,u,this.aes.encrypt(io(this,u,"f")),"f"),t.set(io(this,u,"f"),a)}return t}decrypt(e){if(e.length%16)throw TypeError("invalid ciphertext size (must be multiple of 16 bytes)");let t=new Uint8Array(e.length);for(let a=0;a<e.length;a+=16){let d=this.aes.decrypt(e.subarray(a,a+16));for(let i=0;i<16;i++)t[a+i]=d[i]^io(this,u,"f")[i],io(this,u,"f")[i]=e[a+i]}return t}}m=new WeakMap,u=new WeakMap;new WeakMap,new WeakMap,new WeakSet;var im=function(e,t,a,d,i){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!i)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?i.call(e,a):i?i.value=a:t.set(e,a),a},iu=function(e,t,a,d){if("a"===a&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!d:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?d:"a"===a?d.call(e):d?d.value:t.get(e)};class ic extends ir{constructor(e,t){super("CTR",e,ic),c.set(this,void 0),h.set(this,void 0),x.set(this,void 0),im(this,x,new Uint8Array(16),"f"),iu(this,x,"f").fill(0),im(this,c,iu(this,x,"f"),"f"),im(this,h,16,"f"),null==t&&(t=1),"number"==typeof t?this.setCounterValue(t):this.setCounterBytes(t)}get counter(){return new Uint8Array(iu(this,x,"f"))}setCounterValue(e){if(!Number.isInteger(e)||e<0||e>Number.MAX_SAFE_INTEGER)throw TypeError("invalid counter initial integer value");for(let t=15;t>=0;--t)iu(this,x,"f")[t]=e%256,e=Math.floor(e/256)}setCounterBytes(e){if(16!==e.length)throw TypeError("invalid counter initial Uint8Array value length");iu(this,x,"f").set(e)}increment(){for(let e=15;e>=0;e--)if(255===iu(this,x,"f")[e])iu(this,x,"f")[e]=0;else{iu(this,x,"f")[e]++;break}}encrypt(e){var t,a;let d=new Uint8Array(e);for(let e=0;e<d.length;e++)16===iu(this,h,"f")&&(im(this,c,this.aes.encrypt(iu(this,x,"f")),"f"),im(this,h,0,"f"),this.increment()),d[e]^=iu(this,c,"f")[im(this,h,(a=iu(this,h,"f"),t=a++,a),"f"),t];return d}decrypt(e){return this.encrypt(e)}}c=new WeakMap,h=new WeakMap,x=new WeakMap,new WeakMap,new WeakMap,new WeakMap;function ih(e,t,a,d){var i,p,r,n,s;let o,{c:l,dkLen:m,DK:u,PRF:f,PRFSalt:c}=function(e,t,a,d){B(e);let{c:i,dkLen:p,asyncTick:r}=q({dkLen:32,asyncTick:10},d);if(k(i),k(p),k(r),i<1)throw Error("PBKDF2: iterations (c) should be >= 1");let n=K(t),s=K(a),o=new Uint8Array(p),l=eM.create(e,n),m=l._cloneInto().update(s);return{c:i,dkLen:p,asyncTick:r,DK:o,PRF:l,PRFSalt:m}}(e,t,a,d),h=new Uint8Array(4),x=L(h),b=new Uint8Array(f.outputLen);for(let e=1,t=0;t<m;e++,t+=f.outputLen){let a=u.subarray(t,t+f.outputLen);x.setInt32(0,e,!1),(o=c._cloneInto(o)).update(h).digestInto(b),a.set(b.subarray(0,a.length));for(let e=1;e<l;e++){f._cloneInto(o).update(b).digestInto(b);for(let e=0;e<a.length;e++)a[e]^=b[e]}}return i=f,p=c,r=u,n=o,s=b,i.destroy(),p.destroy(),n&&n.destroy(),s.fill(0),r}let ix=(e,t)=>e<<t|e>>>32-t;function ib(e,t,a,d,i,p){let r=e[t++]^a[d++],n=e[t++]^a[d++],s=e[t++]^a[d++],o=e[t++]^a[d++],l=e[t++]^a[d++],m=e[t++]^a[d++],u=e[t++]^a[d++],f=e[t++]^a[d++],c=e[t++]^a[d++],h=e[t++]^a[d++],x=e[t++]^a[d++],b=e[t++]^a[d++],v=e[t++]^a[d++],g=e[t++]^a[d++],y=e[t++]^a[d++],w=e[t++]^a[d++],S=r,E=n,N=s,T=o,A=l,_=m,k=u,I=f,B=c,D=h,P=x,O=b,V=v,R=g,M=y,C=w;for(let e=0;e<8;e+=2)A^=ix(S+V|0,7),B^=ix(A+S|0,9),V^=ix(B+A|0,13),S^=ix(V+B|0,18),D^=ix(_+E|0,7),R^=ix(D+_|0,9),E^=ix(R+D|0,13),_^=ix(E+R|0,18),M^=ix(P+k|0,7),N^=ix(M+P|0,9),k^=ix(N+M|0,13),P^=ix(k+N|0,18),T^=ix(C+O|0,7),I^=ix(T+C|0,9),O^=ix(I+T|0,13),C^=ix(O+I|0,18),E^=ix(S+T|0,7),N^=ix(E+S|0,9),T^=ix(N+E|0,13),S^=ix(T+N|0,18),k^=ix(_+A|0,7),I^=ix(k+_|0,9),A^=ix(I+k|0,13),_^=ix(A+I|0,18),O^=ix(P+D|0,7),B^=ix(O+P|0,9),D^=ix(B+O|0,13),P^=ix(D+B|0,18),V^=ix(C+M|0,7),R^=ix(V+C|0,9),M^=ix(R+V|0,13),C^=ix(M+R|0,18);i[p++]=r+S|0,i[p++]=n+E|0,i[p++]=s+N|0,i[p++]=o+T|0,i[p++]=l+A|0,i[p++]=m+_|0,i[p++]=u+k|0,i[p++]=f+I|0,i[p++]=c+B|0,i[p++]=h+D|0,i[p++]=x+P|0,i[p++]=b+O|0,i[p++]=v+V|0,i[p++]=g+R|0,i[p++]=y+M|0,i[p++]=w+C|0}function iv(e,t,a,d,i){let p=d+0,r=d+16*i;for(let d=0;d<16;d++)a[r+d]=e[t+(2*i-1)*16+d];for(let d=0;d<i;d++,p+=16,t+=16)ib(a,r,e,t,a,p),d>0&&(r+=16),ib(a,p,e,t+=16,a,r)}function ig(e,t,a){let{N:d,r:i,p,dkLen:r,asyncTick:n,maxmem:s,onProgress:o}=q({dkLen:32,asyncTick:10,maxmem:0x40000400},a);if(k(d),k(i),k(p),k(r),k(n),k(s),void 0!==o&&"function"!=typeof o)throw Error("progressCb should be function");let l=128*i,m=l/4;if(d<=1||(d&d-1)!=0||d>=2**(l/8)||d>0x100000000)throw Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(p<0||p>(0x100000000-1)*32/l)throw Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(r<0||r>(0x100000000-1)*32)throw Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");let u=l*(d+p);if(u>s)throw Error(`Scrypt: parameters too large, ${u} (128 * r * (N + p)) > ${s} (maxmem)`);let f=ih(et,e,t,{c:1,dkLen:l*p}),c=C(f),h=C(new Uint8Array(l*d)),x=C(new Uint8Array(l)),b=()=>{};if(o){let e=2*d*p,t=Math.max(Math.floor(e/1e4),1),a=0;b=()=>{a++,o&&(!(a%t)||a===e)&&o(a/e)}}return{N:d,r:i,p,dkLen:r,blockSize32:m,V:h,B32:c,B:f,tmp:x,blockMixCb:b,asyncTick:n}}function iy(e,t,a,d,i){let p=ih(et,e,a,{c:1,dkLen:t});return a.fill(0),d.fill(0),i.fill(0),p}async function iw(e,t,a){let{N:d,r:i,p,dkLen:r,blockSize32:n,V:s,B32:o,B:l,tmp:m,blockMixCb:u,asyncTick:f}=ig(e,t,a);for(let e=0;e<p;e++){let t=n*e;for(let e=0;e<n;e++)s[e]=o[t+e];let a=0;await z(d-1,f,()=>{iv(s,a,s,a+=n,i),u()}),iv(s,(d-1)*n,o,t,i),u(),await z(d,f,()=>{let e=o[t+n-16]%d;for(let a=0;a<n;a++)m[a]=o[t+a]^s[e*n+a];iv(m,0,o,t,i),u()})}return iy(e,r,l,s,m)}let iS=!1,iE=!1,iN=async function(e,t,a,d,i,p,r){return await iw(e,t,{N:a,r:d,p:i,dkLen:p,onProgress:r})},iT=function(e,t,a,d,i,p){return function(e,t,a){let{N:d,r:i,p,dkLen:r,blockSize32:n,V:s,B32:o,B:l,tmp:m,blockMixCb:u}=ig(e,t,a);for(let e=0;e<p;e++){let t=n*e;for(let e=0;e<n;e++)s[e]=o[t+e];for(let e=0,t=0;e<d-1;e++)iv(s,t,s,t+=n,i),u();iv(s,(d-1)*n,o,t,i),u();for(let e=0;e<d;e++){let e=o[t+n-16]%d;for(let a=0;a<n;a++)m[a]=o[t+a]^s[e*n+a];iv(m,0,o,t,i),u()}}return iy(e,r,l,s,m)}(e,t,{N:a,r:d,p:i,dkLen:p})},iA=iN,i_=iT;async function ik(e,t,a,d,i,p,r){let n=tp(e,"passwd"),s=tp(t,"salt");return tl(await iA(n,s,a,d,i,p,r))}function iI(e,t,a,d,i,p){let r=tp(e,"passwd"),n=tp(t,"salt");return tl(i_(r,n,a,d,i,p))}function iB(e){return"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),tr(e)}function iD(e,t){for(e=String(e);e.length<t;)e="0"+e;return e}function iP(e){return"string"==typeof e?ap(e,"NFKC"):tr(e)}function iO(e,t){let a=t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);te(null!=a,"invalid path","path",t);let d=a[1],i=a[3],p="!"===a[4],r=e;for(let e of d.toLowerCase().split(".")){if(Array.isArray(r)){if(!e.match(/^[0-9]+$/))break;r=r[parseInt(e)]}else if("object"==typeof r){let t=null;for(let a in r)if(a.toLowerCase()===e){t=r[a];break}r=t}else r=null;if(null==r)break}if(te(!p||null!=r,"missing required value","path",d),i&&null!=r){if("int"===i){if("string"==typeof r&&r.match(/^-?[0-9]+$/))return parseInt(r);else if(Number.isSafeInteger(r))return r}if("number"===i&&"string"==typeof r&&r.match(/^-?[0-9.]*$/))return parseFloat(r);if("data"===i&&"string"==typeof r)return iB(r);if("array"===i&&Array.isArray(r)||i===typeof r)return r;te(!1,`wrong type found for ${i} `,"path",d)}return r}ik._=iN,ik.lock=function(){iE=!0},ik.register=function(e){if(iE)throw Error("scrypt is locked");iA=e},Object.freeze(ik),iI._=iT,iI.lock=function(){iS=!0},iI.register=function(e){if(iS)throw Error("scryptSync is locked");i_=e},Object.freeze(iI);let iV="m/44'/60'/0'/0/0";function iR(e){try{let t=JSON.parse(e),a=null!=t.version?parseInt(t.version):0;if(3===a)return!0}catch(e){}return!1}function iM(e,t){let a=tp(t),d=iO(e,"crypto.ciphertext:data!");te(tl(t4(tm([a.slice(16,32),d]))).substring(2)===iO(e,"crypto.mac:string!").toLowerCase(),"incorrect password","password","[ REDACTED ]");let i=function(e,t,a){if("aes-128-ctr"===iO(e,"crypto.cipher:string"))return tl(new ic(t,iO(e,"crypto.cipherparams.iv:data!")).decrypt(a));e7(!1,"unsupported cipher","UNSUPPORTED_OPERATION",{operation:"decrypt"})}(e,a.slice(0,16),d),p=aD(i);if(e.address){let t=e.address.toLowerCase();t.startsWith("0x")||(t="0x"+t),te(ae(t)===p,"keystore address/privateKey mismatch","address",e.address)}let r={address:p,privateKey:i};if("0.1"===iO(e,"x-ethers.version:string")){let t=a.slice(32,64),d=iO(e,"x-ethers.mnemonicCiphertext:data!"),i=new ic(t,iO(e,"x-ethers.mnemonicCounter:data!"));r.mnemonic={path:iO(e,"x-ethers.path:string")||iV,locale:iO(e,"x-ethers.locale:string")||"en",entropy:tl(tp(i.decrypt(d)))}}return r}function iC(e){let t=iO(e,"crypto.kdf:string");if(t&&"string"==typeof t){if("scrypt"===t.toLowerCase()){let a=iO(e,"crypto.kdfparams.salt:data!"),d=iO(e,"crypto.kdfparams.n:int!"),i=iO(e,"crypto.kdfparams.r:int!"),p=iO(e,"crypto.kdfparams.p:int!");te(d>0&&(d&d-1)==0,"invalid kdf.N","kdf.N",d),te(i>0&&p>0,"invalid kdf","kdf",t);let r=iO(e,"crypto.kdfparams.dklen:int!");return te(32===r,"invalid kdf.dklen","kdf.dflen",r),{name:"scrypt",salt:a,N:d,r:i,p,dkLen:64}}else if("pbkdf2"===t.toLowerCase()){let t=iO(e,"crypto.kdfparams.salt:data!"),a=iO(e,"crypto.kdfparams.prf:string!"),d=a.split("-").pop();te("sha256"===d||"sha512"===d,"invalid kdf.pdf","kdf.pdf",a);let i=iO(e,"crypto.kdfparams.c:int!"),p=iO(e,"crypto.kdfparams.dklen:int!");return te(32===p,"invalid kdf.dklen","kdf.dklen",p),{name:"pbkdf2",salt:t,count:i,dkLen:p,algorithm:d}}}te(!1,"unsupported key-derivation function","kdf",t)}function iL(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}async function iU(e,t,a){let d=JSON.parse(e),i=iP(t),p=iC(d);if("pbkdf2"===p.name){a&&(a(0),await iL(0));let{salt:e,count:t,dkLen:r,algorithm:n}=p,s=dj(i,e,t,r,n);return a&&(a(1),await iL(0)),iM(d,s)}e7("scrypt"===p.name,"cannot be reached","UNKNOWN_ERROR",{params:p});let{salt:r,N:n,r:s,p:o,dkLen:l}=p;return iM(d,await ik(i,r,n,s,o,l,a))}function iF(e){let t=null!=e.salt?tp(e.salt,"options.salt"):dI(32),a=131072,d=8,i=1;return e.scrypt&&(e.scrypt.N&&(a=e.scrypt.N),e.scrypt.r&&(d=e.scrypt.r),e.scrypt.p&&(i=e.scrypt.p)),te("number"==typeof a&&a>0&&Number.isSafeInteger(a)&&(BigInt(a)&BigInt(a-1))===BigInt(0),"invalid scrypt N parameter","options.N",a),te("number"==typeof d&&d>0&&Number.isSafeInteger(d),"invalid scrypt r parameter","options.r",d),te("number"==typeof i&&i>0&&Number.isSafeInteger(i),"invalid scrypt p parameter","options.p",i),{name:"scrypt",dkLen:32,salt:t,N:a,r:d,p:i}}function iz(e,t,a,d){let i=tp(a.privateKey,"privateKey"),p=null!=d.iv?tp(d.iv,"options.iv"):dI(16);te(16===p.length,"invalid options.iv length","options.iv",d.iv);let r=null!=d.uuid?tp(d.uuid,"options.uuid"):dI(16);te(16===r.length,"invalid options.uuid length","options.uuid",d.iv);let n=e.slice(0,16),s=e.slice(16,32),o=tp(new ic(n,p).encrypt(i)),l=t4(tm([s,o])),m={address:a.address.substring(2).toLowerCase(),id:function(e){let t=tp(e,"randomBytes");t[6]=15&t[6]|64,t[8]=63&t[8]|128;let a=tl(t);return[a.substring(2,10),a.substring(10,14),a.substring(14,18),a.substring(18,22),a.substring(22,34)].join("-")}(r),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:tl(p).substring(2)},ciphertext:tl(o).substring(2),kdf:"scrypt",kdfparams:{salt:tl(t.salt).substring(2),n:t.N,dklen:32,p:t.p,r:t.r},mac:l.substring(2)}};if(a.mnemonic){let t=null!=d.client?d.client:`ethers/${e4}`,i=a.mnemonic.path||iV,p=a.mnemonic.locale||"en",r=e.slice(32,64),n=tp(a.mnemonic.entropy,"account.mnemonic.entropy"),s=dI(16),o=tp(new ic(r,s).encrypt(n)),l=new Date,u="UTC--"+(l.getUTCFullYear()+"-"+iD(l.getUTCMonth()+1,2)+"-"+iD(l.getUTCDate(),2)+"T"+iD(l.getUTCHours(),2)+"-"+iD(l.getUTCMinutes(),2)+"-"+iD(l.getUTCSeconds(),2))+".0Z--"+m.address;m["x-ethers"]={client:t,gethFilename:u,path:i,locale:p,mnemonicCounter:tl(s).substring(2),mnemonicCiphertext:tl(o).substring(2),version:"0.1"}}return JSON.stringify(m)}function iK(e,t,a){null==a&&(a={});let d=iP(t),i=iF(a);return iz(tp(iI(d,i.salt,i.N,i.r,i.p,64)),i,e,a)}async function iH(e,t,a){null==a&&(a={});let d=iP(t),i=iF(a);return iz(tp(await ik(d,i.salt,i.N,i.r,i.p,64,a.progressCallback)),i,e,a)}let ij="m/44'/60'/0'/0/0",iq=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]),i$=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");function iW(e,t){let a="";for(;e;)a="0123456789abcdef"[e%16]+a,e=Math.trunc(e/16);for(;a.length<2*t;)a="0"+a;return"0x"+a}function iG(e){var t;let a=tp(e),d=tf(de(de(a)),0,4),i=tp(tm([a,d])),p=ty(i),r="";for(;p;)r=dB[Number(p%dO)]+r,p/=dO;for(let e=0;e<i.length&&!i[e];e++)r=dB[0]+r;return r}let iZ={};function iY(e,t,a,d){let i=new Uint8Array(37);0x80000000&e?(e7(null!=d,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"}),i.set(tp(d),1)):i.set(tp(a));for(let t=24;t>=0;t-=8)i[33+(t>>3)]=e>>24-t&255;let p=tp(dp("sha512",t,i));return{IL:p.slice(0,32),IR:p.slice(32)}}function iX(e,t){let a=t.split("/");te(a.length>0,"invalid path","path",t),"m"===a[0]&&(te(0===e.depth,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${e.depth}`,"path",t),a.shift());let d=e;for(let e=0;e<a.length;e++){let t=a[e];if(t.match(/^[0-9]+'$/)){let a=parseInt(t.substring(0,t.length-1));te(a<0x80000000,"invalid path index",`path[${e}]`,t),d=d.deriveChild(0x80000000+a)}else if(t.match(/^[0-9]+$/)){let a=parseInt(t);te(a<0x80000000,"invalid path index",`path[${e}]`,t),d=d.deriveChild(a)}else te(!1,"invalid path component",`path[${e}]`,t)}return d}class iJ extends a6{publicKey;fingerprint;parentFingerprint;mnemonic;chainCode;path;index;depth;constructor(e,t,a,d,i,p,r,n,s){super(t,s),td(e,iZ,"HDNodeWallet"),e9(this,{publicKey:t.compressedPublicKey}),e9(this,{parentFingerprint:a,fingerprint:tf(dT(de(this.publicKey)),0,4),chainCode:d,path:i,index:p,depth:r}),e9(this,{mnemonic:n})}connect(e){return new iJ(iZ,this.signingKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.mnemonic,e)}#I(){let e={address:this.address,privateKey:this.privateKey},t=this.mnemonic;return this.path&&t&&"en"===t.wordlist.locale&&""===t.password&&(e.mnemonic={path:this.path,locale:"en",entropy:t.entropy}),e}async encrypt(e,t){return await iH(this.#I(),e,{progressCallback:t})}encryptSync(e){return iK(this.#I(),e)}get extendedKey(){return e7(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),iG(tm(["0x0488ADE4",iW(this.depth,1),this.parentFingerprint,iW(this.index,4),this.chainCode,tm(["0x00",this.privateKey])]))}hasPath(){return null!=this.path}neuter(){return new iQ(iZ,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.provider)}deriveChild(e){let t=tw(e,"index");te(t<=0xffffffff,"invalid index","index",t);let a=this.path;a&&(a+="/"+(0x7fffffff&t),0x80000000&t&&(a+="'"));let{IR:d,IL:i}=iY(t,this.chainCode,this.publicKey,this.privateKey);return new iJ(iZ,new tO(tS((ty(i)+BigInt(this.privateKey))%i$,32)),this.fingerprint,tl(d),a,t,this.depth+1,this.mnemonic,this.provider)}derivePath(e){return iX(this,e)}static #B(e,t){te(ts(e),"invalid seed","seed","[REDACTED]");let a=tp(e,"seed");te(a.length>=16&&a.length<=64,"invalid seed","seed","[REDACTED]");let d=tp(dp("sha512",iq,a));return new iJ(iZ,new tO(tl(d.slice(0,32))),"0x00000000",tl(d.slice(32)),"m",0,0,t,null)}static fromExtendedKey(e){let t=tE(function(e){let t=dP;for(let a=0;a<e.length;a++)t*=dO,t+=function(e){if(null==dD){dD={};for(let e=0;e<dB.length;e++)dD[dB[e]]=BigInt(e)}let t=dD[e];return te(null!=t,"invalid base58 value","letter",e),t}(e[a]);return t}(e));te(82===t.length||iG(t.slice(0,78))===e,"invalid extended key","extendedKey","[ REDACTED ]");let a=t[4],d=tl(t.slice(5,9)),i=parseInt(tl(t.slice(9,13)).substring(2),16),p=tl(t.slice(13,45)),r=t.slice(45,78);switch(tl(t.slice(0,4))){case"0x0488b21e":case"0x043587cf":{let e=tl(r);return new iQ(iZ,aD(e),e,d,p,null,i,a,null)}case"0x0488ade4":case"0x04358394 ":if(0!==r[0])break;return new iJ(iZ,new tO(r.slice(1)),d,p,null,i,a,null,null)}te(!1,"invalid extended key prefix","extendedKey","[ REDACTED ]")}static createRandom(e,t,a){null==e&&(e=""),null==t&&(t=ij),null==a&&(a=dF.wordlist());let d=dZ.fromEntropy(dI(16),e,a);return iJ.#B(d.computeSeed(),d).derivePath(t)}static fromMnemonic(e,t){return t||(t=ij),iJ.#B(e.computeSeed(),e).derivePath(t)}static fromPhrase(e,t,a,d){null==t&&(t=""),null==a&&(a=ij),null==d&&(d=dF.wordlist());let i=dZ.fromPhrase(e,t,d);return iJ.#B(i.computeSeed(),i).derivePath(a)}static fromSeed(e){return iJ.#B(e,null)}}class iQ extends a2{publicKey;fingerprint;parentFingerprint;chainCode;path;index;depth;constructor(e,t,a,d,i,p,r,n,s){super(t,s),td(e,iZ,"HDNodeVoidWallet"),e9(this,{publicKey:a});let o=tf(dT(de(a)),0,4);e9(this,{publicKey:a,fingerprint:o,parentFingerprint:d,chainCode:i,path:p,index:r,depth:n})}connect(e){return new iQ(iZ,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,e)}get extendedKey(){return e7(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),iG(tm(["0x0488B21E",iW(this.depth,1),this.parentFingerprint,iW(this.index,4),this.chainCode,this.publicKey]))}hasPath(){return null!=this.path}deriveChild(e){let t=tw(e,"index");te(t<=0xffffffff,"invalid index","index",t);let a=this.path;a&&(a+="/"+(0x7fffffff&t),0x80000000&t&&(a+="'"));let{IR:d,IL:i}=iY(t,this.chainCode,this.publicKey,null),p=tO.addPoints(i,this.publicKey,!0);return new iQ(iZ,aD(p),p,this.fingerprint,tl(d),a,t,this.depth+1,this.provider)}derivePath(e){return iX(this,e)}}function i1(e){try{if(JSON.parse(e).encseed)return!0}catch(e){}return!1}function i0(e,t){let a=JSON.parse(e),d=iP(t),i=ae(iO(a,"ethaddr:string!")),p=iB(iO(a,"encseed:string!"));te(p&&p.length%16==0,"invalid encseed","json",e);let r=tp(dj(d,d,2e3,32,"sha256")).slice(0,16),n=p.slice(0,16),s=p.slice(16),o=function(e){if(e.length<16)throw TypeError("PKCS#7 invalid length");let t=e[e.length-1];if(t>16)throw TypeError("PKCS#7 padding byte out of range");let a=e.length-t;for(let d=0;d<t;d++)if(e[a+d]!==t)throw TypeError("PKCS#7 invalid padding byte");return new Uint8Array(e.subarray(0,a))}(tp(new il(r,n).decrypt(s))),l="";for(let e=0;e<o.length;e++)l+=String.fromCharCode(o[e]);return{address:i,privateKey:t4(ap(l))}}function i2(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}class i6 extends a6{constructor(e,t){"string"!=typeof e||e.startsWith("0x")||(e="0x"+e),super("string"==typeof e?new tO(e):e,t)}connect(e){return new i6(this.signingKey,e)}async encrypt(e,t){let a={address:this.address,privateKey:this.privateKey};return await iH(a,e,{progressCallback:t})}encryptSync(e){return iK({address:this.address,privateKey:this.privateKey},e)}static #D(e){if(te(e,"invalid JSON wallet","json","[ REDACTED ]"),"mnemonic"in e&&e.mnemonic&&"en"===e.mnemonic.locale){let t=dZ.fromEntropy(e.mnemonic.entropy),a=iJ.fromMnemonic(t,e.mnemonic.path);if(a.address===e.address&&a.privateKey===e.privateKey)return a;console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")}let t=new i6(e.privateKey);return te(t.address===e.address,"address/privateKey mismatch","json","[ REDACTED ]"),t}static async fromEncryptedJson(e,t,a){let d=null;return iR(e)?d=await iU(e,t,a):i1(e)&&(a&&(a(0),await i2(0)),d=i0(e,t),a&&(a(1),await i2(0))),i6.#D(d)}static fromEncryptedJsonSync(e,t){let a=null;return iR(e)?a=function(e,t){let a=JSON.parse(e),d=iP(t),i=iC(a);if("pbkdf2"===i.name){let{salt:e,count:t,dkLen:p,algorithm:r}=i;return iM(a,dj(d,e,t,p,r))}e7("scrypt"===i.name,"cannot be reached","UNKNOWN_ERROR",{params:i});let{salt:p,N:r,r:n,p:s,dkLen:o}=i;return iM(a,iI(d,p,r,n,s,o))}(e,t):i1(e)?a=i0(e,t):te(!1,"invalid JSON wallet","json","[ REDACTED ]"),i6.#D(a)}static createRandom(e){let t=iJ.createRandom();return e?t.connect(e):t}static fromPhrase(e,t){let a=iJ.fromPhrase(e);return t?a.connect(t):a}}var i4=a(9428);let i3=V&&"object"==typeof V&&"webcrypto"in V?O.webcrypto:V&&"object"==typeof V&&"randomBytes"in V?V:void 0;function i9(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function i8(e){if(!Number.isSafeInteger(e)||e<0)throw Error("positive integer expected, got "+e)}function i5(e,...t){if(!i9(e))throw Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw Error("Uint8Array expected of length "+t+", got length="+e.length)}function i7(e,t=!0){if(e.destroyed)throw Error("Hash instance has been destroyed");if(t&&e.finished)throw Error("Hash#digest() has already been called")}function pe(e,t){i5(e);let a=t.outputLen;if(e.length<a)throw Error("digestInto() expects output buffer of length at least "+a)}function pt(...e){for(let t=0;t<e.length;t++)e[t].fill(0)}function pa(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)}function pd(e,t){return e<<32-t|e>>>t}let pi=68===new Uint8Array(new Uint32Array([0x11223344]).buffer)[0]?e=>e:function(e){for(let a=0;a<e.length;a++){var t;e[a]=(t=e[a])<<24&0xff000000|t<<8&0xff0000|t>>>8&65280|t>>>24&255}return e},pp="function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex,pr=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function pn(e){if(i5(e),pp)return e.toHex();let t="";for(let a=0;a<e.length;a++)t+=pr[e[a]];return t}let ps={_0:48,_9:57,A:65,F:70,a:97,f:102};function po(e){return e>=ps._0&&e<=ps._9?e-ps._0:e>=ps.A&&e<=ps.F?e-(ps.A-10):e>=ps.a&&e<=ps.f?e-(ps.a-10):void 0}function pl(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);if(pp)return Uint8Array.fromHex(e);let t=e.length,a=t/2;if(t%2)throw Error("hex string expected, got unpadded hex of length "+t);let d=new Uint8Array(a);for(let t=0,i=0;t<a;t++,i+=2){let a=po(e.charCodeAt(i)),p=po(e.charCodeAt(i+1));if(void 0===a||void 0===p)throw Error('hex string expected, got non-hex character "'+(e[i]+e[i+1])+'" at index '+i);d[t]=16*a+p}return d}function pm(e){return"string"==typeof e&&(e=function(e){if("string"!=typeof e)throw Error("string expected");return new Uint8Array(new TextEncoder().encode(e))}(e)),i5(e),e}function pu(...e){let t=0;for(let a=0;a<e.length;a++){let d=e[a];i5(d),t+=d.length}let a=new Uint8Array(t);for(let t=0,d=0;t<e.length;t++){let i=e[t];a.set(i,d),d+=i.length}return a}class pf{}function pc(e){let t=t=>e().update(pm(t)).digest(),a=e();return t.outputLen=a.outputLen,t.blockLen=a.blockLen,t.create=()=>e(),t}function ph(e=32){if(i3&&"function"==typeof i3.getRandomValues)return i3.getRandomValues(new Uint8Array(e));if(i3&&"function"==typeof i3.randomBytes)return Uint8Array.from(i3.randomBytes(e));throw Error("crypto.getRandomValues must be defined")}class px extends pf{constructor(e,t,a,d){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=t,this.padOffset=a,this.isLE=d,this.buffer=new Uint8Array(e),this.view=pa(this.buffer)}update(e){i7(this),i5(e=pm(e));let{view:t,buffer:a,blockLen:d}=this,i=e.length;for(let p=0;p<i;){let r=Math.min(d-this.pos,i-p);if(r===d){let t=pa(e);for(;d<=i-p;p+=d)this.process(t,p);continue}a.set(e.subarray(p,p+r),this.pos),this.pos+=r,p+=r,this.pos===d&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){i7(this),pe(e,this),this.finished=!0;let{buffer:t,view:a,blockLen:d,isLE:i}=this,{pos:p}=this;t[p++]=128,pt(this.buffer.subarray(p)),this.padOffset>d-p&&(this.process(a,0),p=0);for(let e=p;e<d;e++)t[e]=0;!function(e,t,a,d){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,a,d);let i=BigInt(32),p=BigInt(0xffffffff),r=Number(a>>i&p),n=Number(a&p),s=4*!!d,o=4*!d;e.setUint32(t+s,r,d),e.setUint32(t+o,n,d)}(a,d-8,BigInt(8*this.length),i),this.process(a,0);let r=pa(e),n=this.outputLen;if(n%4)throw Error("_sha2: outputLen should be aligned to 32bit");let s=n/4,o=this.get();if(s>o.length)throw Error("_sha2: outputLen bigger than state");for(let e=0;e<s;e++)r.setUint32(4*e,o[e],i)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let a=e.slice(0,t);return this.destroy(),a}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:a,length:d,finished:i,destroyed:p,pos:r}=this;return e.destroyed=p,e.finished=i,e.length=d,e.pos=r,d%t&&e.buffer.set(a),e}clone(){return this._cloneInto()}}let pb=Uint32Array.from([0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19]),pv=Uint32Array.from([0x6a09e667,0xf3bcc908,0xbb67ae85,0x84caa73b,0x3c6ef372,0xfe94f82b,0xa54ff53a,0x5f1d36f1,0x510e527f,0xade682d1,0x9b05688c,0x2b3e6c1f,0x1f83d9ab,0xfb41bd6b,0x5be0cd19,0x137e2179]),pg=BigInt(0x100000000-1),py=BigInt(32);function pw(e,t=!1){let a=e.length,d=new Uint32Array(a),i=new Uint32Array(a);for(let p=0;p<a;p++){let{h:a,l:r}=function(e,t=!1){return t?{h:Number(e&pg),l:Number(e>>py&pg)}:{h:0|Number(e>>py&pg),l:0|Number(e&pg)}}(e[p],t);[d[p],i[p]]=[a,r]}return[d,i]}let pS=(e,t,a)=>e>>>a,pE=(e,t,a)=>e<<32-a|t>>>a,pN=(e,t,a)=>e>>>a|t<<32-a,pT=(e,t,a)=>e<<32-a|t>>>a,pA=(e,t,a)=>e<<64-a|t>>>a-32,p_=(e,t,a)=>e>>>a-32|t<<64-a,pk=(e,t,a)=>e<<a|t>>>32-a,pI=(e,t,a)=>t<<a|e>>>32-a,pB=(e,t,a)=>t<<a-32|e>>>64-a,pD=(e,t,a)=>e<<a-32|t>>>64-a;function pP(e,t,a,d){let i=(t>>>0)+(d>>>0);return{h:e+a+(i/0x100000000|0)|0,l:0|i}}let pO=(e,t,a)=>(e>>>0)+(t>>>0)+(a>>>0),pV=(e,t,a,d)=>t+a+d+(e/0x100000000|0)|0,pR=(e,t,a,d)=>(e>>>0)+(t>>>0)+(a>>>0)+(d>>>0),pM=(e,t,a,d,i)=>t+a+d+i+(e/0x100000000|0)|0,pC=(e,t,a,d,i)=>(e>>>0)+(t>>>0)+(a>>>0)+(d>>>0)+(i>>>0),pL=(e,t,a,d,i,p)=>t+a+d+i+p+(e/0x100000000|0)|0,pU=Uint32Array.from([0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0xfc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x6ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2]),pF=new Uint32Array(64);class pz extends px{constructor(e=32){super(64,e,8,!1),this.A=0|pb[0],this.B=0|pb[1],this.C=0|pb[2],this.D=0|pb[3],this.E=0|pb[4],this.F=0|pb[5],this.G=0|pb[6],this.H=0|pb[7]}get(){let{A:e,B:t,C:a,D:d,E:i,F:p,G:r,H:n}=this;return[e,t,a,d,i,p,r,n]}set(e,t,a,d,i,p,r,n){this.A=0|e,this.B=0|t,this.C=0|a,this.D=0|d,this.E=0|i,this.F=0|p,this.G=0|r,this.H=0|n}process(e,t){for(let a=0;a<16;a++,t+=4)pF[a]=e.getUint32(t,!1);for(let e=16;e<64;e++){let t=pF[e-15],a=pF[e-2],d=pd(t,7)^pd(t,18)^t>>>3,i=pd(a,17)^pd(a,19)^a>>>10;pF[e]=i+pF[e-7]+d+pF[e-16]|0}let{A:a,B:d,C:i,D:p,E:r,F:n,G:s,H:o}=this;for(let e=0;e<64;e++){var l,m,u,f;let t=o+(pd(r,6)^pd(r,11)^pd(r,25))+((l=r)&n^~l&s)+pU[e]+pF[e]|0,c=(pd(a,2)^pd(a,13)^pd(a,22))+((m=a)&(u=d)^m&(f=i)^u&f)|0;o=s,s=n,n=r,r=p+t|0,p=i,i=d,d=a,a=t+c|0}a=a+this.A|0,d=d+this.B|0,i=i+this.C|0,p=p+this.D|0,r=r+this.E|0,n=n+this.F|0,s=s+this.G|0,o=o+this.H|0,this.set(a,d,i,p,r,n,s,o)}roundClean(){pt(pF)}destroy(){this.set(0,0,0,0,0,0,0,0),pt(this.buffer)}}let pK=pw(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))),pH=pK[0],pj=pK[1],pq=new Uint32Array(80),p$=new Uint32Array(80);class pW extends px{constructor(e=64){super(128,e,16,!1),this.Ah=0|pv[0],this.Al=0|pv[1],this.Bh=0|pv[2],this.Bl=0|pv[3],this.Ch=0|pv[4],this.Cl=0|pv[5],this.Dh=0|pv[6],this.Dl=0|pv[7],this.Eh=0|pv[8],this.El=0|pv[9],this.Fh=0|pv[10],this.Fl=0|pv[11],this.Gh=0|pv[12],this.Gl=0|pv[13],this.Hh=0|pv[14],this.Hl=0|pv[15]}get(){let{Ah:e,Al:t,Bh:a,Bl:d,Ch:i,Cl:p,Dh:r,Dl:n,Eh:s,El:o,Fh:l,Fl:m,Gh:u,Gl:f,Hh:c,Hl:h}=this;return[e,t,a,d,i,p,r,n,s,o,l,m,u,f,c,h]}set(e,t,a,d,i,p,r,n,s,o,l,m,u,f,c,h){this.Ah=0|e,this.Al=0|t,this.Bh=0|a,this.Bl=0|d,this.Ch=0|i,this.Cl=0|p,this.Dh=0|r,this.Dl=0|n,this.Eh=0|s,this.El=0|o,this.Fh=0|l,this.Fl=0|m,this.Gh=0|u,this.Gl=0|f,this.Hh=0|c,this.Hl=0|h}process(e,t){for(let a=0;a<16;a++,t+=4)pq[a]=e.getUint32(t),p$[a]=e.getUint32(t+=4);for(let e=16;e<80;e++){let t=0|pq[e-15],a=0|p$[e-15],d=pN(t,a,1)^pN(t,a,8)^pS(t,a,7),i=pT(t,a,1)^pT(t,a,8)^pE(t,a,7),p=0|pq[e-2],r=0|p$[e-2],n=pN(p,r,19)^pA(p,r,61)^pS(p,r,6),s=pR(i,pT(p,r,19)^p_(p,r,61)^pE(p,r,6),p$[e-7],p$[e-16]),o=pM(s,d,n,pq[e-7],pq[e-16]);pq[e]=0|o,p$[e]=0|s}let{Ah:a,Al:d,Bh:i,Bl:p,Ch:r,Cl:n,Dh:s,Dl:o,Eh:l,El:m,Fh:u,Fl:f,Gh:c,Gl:h,Hh:x,Hl:b}=this;for(let e=0;e<80;e++){let t=pN(l,m,14)^pN(l,m,18)^pA(l,m,41),v=pT(l,m,14)^pT(l,m,18)^p_(l,m,41),g=l&u^~l&c,y=pC(b,v,m&f^~m&h,pj[e],p$[e]),w=pL(y,x,t,g,pH[e],pq[e]),S=0|y,E=pN(a,d,28)^pA(a,d,34)^pA(a,d,39),N=pT(a,d,28)^p_(a,d,34)^p_(a,d,39),T=a&i^a&r^i&r,A=d&p^d&n^p&n;x=0|c,b=0|h,c=0|u,h=0|f,u=0|l,f=0|m,({h:l,l:m}=pP(0|s,0|o,0|w,0|S)),s=0|r,o=0|n,r=0|i,n=0|p,i=0|a,p=0|d;let _=pO(S,N,A);a=pV(_,w,E,T),d=0|_}({h:a,l:d}=pP(0|this.Ah,0|this.Al,0|a,0|d)),({h:i,l:p}=pP(0|this.Bh,0|this.Bl,0|i,0|p)),({h:r,l:n}=pP(0|this.Ch,0|this.Cl,0|r,0|n)),({h:s,l:o}=pP(0|this.Dh,0|this.Dl,0|s,0|o)),({h:l,l:m}=pP(0|this.Eh,0|this.El,0|l,0|m)),({h:u,l:f}=pP(0|this.Fh,0|this.Fl,0|u,0|f)),({h:c,l:h}=pP(0|this.Gh,0|this.Gl,0|c,0|h)),({h:x,l:b}=pP(0|this.Hh,0|this.Hl,0|x,0|b)),this.set(a,d,i,p,r,n,s,o,l,m,u,f,c,h,x,b)}roundClean(){pt(pq,p$)}destroy(){pt(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}let pG=pc(()=>new pz),pZ=pc(()=>new pW),pY=BigInt(0),pX=BigInt(1);function pJ(e,t){if("boolean"!=typeof t)throw Error(e+" boolean expected, got "+t)}function pQ(e){let t=e.toString(16);return 1&t.length?"0"+t:t}function p1(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);return""===e?pY:BigInt("0x"+e)}function p0(e){return i5(e),p1(pn(Uint8Array.from(e).reverse()))}function p2(e,t){return pl(e.toString(16).padStart(2*t,"0"))}function p6(e,t){return p2(e,t).reverse()}function p4(e,t,a){let d;if("string"==typeof t)try{d=pl(t)}catch(t){throw Error(e+" must be hex string or Uint8Array, cause: "+t)}else if(i9(t))d=Uint8Array.from(t);else throw Error(e+" must be hex string or Uint8Array");let i=d.length;if("number"==typeof a&&i!==a)throw Error(e+" of length "+a+" expected, got "+i);return d}let p3=e=>"bigint"==typeof e&&pY<=e;function p9(e,t,a,d){if(!(p3(t)&&p3(a)&&p3(d))||!(a<=t)||!(t<d))throw Error("expected valid "+e+": "+a+" <= n < "+d+", got "+t)}let p8=e=>(pX<<BigInt(e))-pX;function p5(e,t,a={}){if(!e||"object"!=typeof e)throw Error("expected valid options object");function d(t,a,d){let i=e[t];if(d&&void 0===i)return;let p=typeof i;if(p!==a||null===i)throw Error(`param "${t}" is invalid: expected ${a}, got ${p}`)}Object.entries(t).forEach(([e,t])=>d(e,t,!1)),Object.entries(a).forEach(([e,t])=>d(e,t,!0))}function p7(e){let t=new WeakMap;return(a,...d)=>{let i=t.get(a);if(void 0!==i)return i;let p=e(a,...d);return t.set(a,p),p}}let re=BigInt(0),rt=BigInt(1),ra=BigInt(2),rd=BigInt(3),ri=BigInt(4),rp=BigInt(5),rr=BigInt(8);function rn(e,t){let a=e%t;return a>=re?a:t+a}function rs(e,t,a){let d=e;for(;t-- >re;)d*=d,d%=a;return d}function ro(e,t){if(e===re)throw Error("invert: expected non-zero number");if(t<=re)throw Error("invert: expected positive modulus, got "+t);let a=rn(e,t),d=t,i=re,p=rt,r=rt,n=re;for(;a!==re;){let e=d/a,t=d%a,s=i-r*e,o=p-n*e;d=a,a=t,i=r,p=n,r=s,n=o}if(d!==rt)throw Error("invert: does not exist");return rn(i,t)}function rl(e,t){let a=(e.ORDER+rt)/ri,d=e.pow(t,a);if(!e.eql(e.sqr(d),t))throw Error("Cannot find square root");return d}function rm(e,t){let a=(e.ORDER-rp)/rr,d=e.mul(t,ra),i=e.pow(d,a),p=e.mul(t,i),r=e.mul(e.mul(p,ra),i),n=e.mul(p,e.sub(r,e.ONE));if(!e.eql(e.sqr(n),t))throw Error("Cannot find square root");return n}let ru=(e,t)=>(rn(e,t)&rt)===rt,rf=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function rc(e,t,a=!1){let d=Array(t.length).fill(a?e.ZERO:void 0),i=t.reduce((t,a,i)=>e.is0(a)?t:(d[i]=t,e.mul(t,a)),e.ONE),p=e.inv(i);return t.reduceRight((t,a,i)=>e.is0(a)?t:(d[i]=e.mul(t,d[i]),e.mul(t,a)),p),d}function rh(e,t){let a=(e.ORDER-rt)/ra,d=e.pow(t,a),i=e.eql(d,e.ONE),p=e.eql(d,e.ZERO),r=e.eql(d,e.neg(e.ONE));if(!i&&!p&&!r)throw Error("invalid Legendre symbol result");return i?1:p?0:-1}function rx(e,t,a=!1,d={}){let i,p,r;if(e<=re)throw Error("invalid field: expected ORDER > 0, got "+e);if("object"==typeof t&&null!=t){if(d.sqrt||a)throw Error("cannot specify opts in two arguments");t.BITS&&(p=t.BITS),t.sqrt&&(r=t.sqrt),"boolean"==typeof t.isLE&&(a=t.isLE)}else"number"==typeof t&&(p=t),d.sqrt&&(r=d.sqrt);let{nBitLength:n,nByteLength:s}=function(e,t){void 0!==t&&i8(t);let a=void 0!==t?t:e.toString(2).length,d=Math.ceil(a/8);return{nBitLength:a,nByteLength:d}}(e,p);if(s>2048)throw Error("invalid field: expected ORDER of <= 2048 bytes");let o=Object.freeze({ORDER:e,isLE:a,BITS:n,BYTES:s,MASK:p8(n),ZERO:re,ONE:rt,create:t=>rn(t,e),isValid:t=>{if("bigint"!=typeof t)throw Error("invalid field element: expected bigint, got "+typeof t);return re<=t&&t<e},is0:e=>e===re,isValidNot0:e=>!o.is0(e)&&o.isValid(e),isOdd:e=>(e&rt)===rt,neg:t=>rn(-t,e),eql:(e,t)=>e===t,sqr:t=>rn(t*t,e),add:(t,a)=>rn(t+a,e),sub:(t,a)=>rn(t-a,e),mul:(t,a)=>rn(t*a,e),pow:(e,t)=>(function(e,t,a){if(a<re)throw Error("invalid exponent, negatives unsupported");if(a===re)return e.ONE;if(a===rt)return t;let d=e.ONE,i=t;for(;a>re;)a&rt&&(d=e.mul(d,i)),i=e.sqr(i),a>>=rt;return d})(o,e,t),div:(t,a)=>rn(t*ro(a,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>ro(t,e),sqrt:r||(t=>(i||(i=e%ri===rd?rl:e%rr===rp?rm:function(e){if(e<BigInt(3))throw Error("sqrt is not defined for small field");let t=e-rt,a=0;for(;t%ra===re;)t/=ra,a++;let d=ra,i=rx(e);for(;1===rh(i,d);)if(d++>1e3)throw Error("Cannot find square root: probably non-prime P");if(1===a)return rl;let p=i.pow(d,t),r=(t+rt)/ra;return function(e,d){if(e.is0(d))return d;if(1!==rh(e,d))throw Error("Cannot find square root");let i=a,n=e.mul(e.ONE,p),s=e.pow(d,t),o=e.pow(d,r);for(;!e.eql(s,e.ONE);){if(e.is0(s))return e.ZERO;let t=1,a=e.sqr(s);for(;!e.eql(a,e.ONE);)if(t++,a=e.sqr(a),t===i)throw Error("Cannot find square root");let d=rt<<BigInt(i-t-1),p=e.pow(n,d);i=t,n=e.sqr(p),s=e.mul(s,n),o=e.mul(o,p)}return o}}(e)),i(o,t))),toBytes:e=>a?p6(e,s):p2(e,s),fromBytes:e=>{if(e.length!==s)throw Error("Field.fromBytes: expected "+s+" bytes, got "+e.length);return a?p0(e):p1(pn(e))},invertBatch:e=>rc(o,e),cmov:(e,t,a)=>a?t:e});return Object.freeze(o)}function rb(e){if("bigint"!=typeof e)throw Error("field order must be bigint");return Math.ceil(e.toString(2).length/8)}function rv(e){let t=rb(e);return t+Math.ceil(t/2)}let rg=BigInt(0),ry=BigInt(1);function rw(e,t){let a=t.negate();return e?a:t}function rS(e,t,a){let d="pz"===t?e=>e.pz:e=>e.ez,i=rc(e.Fp,a.map(d));return a.map((e,t)=>e.toAffine(i[t])).map(e.fromAffine)}function rE(e,t){if(!Number.isSafeInteger(e)||e<=0||e>t)throw Error("invalid window size, expected [1.."+t+"], got W="+e)}function rN(e,t){rE(e,t);let a=Math.ceil(t/e)+1,d=2**(e-1),i=2**e;return{windows:a,windowSize:d,mask:p8(e),maxNumber:i,shiftBy:BigInt(e)}}function rT(e,t,a){let{windowSize:d,mask:i,maxNumber:p,shiftBy:r}=a,n=Number(e&i),s=e>>r;n>d&&(n-=p,s+=ry);let o=t*d,l=o+Math.abs(n)-1,m=0===n;return{nextN:s,offset:l,isZero:m,isNeg:n<0,isNegF:t%2!=0,offsetF:o}}let rA=new WeakMap,r_=new WeakMap;function rk(e){return r_.get(e)||1}function rI(e){if(e!==rg)throw Error("invalid wNAF")}function rB(e,t){return{constTimeNegate:rw,hasPrecomputes:e=>1!==rk(e),unsafeLadder(t,a,d=e.ZERO){let i=t;for(;a>rg;)a&ry&&(d=d.add(i)),i=i.double(),a>>=ry;return d},precomputeWindow(e,a){let{windows:d,windowSize:i}=rN(a,t),p=[],r=e,n=r;for(let e=0;e<d;e++){n=r,p.push(n);for(let e=1;e<i;e++)n=n.add(r),p.push(n);r=n.double()}return p},wNAF(a,d,i){let p=e.ZERO,r=e.BASE,n=rN(a,t);for(let e=0;e<n.windows;e++){let{nextN:t,offset:a,isZero:s,isNeg:o,isNegF:l,offsetF:m}=rT(i,e,n);i=t,s?r=r.add(rw(l,d[m])):p=p.add(rw(o,d[a]))}return rI(i),{p,f:r}},wNAFUnsafe(a,d,i,p=e.ZERO){let r=rN(a,t);for(let e=0;e<r.windows&&i!==rg;e++){let{nextN:t,offset:a,isZero:n,isNeg:s}=rT(i,e,r);if(i=t,!n){let e=d[a];p=p.add(s?e.negate():e)}}return rI(i),p},getPrecomputes(e,t,a){let d=rA.get(t);return d||(d=this.precomputeWindow(t,e),1!==e&&("function"==typeof a&&(d=a(d)),rA.set(t,d))),d},wNAFCached(e,t,a){let d=rk(e);return this.wNAF(d,this.getPrecomputes(d,e,a),t)},wNAFCachedUnsafe(e,t,a,d){let i=rk(e);return 1===i?this.unsafeLadder(e,t,d):this.wNAFUnsafe(i,this.getPrecomputes(i,e,a),t,d)},setWindowSize(e,a){rE(a,t),r_.set(e,a),rA.delete(e)}}}function rD(e,t,a,d){(function(e,t){if(!Array.isArray(e))throw Error("array expected");e.forEach((e,a)=>{if(!(e instanceof t))throw Error("invalid point at index "+a)})})(a,e),function(e,t){if(!Array.isArray(e))throw Error("array of scalars expected");e.forEach((e,a)=>{if(!t.isValid(e))throw Error("invalid scalar at index "+a)})}(d,t);let i=a.length,p=d.length;if(i!==p)throw Error("arrays of points and scalars must have equal length");let r=e.ZERO,n=function(e){let t;for(t=0;e>pY;e>>=pX,t+=1);return t}(BigInt(i)),s=1;n>12?s=n-3:n>4?s=n-2:n>0&&(s=2);let o=p8(s),l=Array(Number(o)+1).fill(r),m=Math.floor((t.BITS-1)/s)*s,u=r;for(let e=m;e>=0;e-=s){l.fill(r);for(let t=0;t<p;t++){let i=Number(d[t]>>BigInt(e)&o);l[i]=l[i].add(a[t])}let t=r;for(let e=l.length-1,a=r;e>0;e--)a=a.add(l[e]),t=t.add(a);if(u=u.add(t),0!==e)for(let e=0;e<s;e++)u=u.double()}return u}function rP(e,t){if(!t)return rx(e);if(t.ORDER!==e)throw Error("Field.ORDER must match order: Fp == p, Fn == n");return p5(t,rf.reduce((e,t)=>(e[t]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"})),t}function rO(e,t,a={}){if(!t||"object"!=typeof t)throw Error(`expected valid ${e} CURVE object`);for(let e of["p","n","h"]){let a=t[e];if(!("bigint"==typeof a&&a>rg))throw Error(`CURVE.${e} must be positive bigint`)}let d=rP(t.p,a.Fp),i=rP(t.n,a.Fn);for(let a of["Gx","Gy","a","weierstrass"===e?"b":"d"])if(!d.isValid(t[a]))throw Error(`CURVE.${a} must be valid field element of CURVE.Fp`);return{Fp:d,Fn:i}}let rV=BigInt(0),rR=BigInt(1),rM=BigInt(2),rC=BigInt(8),rL={zip215:!0};BigInt(0);let rU=BigInt(1),rF=BigInt(2);BigInt(3);let rz=BigInt(5),rK=BigInt(8),rH={p:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:rK,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")},rj=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),rq=rx(rH.p,void 0,!0),r$=function(e){let{CURVE:t,curveOpts:a,eddsaOpts:d}=function(e){let t={a:e.a,d:e.d,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy},a={Fp:e.Fp,Fn:rx(t.n,e.nBitLength,!0),uvRatio:e.uvRatio};return{CURVE:t,curveOpts:a,eddsaOpts:{hash:e.hash,randomBytes:e.randomBytes,adjustScalarBytes:e.adjustScalarBytes,domain:e.domain,prehash:e.prehash,mapToCurve:e.mapToCurve}}}(e),i=function(e,t){p5(t,{hash:"function"},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});let{prehash:a,hash:d}=t,{BASE:i,Fp:p,Fn:r}=e,n=r.ORDER,s=t.randomBytes||ph,o=t.adjustScalarBytes||(e=>e),l=t.domain||((e,t,a)=>{if(pJ("phflag",a),t.length||a)throw Error("Contexts/pre-hash are not supported");return e});function m(e){var t;return t=p0(e),r.create(t)}function u(e){let{head:t,prefix:a,scalar:r}=function(e){let t=p.BYTES;e=p4("private key",e,t);let a=p4("hashed private key",d(e),2*t),i=o(a.slice(0,t)),r=a.slice(t,2*t),n=m(i);return{head:i,prefix:r,scalar:n}}(e),n=i.multiply(r),s=n.toBytes();return{head:t,prefix:a,scalar:r,point:n,pointBytes:s}}function f(e=Uint8Array.of(),...t){return m(d(l(pu(...t),p4("context",e),!!a)))}return i.precompute(8),{getPublicKey:function(e){return u(e).pointBytes},sign:function(e,t,d={}){var s;e=p4("message",e),a&&(e=a(e));let{prefix:o,scalar:l,pointBytes:m}=u(t),c=f(d.context,o,e),h=i.multiply(c).toBytes(),x=(s=c+f(d.context,h,m,e)*l,r.create(s));p9("signature.s",x,rV,n);let b=p.BYTES;return p4("result",pu(h,p6(x,b)),2*b)},verify:function(t,d,r,n=rL){let s,o,l,{context:m,zip215:u}=n,c=p.BYTES;t=p4("signature",t,2*c),d=p4("message",d),r=p4("publicKey",r,c),void 0!==u&&pJ("zip215",u),a&&(d=a(d));let h=p0(t.slice(c,2*c));try{s=e.fromHex(r,u),o=e.fromHex(t.slice(0,c),u),l=i.multiplyUnsafe(h)}catch(e){return!1}if(!u&&s.isSmallOrder())return!1;let x=f(m,o.toBytes(),s.toBytes(),d);return o.add(s.multiplyUnsafe(x)).subtract(l).clearCofactor().is0()},utils:{getExtendedPublicKey:u,randomPrivateKey:()=>s(p.BYTES),precompute:(t=8,a=e.BASE)=>a.precompute(t,!1)},Point:e}}(function(e,t={}){let{Fp:a,Fn:d}=rO("edwards",e,t),{h:i,n:p}=e;p5(t,{},{uvRatio:"function"});let r=rM<<BigInt(8*d.BYTES)-rR,n=e=>a.create(e),s=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:a.sqrt(a.div(e,t))}}catch(e){return{isValid:!1,value:rV}}});if(!function(e,t,a,d){let i=e.sqr(a),p=e.sqr(d),r=e.add(e.mul(t.a,i),p),n=e.add(e.ONE,e.mul(t.d,e.mul(i,p)));return e.eql(r,n)}(a,e,e.Gx,e.Gy))throw Error("bad curve params: generator point");function o(e,t,a=!1){return p9("coordinate "+e,t,a?rR:rV,r),t}function l(e){if(!(e instanceof f))throw Error("ExtendedPoint expected")}let m=p7((e,t)=>{let{ex:d,ey:i,ez:p}=e,r=e.is0();null==t&&(t=r?rC:a.inv(p));let s=n(d*t),o=n(i*t),l=n(p*t);if(r)return{x:rV,y:rR};if(l!==rR)throw Error("invZ was invalid");return{x:s,y:o}}),u=p7(t=>{let{a,d}=e;if(t.is0())throw Error("bad point: ZERO");let{ex:i,ey:p,ez:r,et:s}=t,o=n(i*i),l=n(p*p),m=n(r*r),u=n(m*m),f=n(o*a);if(n(m*n(f+l))!==n(u+n(d*n(o*l))))throw Error("bad point: equation left != right (1)");if(n(i*p)!==n(r*s))throw Error("bad point: equation left != right (2)");return!0});class f{constructor(e,t,a,d){this.ex=o("x",e),this.ey=o("y",t),this.ez=o("z",a,!0),this.et=o("t",d),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof f)throw Error("extended point not allowed");let{x:t,y:a}=e||{};return o("x",t),o("y",a),new f(t,a,rR,n(t*a))}static normalizeZ(e){return rS(f,"ez",e)}static msm(e,t){return rD(f,d,e,t)}_setWindowSize(e){this.precompute(e)}precompute(e=8,t=!0){return c.setWindowSize(this,e),t||this.multiply(rM),this}assertValidity(){u(this)}equals(e){l(e);let{ex:t,ey:a,ez:d}=this,{ex:i,ey:p,ez:r}=e,s=n(t*r),o=n(i*d),m=n(a*r),u=n(p*d);return s===o&&m===u}is0(){return this.equals(f.ZERO)}negate(){return new f(n(-this.ex),this.ey,this.ez,n(-this.et))}double(){let{a:t}=e,{ex:a,ey:d,ez:i}=this,p=n(a*a),r=n(d*d),s=n(rM*n(i*i)),o=n(t*p),l=a+d,m=n(n(l*l)-p-r),u=o+r,c=u-s,h=o-r,x=n(m*c),b=n(u*h),v=n(m*h);return new f(x,b,n(c*u),v)}add(t){l(t);let{a,d}=e,{ex:i,ey:p,ez:r,et:s}=this,{ex:o,ey:m,ez:u,et:c}=t,h=n(i*o),x=n(p*m),b=n(s*d*c),v=n(r*u),g=n((i+p)*(o+m)-h-x),y=v-b,w=v+b,S=n(x-a*h),E=n(g*y),N=n(w*S),T=n(g*S);return new f(E,N,n(y*w),T)}subtract(e){return this.add(e.negate())}multiply(e){p9("scalar",e,rR,p);let{p:t,f:a}=c.wNAFCached(this,e,f.normalizeZ);return f.normalizeZ([t,a])[0]}multiplyUnsafe(e,t=f.ZERO){return(p9("scalar",e,rV,p),e===rV)?f.ZERO:this.is0()||e===rR?this:c.wNAFCachedUnsafe(this,e,f.normalizeZ,t)}isSmallOrder(){return this.multiplyUnsafe(i).is0()}isTorsionFree(){return c.wNAFCachedUnsafe(this,p).is0()}toAffine(e){return m(this,e)}clearCofactor(){return i===rR?this:this.multiplyUnsafe(i)}static fromBytes(e,t=!1){return i5(e),this.fromHex(e,t)}static fromHex(t,d=!1){let{d:i,a:p}=e,o=a.BYTES;t=p4("pointHex",t,o),pJ("zip215",d);let l=t.slice(),m=t[o-1];l[o-1]=-129&m;let u=p0(l);p9("pointHex.y",u,rV,d?r:a.ORDER);let c=n(u*u),{isValid:h,value:x}=s(n(c-rR),n(i*c-p));if(!h)throw Error("Point.fromHex: invalid y coordinate");let b=(x&rR)===rR,v=(128&m)!=0;if(!d&&x===rV&&v)throw Error("Point.fromHex: x=0 and x_0=1");return v!==b&&(x=n(-x)),f.fromAffine({x,y:u})}static fromPrivateScalar(e){return f.BASE.multiply(e)}toBytes(){let{x:e,y:t}=this.toAffine(),d=p6(t,a.BYTES);return d[d.length-1]|=e&rR?128:0,d}toRawBytes(){return this.toBytes()}toHex(){return pn(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}f.BASE=new f(e.Gx,e.Gy,rR,n(e.Gx*e.Gy)),f.ZERO=new f(rV,rR,rR,rV),f.Fp=a,f.Fn=d;let c=rB(f,8*d.BYTES);return f}(t,a),d);return Object.assign({},i,{ExtendedPoint:i.Point,CURVE:e})}({...rH,Fp:rq,hash:pZ,adjustScalarBytes:function(e){return e[0]&=248,e[31]&=127,e[31]|=64,e},uvRatio:function(e,t){let a=rH.p,d=rn(t*t*t,a),i=function(e){let t=BigInt(10),a=BigInt(20),d=BigInt(40),i=BigInt(80),p=rH.p,r=e*e%p*e%p,n=rs(r,rF,p)*r%p,s=rs(n,rU,p)*e%p,o=rs(s,rz,p)*s%p,l=rs(o,t,p)*o%p,m=rs(l,a,p)*l%p,u=rs(m,d,p)*m%p,f=rs(u,i,p)*u%p,c=rs(f,i,p)*u%p,h=rs(c,t,p)*o%p;return{pow_p_5_8:rs(h,rF,p)*e%p,b2:r}}(e*rn(d*d*t,a)).pow_p_5_8,p=rn(e*d*i,a),r=rn(t*p*p,a),n=p,s=rn(p*rj,a),o=r===e,l=r===rn(-e,a),m=r===rn(-e*rj,a);return o&&(p=n),(l||m)&&(p=s),ru(p,a)&&(p=rn(-p,a)),{isValid:o||l,value:p}}});var rW=a(3778),rG=a.n(rW),rZ=a(7944),rY=a.n(rZ),rX=a(9248),rJ=a(4798),rQ=a(7851);let r1=require("util");var r0=a.n(r1);let r2=require("http");var r6=a.n(r2);let r4=require("https");var r3=a.n(r4);class r9 extends TypeError{constructor(e,t){let a,{message:d,...i}=e,{path:p}=e;super(0===p.length?d:"At path: "+p.join(".")+" -- "+d),Object.assign(this,i),this.name=this.constructor.name,this.failures=()=>{var d;return null!=(d=a)?d:a=[e,...t()]}}}function r8(e){return"object"==typeof e&&null!=e}function r5(e){return"string"==typeof e?JSON.stringify(e):""+e}function*r7(e,t,a,d){var i;for(let p of(r8(i=e)&&"function"==typeof i[Symbol.iterator]||(e=[e]),e)){let e=function(e,t,a,d){if(!0===e)return;!1===e?e={}:"string"==typeof e&&(e={message:e});let{path:i,branch:p}=t,{type:r}=a,{refinement:n,message:s="Expected a value of type `"+r+"`"+(n?" with refinement `"+n+"`":"")+", but received: `"+r5(d)+"`"}=e;return{value:d,type:r,refinement:n,key:i[i.length-1],path:i,branch:p,...e,message:s}}(p,t,a,d);e&&(yield e)}}function*ne(e,t,a={}){let{path:d=[],branch:i=[e],coerce:p=!1,mask:r=!1}=a,n={path:d,branch:i};if(p&&(e=t.coercer(e,n),r&&"type"!==t.type&&r8(t.schema)&&r8(e)&&!Array.isArray(e)))for(let a in e)void 0===t.schema[a]&&delete e[a];let s=!0;for(let a of t.validator(e,n))s=!1,yield[a,void 0];for(let[a,o,l]of t.entries(e,n))for(let t of ne(o,l,{path:void 0===a?d:[...d,a],branch:void 0===a?i:[...i,o],coerce:p,mask:r}))t[0]?(s=!1,yield[t[0],void 0]):p&&(o=t[1],void 0===a?e=o:e instanceof Map?e.set(a,o):e instanceof Set?e.add(o):r8(e)&&(e[a]=o));if(s)for(let a of t.refiner(e,n))s=!1,yield[a,void 0];s&&(yield[void 0,e])}class nt{constructor(e){let{type:t,schema:a,validator:d,refiner:i,coercer:p=e=>e,entries:r=function*(){}}=e;this.type=t,this.schema=a,this.entries=r,this.coercer=p,d?this.validator=(e,t)=>r7(d(e,t),t,this,e):this.validator=()=>[],i?this.refiner=(e,t)=>r7(i(e,t),t,this,e):this.refiner=()=>[]}assert(e){var t=e,a=this;let d=nd(t,a);if(d[0])throw d[0]}create(e){return na(e,this)}is(e){var t,a;return t=e,a=this,!nd(t,a)[0]}mask(e){var t=e,a=this;let d=nd(t,a,{coerce:!0,mask:!0});if(!d[0])return d[1];throw d[0]}validate(e,t={}){return nd(e,this,t)}}function na(e,t){let a=nd(e,t,{coerce:!0});if(!a[0])return a[1];throw a[0]}function nd(e,t,a={}){let d=ne(e,t,a),i=function(e){let{done:t,value:a}=e.next();return t?void 0:a}(d);return i[0]?[new r9(i[0],function*(){for(let e of d)e[0]&&(yield e[0])}),void 0]:[void 0,i[1]]}function ni(e,t){return new nt({type:e,schema:null,validator:t})}function np(e){return new nt({type:"array",schema:e,*entries(t){if(e&&Array.isArray(t))for(let[a,d]of t.entries())yield[a,d,e]},coercer:e=>Array.isArray(e)?e.slice():e,validator:e=>Array.isArray(e)||"Expected an array value, but received: "+r5(e)})}function nr(){return ni("boolean",e=>"boolean"==typeof e)}function nn(e){return ni("instance",t=>t instanceof e||"Expected a `"+e.name+"` instance, but received: "+r5(t))}function ns(e){let t=r5(e),a=typeof e;return new nt({type:"literal",schema:"string"===a||"number"===a||"boolean"===a?e:null,validator:a=>a===e||"Expected the literal `"+t+"`, but received: "+r5(a)})}function no(){return ni("never",()=>!1)}function nl(e){return new nt({...e,validator:(t,a)=>null===t||e.validator(t,a),refiner:(t,a)=>null===t||e.refiner(t,a)})}function nm(){return ni("number",e=>"number"==typeof e&&!isNaN(e)||"Expected a number, but received: "+r5(e))}function nu(e){return new nt({...e,validator:(t,a)=>void 0===t||e.validator(t,a),refiner:(t,a)=>void 0===t||e.refiner(t,a)})}function nf(e,t){return new nt({type:"record",schema:null,*entries(a){if(r8(a))for(let d in a){let i=a[d];yield[d,d,e],yield[d,i,t]}},validator:e=>r8(e)||"Expected an object, but received: "+r5(e)})}function nc(){return ni("string",e=>"string"==typeof e||"Expected a string, but received: "+r5(e))}function nh(e){let t=no();return new nt({type:"tuple",schema:null,*entries(a){if(Array.isArray(a)){let d=Math.max(e.length,a.length);for(let i=0;i<d;i++)yield[i,a[i],e[i]||t]}},validator:e=>Array.isArray(e)||"Expected an array, but received: "+r5(e)})}function nx(e){let t=Object.keys(e);return new nt({type:"type",schema:e,*entries(a){if(r8(a))for(let d of t)yield[d,a[d],e[d]]},validator:e=>r8(e)||"Expected an object, but received: "+r5(e)})}function nb(e){let t=e.map(e=>e.type).join(" | ");return new nt({type:"union",schema:null,validator(a,d){let i=[];for(let t of e){let[...e]=ne(a,t,d),[p]=e;if(!p[0])return[];for(let[t]of e)t&&i.push(t)}return["Expected the value to satisfy a union of `"+t+"`, but received: "+r5(a),...i]}})}function nv(){return ni("unknown",()=>!0)}function ng(e,t,a){return new nt({...e,coercer:(d,i)=>nd(d,t)[0]?e.coercer(d,i):e.coercer(a(d,i),i)})}a(9466);let ny=require("stream"),nw=require("url");var nS=a(3154);let nE=require("zlib"),nN=ny.Readable,nT=Symbol("buffer"),nA=Symbol("type");class n_{constructor(){this[nA]="";let e=arguments[0],t=arguments[1],a=[];if(e){let t=Number(e.length);for(let d=0;d<t;d++){let t,i=e[d];(t=i instanceof Buffer?i:ArrayBuffer.isView(i)?Buffer.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?Buffer.from(i):i instanceof n_?i[nT]:Buffer.from("string"==typeof i?i:String(i))).length,a.push(t)}}this[nT]=Buffer.concat(a);let d=t&&void 0!==t.type&&String(t.type).toLowerCase();d&&!/[^\u0020-\u007E]/.test(d)&&(this[nA]=d)}get size(){return this[nT].length}get type(){return this[nA]}text(){return Promise.resolve(this[nT].toString())}arrayBuffer(){let e=this[nT];return Promise.resolve(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength))}stream(){let e=new nN;return e._read=function(){},e.push(this[nT]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e,t,a=this.size,d=arguments[0],i=arguments[1];e=void 0===d?0:d<0?Math.max(a+d,0):Math.min(d,a);let p=Math.max((void 0===i?a:i<0?Math.max(a+i,0):Math.min(i,a))-e,0),r=this[nT].slice(e,e+p),n=new n_([],{type:arguments[2]});return n[nT]=r,n}}function nk(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(n_.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(n_.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),nk.prototype=Object.create(Error.prototype),nk.prototype.constructor=nk,nk.prototype.name="FetchError";try{d=require("encoding").convert}catch(e){}let nI=Symbol("Body internals"),nB=ny.PassThrough;function nD(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=a.size,i=a.timeout;null==e?e=null:nO(e)?e=Buffer.from(e.toString()):nV(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof ny||(e=Buffer.from(String(e)))),this[nI]={body:e,disturbed:!1,error:null},this.size=void 0===d?0:d,this.timeout=void 0===i?0:i,e instanceof ny&&e.on("error",function(e){let a="AbortError"===e.name?e:new nk(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[nI].error=a})}function nP(){var e=this;if(this[nI].disturbed)return nD.Promise.reject(TypeError(`body used already for: ${this.url}`));if(this[nI].disturbed=!0,this[nI].error)return nD.Promise.reject(this[nI].error);let t=this.body;if(null===t)return nD.Promise.resolve(Buffer.alloc(0));if(nV(t)&&(t=t.stream()),Buffer.isBuffer(t))return nD.Promise.resolve(t);if(!(t instanceof ny))return nD.Promise.resolve(Buffer.alloc(0));let a=[],d=0,i=!1;return new nD.Promise(function(p,r){let n;e.timeout&&(n=setTimeout(function(){i=!0,r(new nk(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(t){"AbortError"===t.name?(i=!0,r(t)):r(new nk(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}),t.on("data",function(t){if(!i&&null!==t){if(e.size&&d+t.length>e.size){i=!0,r(new nk(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}d+=t.length,a.push(t)}}),t.on("end",function(){if(!i){clearTimeout(n);try{p(Buffer.concat(a,d))}catch(t){r(new nk(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}})})}function nO(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function nV(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function nR(e){let t,a,d=e.body;if(e.bodyUsed)throw Error("cannot clone body after it is used");return d instanceof ny&&"function"!=typeof d.getBoundary&&(t=new nB,a=new nB,d.pipe(t),d.pipe(a),e[nI].body=t,d=a),d}function nM(e){if(null===e)return null;if("string"==typeof e)return"text/plain;charset=UTF-8";if(nO(e))return"application/x-www-form-urlencoded;charset=UTF-8";if(nV(e))return e.type||null;if(Buffer.isBuffer(e))return null;else if("[object ArrayBuffer]"===Object.prototype.toString.call(e))return null;else if(ArrayBuffer.isView(e))return null;else if("function"==typeof e.getBoundary)return`multipart/form-data;boundary=${e.getBoundary()}`;else if(e instanceof ny)return null;else return"text/plain;charset=UTF-8"}function nC(e){let t=e.body;return null===t?0:nV(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync?t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength()?t.getLengthSync():null:null}nD.prototype={get body(){return this[nI].body},get bodyUsed(){return this[nI].disturbed},arrayBuffer(){return nP.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return nP.call(this).then(function(t){return Object.assign(new n_([],{type:e.toLowerCase()}),{[nT]:t})})},json(){var e=this;return nP.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return nD.Promise.reject(new nk(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return nP.call(this).then(function(e){return e.toString()})},buffer(){return nP.call(this)},textConverted(){var e=this;return nP.call(this).then(function(t){return function(e,t){let a,i;if("function"!=typeof d)throw Error("The package `encoding` must be installed to use the textConverted() function");let p=t.get("content-type"),r="utf-8";return p&&(a=/charset=([^;]*)/i.exec(p)),i=e.slice(0,1024).toString(),!a&&i&&(a=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!a&&i&&(!(a=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i))&&(a=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i))&&a.pop(),a&&(a=/charset=(.*)/i.exec(a.pop()))),!a&&i&&(a=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),a&&("gb2312"===(r=a.pop())||"gbk"===r)&&(r="gb18030"),d(e,"UTF-8",r).toString()}(t,e.headers)})}},Object.defineProperties(nD.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),nD.mixIn=function(e){for(let t of Object.getOwnPropertyNames(nD.prototype))if(!(t in e)){let a=Object.getOwnPropertyDescriptor(nD.prototype,t);Object.defineProperty(e,t,a)}},nD.Promise=global.Promise;let nL=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,nU=/[^\t\x20-\x7e\x80-\xff]/;function nF(e){if(e=`${e}`,nL.test(e)||""===e)throw TypeError(`${e} is not a legal HTTP header name`)}function nz(e){if(e=`${e}`,nU.test(e))throw TypeError(`${e} is not a legal HTTP header value`)}function nK(e,t){for(let a in t=t.toLowerCase(),e)if(a.toLowerCase()===t)return a}let nH=Symbol("map");class nj{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[nH]=Object.create(null),e instanceof nj){let t=e.raw();for(let e of Object.keys(t))for(let a of t[e])this.append(e,a);return}if(null==e);else if("object"==typeof e){let t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw TypeError("Header pairs must be iterable");let a=[];for(let t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(let e of a){if(2!==e.length)throw TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(let t of Object.keys(e)){let a=e[t];this.append(t,a)}}else throw TypeError("Provided initializer must be an object")}get(e){nF(e=`${e}`);let t=nK(this[nH],e);return void 0===t?null:this[nH][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=nq(this),d=0;for(;d<a.length;){var i=a[d];let p=i[0],r=i[1];e.call(t,r,p,this),a=nq(this),d++}}set(e,t){e=`${e}`,t=`${t}`,nF(e),nz(t);let a=nK(this[nH],e);this[nH][void 0!==a?a:e]=[t]}append(e,t){e=`${e}`,t=`${t}`,nF(e),nz(t);let a=nK(this[nH],e);void 0!==a?this[nH][a].push(t):this[nH][e]=[t]}has(e){return nF(e=`${e}`),void 0!==nK(this[nH],e)}delete(e){nF(e=`${e}`);let t=nK(this[nH],e);void 0!==t&&delete this[nH][t]}raw(){return this[nH]}keys(){return nW(this,"key")}values(){return nW(this,"value")}[Symbol.iterator](){return nW(this,"key+value")}}function nq(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[nH]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[nH][t].join(", ")}:function(t){return[t.toLowerCase(),e[nH][t].join(", ")]})}nj.prototype.entries=nj.prototype[Symbol.iterator],Object.defineProperty(nj.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(nj.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});let n$=Symbol("internal");function nW(e,t){let a=Object.create(nG);return a[n$]={target:e,kind:t,index:0},a}let nG=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==nG)throw TypeError("Value of `this` is not a HeadersIterator");var e=this[n$];let t=e.target,a=e.kind,d=e.index,i=nq(t,a);return d>=i.length?{value:void 0,done:!0}:(this[n$].index=d+1,{value:i[d],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(nG,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});let nZ=Symbol("Response internals"),nY=r2.STATUS_CODES;class nX{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};nD.call(this,e,t);let a=t.status||200,d=new nj(t.headers);if(null!=e&&!d.has("Content-Type")){let t=nM(e);t&&d.append("Content-Type",t)}this[nZ]={url:t.url,status:a,statusText:t.statusText||nY[a],headers:d,counter:t.counter}}get url(){return this[nZ].url||""}get status(){return this[nZ].status}get ok(){return this[nZ].status>=200&&this[nZ].status<300}get redirected(){return this[nZ].counter>0}get statusText(){return this[nZ].statusText}get headers(){return this[nZ].headers}clone(){return new nX(nR(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}nD.mixIn(nX.prototype),Object.defineProperties(nX.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(nX.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});let nJ=Symbol("Request internals"),nQ=nw.URL||nS.URL,n1=nw.parse,n0=nw.format;function n2(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new nQ(e).toString()),n1(e)}let n6="destroy"in ny.Readable.prototype;function n4(e){return"object"==typeof e&&"object"==typeof e[nJ]}class n3{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};n4(e)?t=n2(e.url):(t=e&&e.href?n2(e.href):n2(`${e}`),e={});let d=a.method||e.method||"GET";if(d=d.toUpperCase(),(null!=a.body||n4(e)&&null!==e.body)&&("GET"===d||"HEAD"===d))throw TypeError("Request with GET/HEAD method cannot have body");let i=null!=a.body?a.body:n4(e)&&null!==e.body?nR(e):null;nD.call(this,i,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});let p=new nj(a.headers||e.headers||{});if(null!=i&&!p.has("Content-Type")){let e=nM(i);e&&p.append("Content-Type",e)}let r=n4(e)?e.signal:null;if("signal"in a&&(r=a.signal),null!=r&&!function(e){let t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!!(t&&"AbortSignal"===t.constructor.name)}(r))throw TypeError("Expected signal to be an instanceof AbortSignal");this[nJ]={method:d,redirect:a.redirect||e.redirect||"follow",headers:p,parsedURL:t,signal:r},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[nJ].method}get url(){return n0(this[nJ].parsedURL)}get headers(){return this[nJ].headers}get redirect(){return this[nJ].redirect}get signal(){return this[nJ].signal}clone(){return new n3(this)}}function n9(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}nD.mixIn(n3.prototype),Object.defineProperty(n3.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(n3.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),n9.prototype=Object.create(Error.prototype),n9.prototype.constructor=n9,n9.prototype.name="AbortError";let n8=nw.URL||nS.URL,n5=ny.PassThrough,n7=function(e,t){let a=new n8(t).hostname,d=new n8(e).hostname;return a===d||"."===a[a.length-d.length-1]&&a.endsWith(d)};function se(e,t){if(!se.Promise)throw Error("native promise missing, set fetch.Promise to your favorite alternative");return nD.Promise=se.Promise,new se.Promise(function(a,d){var i,p;let r,n,s=new n3(e,t),o=function(e){let t=e[nJ].parsedURL,a=new nj(e[nJ].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof ny.Readable&&!n6)throw Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let d=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(d="0"),null!=e.body){let t=nC(e);"number"==typeof t&&(d=String(t))}d&&a.set("Content-Length",d),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),Object.assign({},t,{method:e.method,headers:function(e){let t=Object.assign({__proto__:null},e[nH]),a=nK(e[nH],"Host");return void 0!==a&&(t[a]=t[a][0]),t}(a),agent:i})}(s),l=("https:"===o.protocol?r4:r2).request,m=s.signal,u=null,f=function(){let e=new n9("The user aborted a request.");d(e),s.body&&s.body instanceof ny.Readable&&st(s.body,e),u&&u.body&&u.body.emit("error",e)};if(m&&m.aborted)return void f();let c=function(){f(),x()},h=l(o);function x(){h.abort(),m&&m.removeEventListener("abort",c),clearTimeout(r)}m&&m.addEventListener("abort",c),s.timeout&&h.once("socket",function(e){r=setTimeout(function(){d(new nk(`network timeout at: ${s.url}`,"request-timeout")),x()},s.timeout)}),h.on("error",function(e){d(new nk(`request to ${s.url} failed, reason: ${e.message}`,"system",e)),u&&u.body&&st(u.body,e),x()}),i=h,p=function(e){(!m||!m.aborted)&&u&&u.body&&st(u.body,e)},i.on("socket",function(e){n=e}),i.on("response",function(e){let t=e.headers;"chunked"!==t["transfer-encoding"]||t["content-length"]||e.once("close",function(e){if(n&&n.listenerCount("data")>0&&!e){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",p(e)}})}),14>parseInt(process.version.substring(1))&&h.on("socket",function(e){e.addListener("close",function(t){let a=e.listenerCount("data")>0;if(u&&a&&!t&&!(m&&m.aborted)){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",u.body.emit("error",e)}})}),h.on("response",function(e){clearTimeout(r);let t=function(e){let t=new nj;for(let a of Object.keys(e))if(!nL.test(a))if(Array.isArray(e[a]))for(let d of e[a])nU.test(d)||(void 0===t[nH][a]?t[nH][a]=[d]:t[nH][a].push(d));else nU.test(e[a])||(t[nH][a]=[e[a]]);return t}(e.headers);if(se.isRedirect(e.statusCode)){let p=t.get("Location"),r=null;try{r=null===p?null:new n8(p,s.url).toString()}catch(e){if("manual"!==s.redirect){d(new nk(`uri requested responds with an invalid redirect URL: ${p}`,"invalid-redirect")),x();return}}switch(s.redirect){case"error":d(new nk(`uri requested responds with a redirect, redirect mode is set to error: ${s.url}`,"no-redirect")),x();return;case"manual":if(null!==r)try{t.set("Location",r)}catch(e){d(e)}break;case"follow":var i;if(null===r)break;if(s.counter>=s.follow){d(new nk(`maximum redirect reached at: ${s.url}`,"max-redirect")),x();return}let n={headers:new nj(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout,size:s.size};if(!n7(s.url,r)||(i=s.url,new n8(r).protocol!==new n8(i).protocol))for(let e of["authorization","www-authenticate","cookie","cookie2"])n.headers.delete(e);if(303!==e.statusCode&&s.body&&null===nC(s)){d(new nk("Cannot follow redirect with body being a readable stream","unsupported-redirect")),x();return}(303===e.statusCode||(301===e.statusCode||302===e.statusCode)&&"POST"===s.method)&&(n.method="GET",n.body=void 0,n.headers.delete("content-length")),a(se(new n3(r,n))),x();return}}e.once("end",function(){m&&m.removeEventListener("abort",c)});let p=e.pipe(new n5),n={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:s.size,timeout:s.timeout,counter:s.counter},o=t.get("Content-Encoding");if(!s.compress||"HEAD"===s.method||null===o||204===e.statusCode||304===e.statusCode)return void a(u=new nX(p,n));let l={flush:nE.Z_SYNC_FLUSH,finishFlush:nE.Z_SYNC_FLUSH};if("gzip"==o||"x-gzip"==o)return void a(u=new nX(p=p.pipe(nE.createGunzip(l)),n));if("deflate"==o||"x-deflate"==o){let t=e.pipe(new n5);t.once("data",function(e){a(u=new nX(p=(15&e[0])==8?p.pipe(nE.createInflate()):p.pipe(nE.createInflateRaw()),n))}),t.on("end",function(){u||a(u=new nX(p,n))});return}if("br"==o&&"function"==typeof nE.createBrotliDecompress)return void a(u=new nX(p=p.pipe(nE.createBrotliDecompress()),n));a(u=new nX(p,n))});let b=s.body;null===b?h.end():nV(b)?b.stream().pipe(h):Buffer.isBuffer(b)?(h.write(b),h.end()):b.pipe(h)})}function st(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}se.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},se.Promise=global.Promise;let sa=BigInt(0),sd=BigInt(1),si=BigInt(2),sp=BigInt(7),sr=BigInt(256),sn=BigInt(113),ss=[],so=[],sl=[];for(let e=0,t=sd,a=1,d=0;e<24;e++){[a,d]=[d,(2*a+3*d)%5],ss.push(2*(5*d+a)),so.push((e+1)*(e+2)/2%64);let i=sa;for(let e=0;e<7;e++)(t=(t<<sd^(t>>sp)*sn)%sr)&si&&(i^=sd<<(sd<<BigInt(e))-sd);sl.push(i)}let sm=pw(sl,!0),su=sm[0],sf=sm[1],sc=(e,t,a)=>a>32?pB(e,t,a):pk(e,t,a),sh=(e,t,a)=>a>32?pD(e,t,a):pI(e,t,a);class sx extends pf{constructor(e,t,a,d=!1,i=24){if(super(),this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,this.enableXOF=!1,this.blockLen=e,this.suffix=t,this.outputLen=a,this.enableXOF=d,this.rounds=i,i8(a),!(0<e&&e<200))throw Error("only keccak-f1600 function is supported");this.state=new Uint8Array(200),this.state32=function(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))}(this.state)}clone(){return this._cloneInto()}keccak(){pi(this.state32),function(e,t=24){let a=new Uint32Array(10);for(let d=24-t;d<24;d++){for(let t=0;t<10;t++)a[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){let d=(t+8)%10,i=(t+2)%10,p=a[i],r=a[i+1],n=sc(p,r,1)^a[d],s=sh(p,r,1)^a[d+1];for(let a=0;a<50;a+=10)e[t+a]^=n,e[t+a+1]^=s}let t=e[2],i=e[3];for(let a=0;a<24;a++){let d=so[a],p=sc(t,i,d),r=sh(t,i,d),n=ss[a];t=e[n],i=e[n+1],e[n]=p,e[n+1]=r}for(let t=0;t<50;t+=10){for(let d=0;d<10;d++)a[d]=e[t+d];for(let d=0;d<10;d++)e[t+d]^=~a[(d+2)%10]&a[(d+4)%10]}e[0]^=su[d],e[1]^=sf[d]}pt(a)}(this.state32,this.rounds),pi(this.state32),this.posOut=0,this.pos=0}update(e){i7(this),i5(e=pm(e));let{blockLen:t,state:a}=this,d=e.length;for(let i=0;i<d;){let p=Math.min(t-this.pos,d-i);for(let t=0;t<p;t++)a[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:t,pos:a,blockLen:d}=this;e[a]^=t,(128&t)!=0&&a===d-1&&this.keccak(),e[d-1]^=128,this.keccak()}writeInto(e){i7(this,!1),i5(e),this.finish();let t=this.state,{blockLen:a}=this;for(let d=0,i=e.length;d<i;){this.posOut>=a&&this.keccak();let p=Math.min(a-this.posOut,i-d);e.set(t.subarray(this.posOut,this.posOut+p),d),this.posOut+=p,d+=p}return e}xofInto(e){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return i8(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(pe(e,this),this.finished)throw Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,pt(this.state)}_cloneInto(e){let{blockLen:t,suffix:a,outputLen:d,rounds:i,enableXOF:p}=this;return e||(e=new sx(t,a,d,p,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=a,e.outputLen=d,e.enableXOF=p,e.destroyed=this.destroyed,e}}let sb=(p=1,r=136,n=32,pc(()=>new sx(r,p,n)));class sv extends pf{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,function(e){if("function"!=typeof e||"function"!=typeof e.create)throw Error("Hash should be wrapped by utils.createHasher");i8(e.outputLen),i8(e.blockLen)}(e);let a=pm(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let d=this.blockLen,i=new Uint8Array(d);i.set(a.length>d?e.create().update(a).digest():a);for(let e=0;e<i.length;e++)i[e]^=54;this.iHash.update(i),this.oHash=e.create();for(let e=0;e<i.length;e++)i[e]^=106;this.oHash.update(i),pt(i)}update(e){return i7(this),this.iHash.update(e),this}digestInto(e){i7(this),i5(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:a,finished:d,destroyed:i,blockLen:p,outputLen:r}=this;return e.finished=d,e.destroyed=i,e.blockLen=p,e.outputLen=r,e.oHash=t._cloneInto(e.oHash),e.iHash=a._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}let sg=(e,t,a)=>new sv(e,t).update(a).digest();function sy(e){void 0!==e.lowS&&pJ("lowS",e.lowS),void 0!==e.prehash&&pJ("prehash",e.prehash)}sg.create=(e,t)=>new sv(e,t);class sw extends Error{constructor(e=""){super(e)}}let sS={Err:sw,_tlv:{encode:(e,t)=>{let{Err:a}=sS;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(1&t.length)throw new a("tlv.encode: unpadded data");let d=t.length/2,i=pQ(d);if(i.length/2&128)throw new a("tlv.encode: long form length too big");let p=d>127?pQ(i.length/2|128):"";return pQ(e)+p+i+t},decode(e,t){let{Err:a}=sS,d=0;if(e<0||e>256)throw new a("tlv.encode: wrong tag");if(t.length<2||t[d++]!==e)throw new a("tlv.decode: wrong tlv");let i=t[d++],p=0;if(128&i){let e=127&i;if(!e)throw new a("tlv.decode(long): indefinite length not supported");if(e>4)throw new a("tlv.decode(long): byte length is too big");let r=t.subarray(d,d+e);if(r.length!==e)throw new a("tlv.decode: length bytes not complete");if(0===r[0])throw new a("tlv.decode(long): zero leftmost byte");for(let e of r)p=p<<8|e;if(d+=e,p<128)throw new a("tlv.decode(long): not minimal encoding")}else p=i;let r=t.subarray(d,d+p);if(r.length!==p)throw new a("tlv.decode: wrong value length");return{v:r,l:t.subarray(d+p)}}},_int:{encode(e){let{Err:t}=sS;if(e<sE)throw new t("integer: negative integers are not allowed");let a=pQ(e);if(8&Number.parseInt(a[0],16)&&(a="00"+a),1&a.length)throw new t("unexpected DER parsing assertion: unpadded hex");return a},decode(e){let{Err:t}=sS;if(128&e[0])throw new t("invalid signature integer: negative");if(0===e[0]&&!(128&e[1]))throw new t("invalid signature integer: unnecessary leading zero");return p1(pn(e))}},toSig(e){let{Err:t,_int:a,_tlv:d}=sS,i=p4("signature",e),{v:p,l:r}=d.decode(48,i);if(r.length)throw new t("invalid signature: left bytes after parsing");let{v:n,l:s}=d.decode(2,p),{v:o,l:l}=d.decode(2,s);if(l.length)throw new t("invalid signature: left bytes after parsing");return{r:a.decode(n),s:a.decode(o)}},hexFromSig(e){let{_tlv:t,_int:a}=sS,d=t.encode(2,a.encode(e.r)),i=t.encode(2,a.encode(e.s));return t.encode(48,d+i)}},sE=BigInt(0),sN=BigInt(1),sT=BigInt(2),sA=BigInt(3),s_=BigInt(4);function sk(e,t,a){let{BYTES:d}=e;return function(i){let p;if("bigint"==typeof i)p=i;else{let a=p4("private key",i);if(t){if(!t.includes(2*a.length))throw Error("invalid private key");let e=new Uint8Array(d);e.set(a,e.length-a.length),a=e}try{p=e.fromBytes(a)}catch(e){throw Error(`invalid private key: expected ui8a of size ${d}, got ${typeof i}`)}}if(a&&(p=e.create(p)),!e.isValidNot0(p))throw Error("invalid private key: out of range [1..N-1]");return p}}function sI(e){return Uint8Array.of(e?2:3)}let sB={p:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:BigInt(1),a:BigInt(0),b:BigInt(7),Gx:BigInt("0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),Gy:BigInt("0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8")},sD=BigInt(0),sP=BigInt(1),sO=BigInt(2),sV=(e,t)=>(e+t/sO)/t,sR=rx(sB.p,void 0,void 0,{sqrt:function(e){let t=sB.p,a=BigInt(3),d=BigInt(6),i=BigInt(11),p=BigInt(22),r=BigInt(23),n=BigInt(44),s=BigInt(88),o=e*e*e%t,l=o*o*e%t,m=rs(l,a,t)*l%t,u=rs(m,a,t)*l%t,f=rs(u,sO,t)*o%t,c=rs(f,i,t)*f%t,h=rs(c,p,t)*c%t,x=rs(h,n,t)*h%t,b=rs(x,s,t)*x%t,v=rs(b,n,t)*h%t,g=rs(v,a,t)*l%t,y=rs(g,r,t)*c%t,w=rs(y,d,t)*o%t,S=rs(w,sO,t);if(!sR.eql(sR.sqr(S),e))throw Error("Cannot find square root");return S}}),sM=function(e,t){let a=t=>(function(e){let{CURVE:t,curveOpts:a,ecdsaOpts:d}=function(e){let{CURVE:t,curveOpts:a}=function(e){let t={a:e.a,b:e.b,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy},a={Fp:e.Fp,Fn:rx(t.n,e.nBitLength),allowedPrivateKeyLengths:e.allowedPrivateKeyLengths,allowInfinityPoint:e.allowInfinityPoint,endo:e.endo,wrapPrivateKey:e.wrapPrivateKey,isTorsionFree:e.isTorsionFree,clearCofactor:e.clearCofactor,fromBytes:e.fromBytes,toBytes:e.toBytes};return{CURVE:t,curveOpts:a}}(e);return{CURVE:t,curveOpts:a,ecdsaOpts:{hash:e.hash,hmac:e.hmac,randomBytes:e.randomBytes,lowS:e.lowS,bits2int:e.bits2int,bits2int_modN:e.bits2int_modN}}}(e),i=function(e,t,a={}){p5(t,{hash:"function"},{hmac:"function",lowS:"boolean",randomBytes:"function",bits2int:"function",bits2int_modN:"function"});let d=t.randomBytes||ph,i=t.hmac||((e,...a)=>sg(t.hash,e,pu(...a))),{Fp:p,Fn:r}=e,{ORDER:n,BITS:s}=r;function o(e,t){if(!r.isValidNot0(t))throw Error(`invalid signature ${e}: out of range 1..CURVE.n`)}class l{constructor(e,t,a){o("r",e),o("s",t),this.r=e,this.s=t,null!=a&&(this.recovery=a),Object.freeze(this)}static fromCompact(e){let t=r.BYTES,a=p4("compactSignature",e,2*t);return new l(r.fromBytes(a.subarray(0,t)),r.fromBytes(a.subarray(t,2*t)))}static fromDER(e){let{r:t,s:a}=sS.toSig(p4("DER",e));return new l(t,a)}assertValidity(){}addRecoveryBit(e){return new l(this.r,this.s,e)}recoverPublicKey(t){let a=p.ORDER,{r:d,s:i,recovery:s}=this;if(null==s||![0,1,2,3].includes(s))throw Error("recovery id invalid");if(n*sT<a&&s>1)throw Error("recovery id is ambiguous for h>1 curve");let o=2===s||3===s?d+n:d;if(!p.isValid(o))throw Error("recovery id 2 or 3 invalid");let l=p.toBytes(o),m=e.fromHex(pu(sI((1&s)==0),l)),u=r.inv(o),f=c(p4("msgHash",t)),h=r.create(-f*u),x=r.create(i*u),b=e.BASE.multiplyUnsafe(h).add(m.multiplyUnsafe(x));if(b.is0())throw Error("point at infinify");return b.assertValidity(),b}hasHighS(){return this.s>n>>sN}normalizeS(){return this.hasHighS()?new l(this.r,r.neg(this.s),this.recovery):this}toBytes(e){if("compact"===e)return pu(r.toBytes(this.r),r.toBytes(this.s));if("der"===e)return pl(sS.hexFromSig(this));throw Error("invalid format")}toDERRawBytes(){return this.toBytes("der")}toDERHex(){return pn(this.toBytes("der"))}toCompactRawBytes(){return this.toBytes("compact")}toCompactHex(){return pn(this.toBytes("compact"))}}let m=sk(r,a.allowedPrivateKeyLengths,a.wrapPrivateKey);function u(t){if("bigint"==typeof t)return!1;if(t instanceof e)return!0;let d=p4("key",t).length,i=p.BYTES,n=i+1;if(!a.allowedPrivateKeyLengths&&r.BYTES!==n)return d===n||d===2*i+1}let f=t.bits2int||function(e){if(e.length>8192)throw Error("input is too large");let t=p1(pn(e)),a=8*e.length-s;return a>0?t>>BigInt(a):t},c=t.bits2int_modN||function(e){return r.create(f(e))},h=p8(s);function x(e){return p9("num < 2^"+s,e,sE,h),r.toBytes(e)}let b={lowS:t.lowS,prehash:!1},v={lowS:t.lowS,prehash:!1};return e.BASE.precompute(8),Object.freeze({getPublicKey:function(t,a=!0){return e.fromPrivateKey(t).toBytes(a)},getSharedSecret:function(t,a,d=!0){if(!0===u(t))throw Error("first arg must be private key");if(!1===u(a))throw Error("second arg must be public key");return e.fromHex(a).multiply(m(t)).toBytes(d)},sign:function(a,s,o=b){let{seed:u,k2sig:h}=function(a,i,s=b){if(["recovered","canonical"].some(e=>e in s))throw Error("sign() legacy options not supported");let{hash:o}=t,{lowS:u,prehash:h,extraEntropy:v}=s;null==u&&(u=!0),a=p4("msgHash",a),sy(s),h&&(a=p4("prehashed msgHash",o(a)));let g=c(a),y=m(i),w=[x(y),x(g)];if(null!=v&&!1!==v){let e=!0===v?d(p.BYTES):v;w.push(p4("extraEntropy",e))}return{seed:pu(...w),k2sig:function(t){var a;let d=f(t);if(!r.isValidNot0(d))return;let i=r.inv(d),p=e.BASE.multiply(d).toAffine(),s=r.create(p.x);if(s===sE)return;let o=r.create(i*r.create(g+s*y));if(o===sE)return;let m=2*(p.x!==s)|Number(p.y&sN),c=o;return u&&o>n>>sN&&(c=(a=o)>n>>sN?r.neg(a):a,m^=1),new l(s,c,m)}}}(a,s,o);return(function(e,t,a){if("number"!=typeof e||e<2)throw Error("hashLen must be a number");if("number"!=typeof t||t<2)throw Error("qByteLen must be a number");if("function"!=typeof a)throw Error("hmacFn must be a function");let d=e=>new Uint8Array(e),i=e=>Uint8Array.of(e),p=d(e),r=d(e),n=0,s=()=>{p.fill(1),r.fill(0),n=0},o=(...e)=>a(r,p,...e),l=(e=d(0))=>{r=o(i(0),e),p=o(),0!==e.length&&(r=o(i(1),e),p=o())},m=()=>{if(n++>=1e3)throw Error("drbg: tried 1000 values");let e=0,a=[];for(;e<t;){let t=(p=o()).slice();a.push(t),e+=p.length}return pu(...a)};return(e,t)=>{let a;for(s(),l(e);!(a=t(m()));)l();return s(),a}})(t.hash.outputLen,r.BYTES,i)(u,h)},verify:function(a,d,i,p=v){let n,s;d=p4("msgHash",d),i=p4("publicKey",i),sy(p);let{lowS:o,prehash:m,format:u}=p;if("strict"in p)throw Error("options.strict was renamed to lowS");if(void 0!==u&&!["compact","der","js"].includes(u))throw Error('format must be "compact", "der" or "js"');let f="string"==typeof a||i9(a),h=!f&&!u&&"object"==typeof a&&null!==a&&"bigint"==typeof a.r&&"bigint"==typeof a.s;if(!f&&!h)throw Error("invalid signature, expected Uint8Array, hex string or Signature instance");try{if(h)if(void 0===u||"js"===u)s=new l(a.r,a.s);else throw Error("invalid format");if(f){try{"compact"!==u&&(s=l.fromDER(a))}catch(e){if(!(e instanceof sS.Err))throw e}s||"der"===u||(s=l.fromCompact(a))}n=e.fromHex(i)}catch(e){return!1}if(!s||o&&s.hasHighS())return!1;m&&(d=t.hash(d));let{r:x,s:b}=s,g=c(d),y=r.inv(b),w=r.create(g*y),S=r.create(x*y),E=e.BASE.multiplyUnsafe(w).add(n.multiplyUnsafe(S));return!E.is0()&&r.create(E.x)===x},utils:{isValidPrivateKey(e){try{return m(e),!0}catch(e){return!1}},normPrivateKeyToScalar:m,randomPrivateKey:()=>(function(e,t,a=!1){let d=e.length,i=rb(t),p=rv(t);if(d<16||d<p||d>1024)throw Error("expected "+p+"-1024 bytes of input, got "+d);let r=rn(a?p0(e):p1(pn(e)),t-rt)+rt;return a?p6(r,i):p2(r,i)})(d(rv(n)),n),precompute:(t=8,a=e.BASE)=>a.precompute(t,!1)},Point:e,Signature:l})}(function(e,t={}){var a,d,i;let{Fp:p,Fn:r}=rO("weierstrass",e,t),{h:n,n:s}=e;p5(t,{},{allowInfinityPoint:"boolean",clearCofactor:"function",isTorsionFree:"function",fromBytes:"function",toBytes:"function",endo:"object",wrapPrivateKey:"boolean"});let{endo:o}=t;if(o&&(!p.is0(e.a)||"bigint"!=typeof o.beta||"function"!=typeof o.splitScalar))throw Error('invalid endo: expected "beta": bigint and "splitScalar": function');function l(){if(!p.isOdd)throw Error("compression is not supported: Field does not have .isOdd()")}let m=t.toBytes||function(e,t,a){let{x:d,y:i}=t.toAffine(),r=p.toBytes(d);return(pJ("isCompressed",a),a)?(l(),pu(sI(!p.isOdd(i)),r)):pu(Uint8Array.of(4),r,p.toBytes(i))},u=t.fromBytes||function(e){i5(e);let t=p.BYTES,a=t+1,d=2*t+1,i=e.length,r=e[0],n=e.subarray(1);if(i===a&&(2===r||3===r)){let e,t=p.fromBytes(n);if(!p.isValid(t))throw Error("bad point: is not on curve, wrong x");let a=f(t);try{e=p.sqrt(a)}catch(e){throw Error("bad point: is not on curve, sqrt error"+(e instanceof Error?": "+e.message:""))}return l(),(1&r)==1!==p.isOdd(e)&&(e=p.neg(e)),{x:t,y:e}}if(i===d&&4===r){let e=p.fromBytes(n.subarray(0*t,+t)),a=p.fromBytes(n.subarray(+t,2*t));if(!c(e,a))throw Error("bad point: is not on curve");return{x:e,y:a}}throw Error(`bad point: got length ${i}, expected compressed=${a} or uncompressed=${d}`)},f=(a=p,d=e.a,i=e.b,function(e){let t=a.sqr(e),p=a.mul(t,e);return a.add(a.add(p,a.mul(e,d)),i)});function c(e,t){let a=p.sqr(t),d=f(e);return p.eql(a,d)}if(!c(e.Gx,e.Gy))throw Error("bad curve params: generator point");let h=p.mul(p.pow(e.a,sA),s_),x=p.mul(p.sqr(e.b),BigInt(27));if(p.is0(p.add(h,x)))throw Error("bad curve params: a or b");function b(e,t,a=!1){if(!p.isValid(t)||a&&p.is0(t))throw Error(`bad point coordinate ${e}`);return t}function v(e){if(!(e instanceof S))throw Error("ProjectivePoint expected")}let g=p7((e,t)=>{let{px:a,py:d,pz:i}=e;if(p.eql(i,p.ONE))return{x:a,y:d};let r=e.is0();null==t&&(t=r?p.ONE:p.inv(i));let n=p.mul(a,t),s=p.mul(d,t),o=p.mul(i,t);if(r)return{x:p.ZERO,y:p.ZERO};if(!p.eql(o,p.ONE))throw Error("invZ was invalid");return{x:n,y:s}}),y=p7(e=>{if(e.is0()){if(t.allowInfinityPoint&&!p.is0(e.py))return;throw Error("bad point: ZERO")}let{x:a,y:d}=e.toAffine();if(!p.isValid(a)||!p.isValid(d))throw Error("bad point: x or y not field elements");if(!c(a,d))throw Error("bad point: equation left != right");if(!e.isTorsionFree())throw Error("bad point: not in prime-order subgroup");return!0});function w(e,t,a,d,i){return a=new S(p.mul(a.px,e),a.py,a.pz),t=rw(d,t),a=rw(i,a),t.add(a)}class S{constructor(e,t,a){this.px=b("x",e),this.py=b("y",t,!0),this.pz=b("z",a),Object.freeze(this)}static fromAffine(e){let{x:t,y:a}=e||{};if(!e||!p.isValid(t)||!p.isValid(a))throw Error("invalid affine point");if(e instanceof S)throw Error("projective point not allowed");return p.is0(t)&&p.is0(a)?S.ZERO:new S(t,a,p.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){return rS(S,"pz",e)}static fromBytes(e){return i5(e),S.fromHex(e)}static fromHex(e){let t=S.fromAffine(u(p4("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){let a=sk(r,t.allowedPrivateKeyLengths,t.wrapPrivateKey);return S.BASE.multiply(a(e))}static msm(e,t){return rD(S,r,e,t)}precompute(e=8,t=!0){return N.setWindowSize(this,e),t||this.multiply(sA),this}_setWindowSize(e){this.precompute(e)}assertValidity(){y(this)}hasEvenY(){let{y:e}=this.toAffine();if(!p.isOdd)throw Error("Field doesn't support isOdd");return!p.isOdd(e)}equals(e){v(e);let{px:t,py:a,pz:d}=this,{px:i,py:r,pz:n}=e,s=p.eql(p.mul(t,n),p.mul(i,d)),o=p.eql(p.mul(a,n),p.mul(r,d));return s&&o}negate(){return new S(this.px,p.neg(this.py),this.pz)}double(){let{a:t,b:a}=e,d=p.mul(a,sA),{px:i,py:r,pz:n}=this,s=p.ZERO,o=p.ZERO,l=p.ZERO,m=p.mul(i,i),u=p.mul(r,r),f=p.mul(n,n),c=p.mul(i,r);return c=p.add(c,c),l=p.mul(i,n),l=p.add(l,l),s=p.mul(t,l),o=p.mul(d,f),o=p.add(s,o),s=p.sub(u,o),o=p.add(u,o),o=p.mul(s,o),s=p.mul(c,s),l=p.mul(d,l),f=p.mul(t,f),c=p.sub(m,f),c=p.mul(t,c),c=p.add(c,l),l=p.add(m,m),m=p.add(l,m),m=p.add(m,f),m=p.mul(m,c),o=p.add(o,m),f=p.mul(r,n),f=p.add(f,f),m=p.mul(f,c),s=p.sub(s,m),l=p.mul(f,u),l=p.add(l,l),new S(s,o,l=p.add(l,l))}add(t){v(t);let{px:a,py:d,pz:i}=this,{px:r,py:n,pz:s}=t,o=p.ZERO,l=p.ZERO,m=p.ZERO,u=e.a,f=p.mul(e.b,sA),c=p.mul(a,r),h=p.mul(d,n),x=p.mul(i,s),b=p.add(a,d),g=p.add(r,n);b=p.mul(b,g),g=p.add(c,h),b=p.sub(b,g),g=p.add(a,i);let y=p.add(r,s);return g=p.mul(g,y),y=p.add(c,x),g=p.sub(g,y),y=p.add(d,i),o=p.add(n,s),y=p.mul(y,o),o=p.add(h,x),y=p.sub(y,o),m=p.mul(u,g),o=p.mul(f,x),m=p.add(o,m),o=p.sub(h,m),m=p.add(h,m),l=p.mul(o,m),h=p.add(c,c),h=p.add(h,c),x=p.mul(u,x),g=p.mul(f,g),h=p.add(h,x),x=p.sub(c,x),x=p.mul(u,x),g=p.add(g,x),c=p.mul(h,g),l=p.add(l,c),c=p.mul(y,g),o=p.mul(b,o),o=p.sub(o,c),c=p.mul(b,h),m=p.mul(y,m),new S(o,l,m=p.add(m,c))}subtract(e){return this.add(e.negate())}is0(){return this.equals(S.ZERO)}multiply(e){let a,d,{endo:i}=t;if(!r.isValidNot0(e))throw Error("invalid scalar: out of range");let p=e=>N.wNAFCached(this,e,S.normalizeZ);if(i){let{k1neg:t,k1:r,k2neg:n,k2:s}=i.splitScalar(e),{p:o,f:l}=p(r),{p:m,f:u}=p(s);d=l.add(u),a=w(i.beta,o,m,t,n)}else{let{p:t,f:i}=p(e);a=t,d=i}return S.normalizeZ([a,d])[0]}multiplyUnsafe(e){let{endo:a}=t;if(!r.isValid(e))throw Error("invalid scalar: out of range");if(e===sE||this.is0())return S.ZERO;if(e===sN)return this;if(N.hasPrecomputes(this))return this.multiply(e);if(!a)return N.wNAFCachedUnsafe(this,e);{let{k1neg:t,k1:d,k2neg:i,k2:p}=a.splitScalar(e),{p1:r,p2:n}=function(e,t,a,d){let i=t,p=e.ZERO,r=e.ZERO;for(;a>rg||d>rg;)a&ry&&(p=p.add(i)),d&ry&&(r=r.add(i)),i=i.double(),a>>=ry,d>>=ry;return{p1:p,p2:r}}(S,this,d,p);return w(a.beta,r,n,t,i)}}multiplyAndAddUnsafe(e,t,a){let d=this.multiplyUnsafe(t).add(e.multiplyUnsafe(a));return d.is0()?void 0:d}toAffine(e){return g(this,e)}isTorsionFree(){let{isTorsionFree:e}=t;return n===sN||(e?e(S,this):N.wNAFCachedUnsafe(this,s).is0())}clearCofactor(){let{clearCofactor:e}=t;return n===sN?this:e?e(S,this):this.multiplyUnsafe(n)}toBytes(e=!0){return pJ("isCompressed",e),this.assertValidity(),m(S,this,e)}toRawBytes(e=!0){return this.toBytes(e)}toHex(e=!0){return pn(this.toBytes(e))}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}}S.BASE=new S(e.Gx,e.Gy,p.ONE),S.ZERO=new S(p.ZERO,p.ONE,p.ZERO),S.Fp=p,S.Fn=r;let E=r.BITS,N=rB(S,t.endo?Math.ceil(E/2):E);return S}(t,a),d,a);return Object.assign({},i,{ProjectivePoint:i.Point,CURVE:e})})({...e,hash:t});return{...a(t),create:a}}({...sB,Fp:sR,lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{let t=sB.n,a=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),d=-sP*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),p=BigInt("0x100000000000000000000000000000000"),r=sV(a*e,t),n=sV(-d*e,t),s=rn(e-r*a-n*i,t),o=rn(-r*d-n*a,t),l=s>p,m=o>p;if(l&&(s=t-s),m&&(o=t-o),s>p||o>p)throw Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:l,k1:s,k2neg:m,k2:o}}}},pG),sC={},sL=e=>e.toBytes(!0).slice(1),sU=e=>mod(e,sB.n),sF=e=>e%sO===sD;!function(){var e=Error("Cannot find module 'rpc-websockets/dist/lib/client'");throw e.code="MODULE_NOT_FOUND",e}(),function(){var e=Error("Cannot find module 'rpc-websockets/dist/lib/client/websocket'");throw e.code="MODULE_NOT_FOUND",e}(),r$.utils.randomPrivateKey;let sz=()=>{let e=r$.utils.randomPrivateKey(),t=sK(e),a=new Uint8Array(64);return a.set(e),a.set(t,32),{publicKey:t,secretKey:a}},sK=r$.getPublicKey;function sH(e){try{return r$.ExtendedPoint.fromHex(e),!0}catch{return!1}}let sj=(e,t)=>r$.sign(e,t.slice(0,32)),sq=r$.verify,s$=e=>i4.Buffer.isBuffer(e)?e:e instanceof Uint8Array?i4.Buffer.from(e.buffer,e.byteOffset,e.byteLength):i4.Buffer.from(e);class sW{constructor(e){Object.assign(this,e)}encode(){return i4.Buffer.from((0,rX.serialize)(sG,this))}static decode(e){return(0,rX.deserialize)(sG,this,e)}static decodeUnchecked(e){return(0,rX.deserializeUnchecked)(sG,this,e)}}let sG=new Map,sZ=1;i=Symbol.toStringTag;class sY extends sW{constructor(e){if(super({}),this._bn=void 0,void 0!==e._bn)this._bn=e._bn;else{if("string"==typeof e){let t=rY().decode(e);if(32!=t.length)throw Error("Invalid public key input");this._bn=new(rG())(t)}else this._bn=new(rG())(e);if(this._bn.byteLength()>32)throw Error("Invalid public key input")}}static unique(){let e=new sY(sZ);return sZ+=1,new sY(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return rY().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){let e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){let e=this._bn.toArrayLike(i4.Buffer);if(32===e.length)return e;let t=i4.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[i](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,a){return new sY(pG(i4.Buffer.concat([e.toBuffer(),i4.Buffer.from(t),a.toBuffer()])))}static createProgramAddressSync(e,t){let a=i4.Buffer.alloc(0);e.forEach(function(e){if(e.length>32)throw TypeError("Max seed length exceeded");a=i4.Buffer.concat([a,s$(e)])});let d=pG(a=i4.Buffer.concat([a,t.toBuffer(),i4.Buffer.from("ProgramDerivedAddress")]));if(sH(d))throw Error("Invalid seeds, address must fall off the curve");return new sY(d)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let a,d=255;for(;0!=d;){try{let i=e.concat(i4.Buffer.from([d]));a=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError)throw e;d--;continue}return[a,d]}throw Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return sH(new sY(e).toBytes())}}sY.default=new sY("11111111111111111111111111111111"),sG.set(sY,{kind:"struct",fields:[["_bn","u256"]]}),new sY("BPFLoader1111111111111111111111111111111111");class sX extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(sX.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class sJ extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(sJ.prototype,"name",{value:"TransactionExpiredTimeoutError"});class sQ extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(sQ.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class s1{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){let e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(let t of this.keySegments())if(e<t.length)return t[e];else e-=t.length}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw Error("Account index overflow encountered during compilation");let t=new Map;this.keySegments().flat().forEach((e,a)=>{t.set(e.toBase58(),a)});let a=e=>{let a=t.get(e.toBase58());if(void 0===a)throw Error("Encountered an unknown instruction account key during compilation");return a};return e.map(e=>({programIdIndex:a(e.programId),accountKeyIndexes:e.keys.map(e=>a(e.pubkey)),data:e.data}))}}let s0=(e="publicKey")=>rJ.av(32,e),s2=(e="string")=>{let t=rJ.w3([rJ.DH("length"),rJ.DH("lengthPadding"),rJ.av(rJ.cY(rJ.DH(),-8),"chars")],e),a=t.decode.bind(t),d=t.encode.bind(t);return t.decode=(e,t)=>a(e,t).chars.toString(),t.encode=(e,t,a)=>d({chars:i4.Buffer.from(e,"utf8")},t,a),t.alloc=e=>rJ.DH().span+rJ.DH().span+i4.Buffer.from(e,"utf8").length,t};function s6(e){let t=0,a=0;for(;;){let d=e.shift();if(t|=(127&d)<<7*a,a+=1,(128&d)==0)break}return t}function s4(e,t){let a=t;for(;;){let t=127&a;if(0==(a>>=7)){e.push(t);break}t|=128,e.push(t)}}function s3(e,t){if(!e)throw Error(t||"Assertion failed")}class s9{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){let a=new Map,d=e=>{let t=e.toBase58(),d=a.get(t);return void 0===d&&(d={isSigner:!1,isWritable:!1,isInvoked:!1},a.set(t,d)),d},i=d(t);for(let t of(i.isSigner=!0,i.isWritable=!0,e))for(let e of(d(t.programId).isInvoked=!0,t.keys)){let t=d(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}return new s9(t,a)}getMessageComponents(){let e=[...this.keyMetaMap.entries()];s3(e.length<=256,"Max static account keys length exceeded");let t=e.filter(([,e])=>e.isSigner&&e.isWritable),a=e.filter(([,e])=>e.isSigner&&!e.isWritable),d=e.filter(([,e])=>!e.isSigner&&e.isWritable),i=e.filter(([,e])=>!e.isSigner&&!e.isWritable),p={numRequiredSignatures:t.length+a.length,numReadonlySignedAccounts:a.length,numReadonlyUnsignedAccounts:i.length};{s3(t.length>0,"Expected at least one writable signer key");let[e]=t[0];s3(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[p,[...t.map(([e])=>new sY(e)),...a.map(([e])=>new sY(e)),...d.map(([e])=>new sY(e)),...i.map(([e])=>new sY(e))]]}extractTableLookup(e){let[t,a]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&e.isWritable),[d,i]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&!e.isWritable);if(0!==t.length||0!==d.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:d},{writable:a,readonly:i}]}drainKeysFoundInLookupTable(e,t){let a=[],d=[];for(let[i,p]of this.keyMetaMap.entries())if(t(p)){let t=new sY(i),p=e.findIndex(e=>e.equals(t));p>=0&&(s3(p<256,"Max lookup table index exceeded"),a.push(p),d.push(t),this.keyMetaMap.delete(i))}return[a,d]}}let s8="Reached end of buffer unexpectedly";function s5(e){if(0===e.length)throw Error(s8);return e.shift()}function s7(e,...t){let[a]=t;if(2===t.length?a+(t[1]??0)>e.length:a>=e.length)throw Error(s8);return e.splice(...t)}class oe{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map(e=>new sY(e)),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:rY().decode(e.data)}))}get addressTableLookups(){return[]}getAccountKeys(){return new s1(this.staticAccountKeys)}static compile(e){let[t,a]=s9.compile(e.instructions,e.payerKey).getMessageComponents(),d=new s1(a).compileInstructions(e.instructions).map(e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:rY().encode(e.data)}));return new oe({header:t,accountKeys:a,recentBlockhash:e.recentBlockhash,instructions:d})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures;if(!(e>=this.header.numRequiredSignatures))return e<t-this.header.numReadonlySignedAccounts;{let a=this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts;return e-t<a}}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((e,t)=>!this.isProgramId(t))}serialize(){let e=this.accountKeys.length,t=[];s4(t,e);let a=this.instructions.map(e=>{let{accounts:t,programIdIndex:a}=e,d=Array.from(rY().decode(e.data)),i=[];s4(i,t.length);let p=[];return s4(p,d.length),{programIdIndex:a,keyIndicesCount:i4.Buffer.from(i),keyIndices:t,dataLength:i4.Buffer.from(p),data:d}}),d=[];s4(d,a.length);let i=i4.Buffer.alloc(1232);i4.Buffer.from(d).copy(i);let p=d.length;a.forEach(e=>{let t=rJ.w3([rJ.u8("programIdIndex"),rJ.av(e.keyIndicesCount.length,"keyIndicesCount"),rJ.O6(rJ.u8("keyIndex"),e.keyIndices.length,"keyIndices"),rJ.av(e.dataLength.length,"dataLength"),rJ.O6(rJ.u8("userdatum"),e.data.length,"data")]).encode(e,i,p);p+=t}),i=i.slice(0,p);let r=rJ.w3([rJ.av(1,"numRequiredSignatures"),rJ.av(1,"numReadonlySignedAccounts"),rJ.av(1,"numReadonlyUnsignedAccounts"),rJ.av(t.length,"keyCount"),rJ.O6(s0("key"),e,"keys"),s0("recentBlockhash")]),n={numRequiredSignatures:i4.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:i4.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:i4.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:i4.Buffer.from(t),keys:this.accountKeys.map(e=>s$(e.toBytes())),recentBlockhash:rY().decode(this.recentBlockhash)},s=i4.Buffer.alloc(2048),o=r.encode(n,s);return i.copy(s,o),s.slice(0,o+i.length)}static from(e){let t=[...e],a=s5(t);if(a!==(127&a))throw Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");let d=s5(t),i=s5(t),p=s6(t),r=[];for(let e=0;e<p;e++){let e=s7(t,0,32);r.push(new sY(i4.Buffer.from(e)))}let n=s7(t,0,32),s=s6(t),o=[];for(let e=0;e<s;e++){let e=s5(t),a=s6(t),d=s7(t,0,a),i=s6(t),p=s7(t,0,i),r=rY().encode(i4.Buffer.from(p));o.push({programIdIndex:e,accounts:d,data:r})}return new oe({header:{numRequiredSignatures:a,numReadonlySignedAccounts:d,numReadonlyUnsignedAccounts:i},recentBlockhash:rY().encode(i4.Buffer.from(n)),accountKeys:r,instructions:o})}}class ot{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(let t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw Error("Failed to get account keys because address table lookups were not resolved");return new s1(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures,a=this.staticAccountKeys.length;if(e>=a)return e-a<this.addressTableLookups.reduce((e,t)=>e+t.writableIndexes.length,0);if(!(e>=this.header.numRequiredSignatures))return e<t-this.header.numReadonlySignedAccounts;{let d=a-t-this.header.numReadonlyUnsignedAccounts;return e-t<d}}resolveAddressTableLookups(e){let t={writable:[],readonly:[]};for(let a of this.addressTableLookups){let d=e.find(e=>e.key.equals(a.accountKey));if(!d)throw Error(`Failed to find address lookup table account for table key ${a.accountKey.toBase58()}`);for(let e of a.writableIndexes)if(e<d.state.addresses.length)t.writable.push(d.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${a.accountKey.toBase58()}`);for(let e of a.readonlyIndexes)if(e<d.state.addresses.length)t.readonly.push(d.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${a.accountKey.toBase58()}`)}return t}static compile(e){let t=s9.compile(e.instructions,e.payerKey),a=[],d={writable:[],readonly:[]};for(let i of e.addressLookupTableAccounts||[]){let e=t.extractTableLookup(i);if(void 0!==e){let[t,{writable:i,readonly:p}]=e;a.push(t),d.writable.push(...i),d.readonly.push(...p)}}let[i,p]=t.getMessageComponents(),r=new s1(p,d).compileInstructions(e.instructions);return new ot({header:i,staticAccountKeys:p,recentBlockhash:e.recentBlockhash,compiledInstructions:r,addressTableLookups:a})}serialize(){let e=[];s4(e,this.staticAccountKeys.length);let t=this.serializeInstructions(),a=[];s4(a,this.compiledInstructions.length);let d=this.serializeAddressTableLookups(),i=[];s4(i,this.addressTableLookups.length);let p=rJ.w3([rJ.u8("prefix"),rJ.w3([rJ.u8("numRequiredSignatures"),rJ.u8("numReadonlySignedAccounts"),rJ.u8("numReadonlyUnsignedAccounts")],"header"),rJ.av(e.length,"staticAccountKeysLength"),rJ.O6(s0(),this.staticAccountKeys.length,"staticAccountKeys"),s0("recentBlockhash"),rJ.av(a.length,"instructionsLength"),rJ.av(t.length,"serializedInstructions"),rJ.av(i.length,"addressTableLookupsLength"),rJ.av(d.length,"serializedAddressTableLookups")]),r=new Uint8Array(1232),n=p.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map(e=>e.toBytes()),recentBlockhash:rY().decode(this.recentBlockhash),instructionsLength:new Uint8Array(a),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(i),serializedAddressTableLookups:d},r);return r.slice(0,n)}serializeInstructions(){let e=0,t=new Uint8Array(1232);for(let a of this.compiledInstructions){let d=[];s4(d,a.accountKeyIndexes.length);let i=[];s4(i,a.data.length);let p=rJ.w3([rJ.u8("programIdIndex"),rJ.av(d.length,"encodedAccountKeyIndexesLength"),rJ.O6(rJ.u8(),a.accountKeyIndexes.length,"accountKeyIndexes"),rJ.av(i.length,"encodedDataLength"),rJ.av(a.data.length,"data")]);e+=p.encode({programIdIndex:a.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(d),accountKeyIndexes:a.accountKeyIndexes,encodedDataLength:new Uint8Array(i),data:a.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0,t=new Uint8Array(1232);for(let a of this.addressTableLookups){let d=[];s4(d,a.writableIndexes.length);let i=[];s4(i,a.readonlyIndexes.length);let p=rJ.w3([s0("accountKey"),rJ.av(d.length,"encodedWritableIndexesLength"),rJ.O6(rJ.u8(),a.writableIndexes.length,"writableIndexes"),rJ.av(i.length,"encodedReadonlyIndexesLength"),rJ.O6(rJ.u8(),a.readonlyIndexes.length,"readonlyIndexes")]);e+=p.encode({accountKey:a.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(d),writableIndexes:a.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(i),readonlyIndexes:a.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e],a=s5(t),d=127&a;s3(a!==d,"Expected versioned message but received legacy message"),s3(0===d,`Expected versioned message with version 0 but found version ${d}`);let i={numRequiredSignatures:s5(t),numReadonlySignedAccounts:s5(t),numReadonlyUnsignedAccounts:s5(t)},p=[],r=s6(t);for(let e=0;e<r;e++)p.push(new sY(s7(t,0,32)));let n=rY().encode(s7(t,0,32)),s=s6(t),o=[];for(let e=0;e<s;e++){let e=s5(t),a=s6(t),d=s7(t,0,a),i=s6(t),p=new Uint8Array(s7(t,0,i));o.push({programIdIndex:e,accountKeyIndexes:d,data:p})}let l=s6(t),m=[];for(let e=0;e<l;e++){let e=new sY(s7(t,0,32)),a=s6(t),d=s7(t,0,a),i=s6(t),p=s7(t,0,i);m.push({accountKey:e,writableIndexes:d,readonlyIndexes:p})}return new ot({header:i,staticAccountKeys:p,recentBlockhash:n,compiledInstructions:o,addressTableLookups:m})}}let oa=i4.Buffer.alloc(64).fill(0);class od{constructor(e){this.keys=void 0,this.programId=void 0,this.data=i4.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map(({pubkey:e,isSigner:t,isWritable:a})=>({pubkey:e.toJSON(),isSigner:t,isWritable:a})),programId:this.programId.toJSON(),data:[...this.data]}}}class oi{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,!e)return;if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){let{minContextSlot:t,nonceInfo:a}=e;this.minNonceContextSlot=t,this.nonceInfo=a}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){let{blockhash:t,lastValidBlockHeight:a}=e;this.recentBlockhash=t,this.lastValidBlockHeight=a}else{let{recentBlockhash:t,nonceInfo:a}=e;a&&(this.nonceInfo=a),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(e=>e.toJSON()),signers:this.signatures.map(({publicKey:e})=>e.toJSON())}}add(...e){if(0===e.length)throw Error("No instructions");return e.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new od(e))}),this}compileMessage(){let e,t,a;if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)a=this.feePayer;else if(this.signatures.length>0&&this.signatures[0].publicKey)a=this.signatures[0].publicKey;else throw Error("Transaction fee payer required");for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw Error(`Transaction instruction index ${e} has undefined program id`);let d=[],i=[];t.forEach(e=>{e.keys.forEach(e=>{i.push({...e})});let t=e.programId.toString();d.includes(t)||d.push(t)}),d.forEach(e=>{i.push({pubkey:new sY(e),isSigner:!1,isWritable:!1})});let p=[];i.forEach(e=>{let t=e.pubkey.toString(),a=p.findIndex(e=>e.pubkey.toString()===t);a>-1?(p[a].isWritable=p[a].isWritable||e.isWritable,p[a].isSigner=p[a].isSigner||e.isSigner):p.push(e)}),p.sort(function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})});let r=p.findIndex(e=>e.pubkey.equals(a));if(r>-1){let[e]=p.splice(r,1);e.isSigner=!0,e.isWritable=!0,p.unshift(e)}else p.unshift({pubkey:a,isSigner:!0,isWritable:!0});for(let e of this.signatures){let t=p.findIndex(t=>t.pubkey.equals(e.publicKey));if(t>-1)p[t].isSigner||(p[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."));else throw Error(`unknown signer: ${e.publicKey.toString()}`)}let n=0,s=0,o=0,l=[],m=[];p.forEach(({pubkey:e,isSigner:t,isWritable:a})=>{t?(l.push(e.toString()),n+=1,a||(s+=1)):(m.push(e.toString()),a||(o+=1))});let u=l.concat(m),f=t.map(e=>{let{data:t,programId:a}=e;return{programIdIndex:u.indexOf(a.toString()),accounts:e.keys.map(e=>u.indexOf(e.pubkey.toString())),data:rY().encode(t)}});return f.forEach(e=>{s3(e.programIdIndex>=0),e.accounts.forEach(e=>s3(e>=0))}),new oe({header:{numRequiredSignatures:n,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:o},accountKeys:u,recentBlockhash:e,instructions:f})}_compile(){let e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);return this.signatures.length===t.length&&this.signatures.every((e,a)=>t[a].equals(e.publicKey))?e:(this.signatures=t.map(e=>({signature:null,publicKey:e})),e)}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw Error("No signers");let t=new Set;this.signatures=e.filter(e=>{let a=e.toString();return!t.has(a)&&(t.add(a),!0)}).map(e=>({signature:null,publicKey:e}))}sign(...e){if(0===e.length)throw Error("No signers");let t=new Set,a=[];for(let d of e){let e=d.publicKey.toString();t.has(e)||(t.add(e),a.push(d))}this.signatures=a.map(e=>({signature:null,publicKey:e.publicKey}));let d=this._compile();this._partialSign(d,...a)}partialSign(...e){if(0===e.length)throw Error("No signers");let t=new Set,a=[];for(let d of e){let e=d.publicKey.toString();t.has(e)||(t.add(e),a.push(d))}let d=this._compile();this._partialSign(d,...a)}_partialSign(e,...t){let a=e.serialize();t.forEach(e=>{let t=sj(a,e.secretKey);this._addSignature(e.publicKey,s$(t))})}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){s3(64===t.length);let a=this.signatures.findIndex(t=>e.equals(t.publicKey));if(a<0)throw Error(`unknown signer: ${e.toString()}`);this.signatures[a].signature=i4.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){let a={};for(let{signature:d,publicKey:i}of this.signatures)null===d?t&&(a.missing||=[]).push(i):sq(d,e,i.toBytes())||(a.invalid||=[]).push(i);return a.invalid||a.missing?a:void 0}serialize(e){let{requireAllSignatures:t,verifySignatures:a}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),d=this.serializeMessage();if(a){let e=this._getMessageSignednessErrors(d,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`
Invalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map(e=>e.toBase58()).join("`, `")}\`].`),e.missing&&(t+=`
Missing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map(e=>e.toBase58()).join("`, `")}\`].`),Error(t)}}return this._serialize(d)}_serialize(e){let{signatures:t}=this,a=[];s4(a,t.length);let d=a.length+64*t.length+e.length,i=i4.Buffer.alloc(d);return s3(t.length<256),i4.Buffer.from(a).copy(i,0),t.forEach(({signature:e},t)=>{null!==e&&(s3(64===e.length,"signature has invalid length"),i4.Buffer.from(e).copy(i,a.length+64*t))}),e.copy(i,a.length+64*t.length),s3(i.length<=1232,`Transaction too large: ${i.length} > 1232`),i}get keys(){return s3(1===this.instructions.length),this.instructions[0].keys.map(e=>e.pubkey)}get programId(){return s3(1===this.instructions.length),this.instructions[0].programId}get data(){return s3(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e],a=s6(t),d=[];for(let e=0;e<a;e++){let e=s7(t,0,64);d.push(rY().encode(i4.Buffer.from(e)))}return oi.populate(oe.from(t),d)}static populate(e,t=[]){let a=new oi;return a.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(a.feePayer=e.accountKeys[0]),t.forEach((t,d)=>{let i={signature:t==rY().encode(oa)?null:rY().decode(t),publicKey:e.accountKeys[d]};a.signatures.push(i)}),e.instructions.forEach(t=>{let d=t.accounts.map(t=>{let d=e.accountKeys[t];return{pubkey:d,isSigner:a.signatures.some(e=>e.publicKey.toString()===d.toString())||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}});a.instructions.push(new od({keys:d,programId:e.accountKeys[t.programIdIndex],data:rY().decode(t.data)}))}),a._message=e,a._json=a.toJSON(),a}}let op=new sY("SysvarC1ock11111111111111111111111111111111");new sY("SysvarEpochSchedu1e111111111111111111111111"),new sY("Sysvar1nstructions1111111111111111111111111");let or=new sY("SysvarRecentB1ockHashes11111111111111111111"),on=new sY("SysvarRent111111111111111111111111111111111");new sY("SysvarRewards111111111111111111111111111111"),new sY("SysvarS1otHashes111111111111111111111111111"),new sY("SysvarS1otHistory11111111111111111111111111");let os=new sY("SysvarStakeHistory1111111111111111111111111");async function oo(e,t,a,d){let i,p=d&&{skipPreflight:d.skipPreflight,preflightCommitment:d.preflightCommitment||d.commitment,maxRetries:d.maxRetries,minContextSlot:d.minContextSlot},r=await e.sendTransaction(t,a,p);if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)i=(await e.confirmTransaction({abortSignal:d?.abortSignal,signature:r,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},d&&d.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){let{nonceInstruction:a}=t.nonceInfo,p=a.keys[0].pubkey;i=(await e.confirmTransaction({abortSignal:d?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:p,nonceValue:t.nonceInfo.nonce,signature:r},d&&d.commitment)).value}else d?.abortSignal!=null&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),i=(await e.confirmTransaction(r,d&&d.commitment)).value;if(i.err)throw Error(`Transaction ${r} failed (${JSON.stringify(i)})`);return r}function ol(e,t){let a=e.layout.span>=0?e.layout.span:function e(t,a){let d=t=>{if(t.span>=0)return t.span;if("function"==typeof t.alloc)return t.alloc(a[t.property]);if("count"in t&&"elementLayout"in t){let e=a[t.property];if(Array.isArray(e))return e.length*d(t.elementLayout)}else if("fields"in t)return e({layout:t},a[t.property]);return 0},i=0;return t.layout.fields.forEach(e=>{i+=d(e)}),i}(e,t),d=i4.Buffer.alloc(a),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,d),d}let om=rJ.I0("lamportsPerSignature"),ou=rJ.w3([rJ.DH("version"),rJ.DH("state"),s0("authorizedPubkey"),s0("nonce"),rJ.w3([om],"feeCalculator")]).span,of=e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}),oc=(e=>t=>{let a=(0,rJ.av)(e,t),{encode:d,decode:i}=of(a);return a.decode=(e,t)=>{let a=i(e,t);return(0,rQ.k5)(i4.Buffer.from(a))},a.encode=(t,a,i)=>d((0,rQ.Bq)(t,e),a,i),a})(8),oh=Object.freeze({Create:{index:0,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("lamports"),rJ.Wg("space"),s0("programId")])},Assign:{index:1,layout:rJ.w3([rJ.DH("instruction"),s0("programId")])},Transfer:{index:2,layout:rJ.w3([rJ.DH("instruction"),oc("lamports")])},CreateWithSeed:{index:3,layout:rJ.w3([rJ.DH("instruction"),s0("base"),s2("seed"),rJ.Wg("lamports"),rJ.Wg("space"),s0("programId")])},AdvanceNonceAccount:{index:4,layout:rJ.w3([rJ.DH("instruction")])},WithdrawNonceAccount:{index:5,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("lamports")])},InitializeNonceAccount:{index:6,layout:rJ.w3([rJ.DH("instruction"),s0("authorized")])},AuthorizeNonceAccount:{index:7,layout:rJ.w3([rJ.DH("instruction"),s0("authorized")])},Allocate:{index:8,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("space")])},AllocateWithSeed:{index:9,layout:rJ.w3([rJ.DH("instruction"),s0("base"),s2("seed"),rJ.Wg("space"),s0("programId")])},AssignWithSeed:{index:10,layout:rJ.w3([rJ.DH("instruction"),s0("base"),s2("seed"),s0("programId")])},TransferWithSeed:{index:11,layout:rJ.w3([rJ.DH("instruction"),oc("lamports"),s2("seed"),s0("programId")])},UpgradeNonceAccount:{index:12,layout:rJ.w3([rJ.DH("instruction")])}});class ox{constructor(){}static createAccount(e){let t=ol(oh.Create,{lamports:e.lamports,space:e.space,programId:s$(e.programId.toBuffer())});return new od({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,a;return"basePubkey"in e?(t=ol(oh.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:s$(e.programId.toBuffer())}),a=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]):(t=ol(oh.Transfer,{lamports:BigInt(e.lamports)}),a=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]),new od({keys:a,programId:this.programId,data:t})}static assign(e){let t,a;return"basePubkey"in e?(t=ol(oh.AssignWithSeed,{base:s$(e.basePubkey.toBuffer()),seed:e.seed,programId:s$(e.programId.toBuffer())}),a=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ol(oh.Assign,{programId:s$(e.programId.toBuffer())}),a=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new od({keys:a,programId:this.programId,data:t})}static createAccountWithSeed(e){let t=ol(oh.CreateWithSeed,{base:s$(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:s$(e.programId.toBuffer())}),a=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&a.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new od({keys:a,programId:this.programId,data:t})}static createNonceAccount(e){let t=new oi;"basePubkey"in e&&"seed"in e?t.add(ox.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:ou,programId:this.programId})):t.add(ox.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:ou,programId:this.programId}));let a={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(a)),t}static nonceInitialize(e){let t=ol(oh.InitializeNonceAccount,{authorized:s$(e.authorizedPubkey.toBuffer())});return new od({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:or,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1}],programId:this.programId,data:t})}static nonceAdvance(e){let t=ol(oh.AdvanceNonceAccount);return new od({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:or,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceWithdraw(e){let t=ol(oh.WithdrawNonceAccount,{lamports:e.lamports});return new od({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:or,isSigner:!1,isWritable:!1},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){let t=ol(oh.AuthorizeNonceAccount,{authorized:s$(e.newAuthorizedPubkey.toBuffer())});return new od({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,a;return"basePubkey"in e?(t=ol(oh.AllocateWithSeed,{base:s$(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:s$(e.programId.toBuffer())}),a=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]):(t=ol(oh.Allocate,{space:e.space}),a=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]),new od({keys:a,programId:this.programId,data:t})}}ox.programId=new sY("11111111111111111111111111111111");class ob{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/ob.chunkSize)+1+1)}static async load(e,t,a,d,i){{let p=await e.getMinimumBalanceForRentExemption(i.length),r=await e.getAccountInfo(a.publicKey,"confirmed"),n=null;if(null!==r){if(r.executable)return console.error("Program load failed, account is already executable"),!1;r.data.length!==i.length&&(n=n||new oi).add(ox.allocate({accountPubkey:a.publicKey,space:i.length})),r.owner.equals(d)||(n=n||new oi).add(ox.assign({accountPubkey:a.publicKey,programId:d})),r.lamports<p&&(n=n||new oi).add(ox.transfer({fromPubkey:t.publicKey,toPubkey:a.publicKey,lamports:p-r.lamports}))}else n=new oi().add(ox.createAccount({fromPubkey:t.publicKey,newAccountPubkey:a.publicKey,lamports:p>0?p:1,space:i.length,programId:d}));null!==n&&await oo(e,n,[t,a],{commitment:"confirmed"})}let p=rJ.w3([rJ.DH("instruction"),rJ.DH("offset"),rJ.DH("bytesLength"),rJ.DH("bytesLengthPadding"),rJ.O6(rJ.u8("byte"),rJ.cY(rJ.DH(),-8),"bytes")]),r=ob.chunkSize,n=0,s=i,o=[];for(;s.length>0;){let i=s.slice(0,r),l=i4.Buffer.alloc(r+16);p.encode({instruction:0,offset:n,bytes:i,bytesLength:0,bytesLengthPadding:0},l);let m=new oi().add({keys:[{pubkey:a.publicKey,isSigner:!0,isWritable:!0}],programId:d,data:l});o.push(oo(e,m,[t,a],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")&&await new Promise(e=>setTimeout(e,250)),n+=r,s=s.slice(r)}await Promise.all(o);{let i=rJ.w3([rJ.DH("instruction")]),p=i4.Buffer.alloc(i.span);i.encode({instruction:1},p);let r=new oi().add({keys:[{pubkey:a.publicKey,isSigner:!0,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1}],programId:d,data:p}),n="processed",s=await e.sendTransaction(r,[t,a],{preflightCommitment:n}),{context:o,value:l}=await e.confirmTransaction({signature:s,lastValidBlockHeight:r.lastValidBlockHeight,blockhash:r.recentBlockhash},n);if(l.err)throw Error(`Transaction ${s} failed (${JSON.stringify(l)})`);for(;;){try{if(await e.getSlot({commitment:n})>o.slot)break}catch{}await new Promise(e=>setTimeout(e,Math.round(200)))}}return!0}}ob.chunkSize=932,new sY("BPFLoader2111111111111111111111111111111111");var ov={exports:{}};function og(e,t,a,d){return Math.round(e/a)+" "+d+(t>=1.5*a?"s":"")}var oy=r0(),ow=function(e,t){t=t||{};var a,d,i,p,r=typeof e;if("string"===r&&e.length>0){var n=e;if(!((n=String(n)).length>100)){var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(n);if(s){var o=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return 6048e5*o;case"days":case"day":case"d":return 864e5*o;case"hours":case"hour":case"hrs":case"hr":case"h":return 36e5*o;case"minutes":case"minute":case"mins":case"min":case"m":return 6e4*o;case"seconds":case"second":case"secs":case"sec":case"s":return 1e3*o;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:break}}}return}if("number"===r&&isFinite(e)){return t.long?(d=Math.abs(a=e))>=864e5?og(a,d,864e5,"day"):d>=36e5?og(a,d,36e5,"hour"):d>=6e4?og(a,d,6e4,"minute"):d>=1e3?og(a,d,1e3,"second"):a+" ms":(p=Math.abs(i=e))>=864e5?Math.round(i/864e5)+"d":p>=36e5?Math.round(i/36e5)+"h":p>=6e4?Math.round(i/6e4)+"m":p>=1e3?Math.round(i/1e3)+"s":i+"ms"}throw Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))},oS={CURRENT_ID:Symbol("agentkeepalive#currentId"),CREATE_ID:Symbol("agentkeepalive#createId"),INIT_SOCKET:Symbol("agentkeepalive#initSocket"),CREATE_HTTPS_CONNECTION:Symbol("agentkeepalive#createHttpsConnection"),SOCKET_CREATED_TIME:Symbol("agentkeepalive#socketCreatedTime"),SOCKET_NAME:Symbol("agentkeepalive#socketName"),SOCKET_REQUEST_COUNT:Symbol("agentkeepalive#socketRequestCount"),SOCKET_REQUEST_FINISHED_COUNT:Symbol("agentkeepalive#socketRequestFinishedCount")};let oE=r6().Agent,oN=function(e){if("number"==typeof e)return e;var t=ow(e);return void 0===t&&console.warn(Error(oy.format("humanize-ms(%j) result undefined",e)).stack),t},oT=r0().debuglog("agentkeepalive"),{INIT_SOCKET:oA,CURRENT_ID:o_,CREATE_ID:ok,SOCKET_CREATED_TIME:oI,SOCKET_NAME:oB,SOCKET_REQUEST_COUNT:oD,SOCKET_REQUEST_FINISHED_COUNT:oP}=oS,oO=1,oV=parseInt(process.version.split(".",1)[0].substring(1));function oR(e){console.log("[agentkeepalive:deprecated] %s",e)}oV>=11&&oV<=12?oO=2:oV>=13&&(oO=3);class oM extends oE{constructor(e){(e=e||{}).keepAlive=!1!==e.keepAlive,void 0===e.freeSocketTimeout&&(e.freeSocketTimeout=4e3),e.keepAliveTimeout&&(oR("options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead"),e.freeSocketTimeout=e.keepAliveTimeout,delete e.keepAliveTimeout),e.freeSocketKeepAliveTimeout&&(oR("options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead"),e.freeSocketTimeout=e.freeSocketKeepAliveTimeout,delete e.freeSocketKeepAliveTimeout),void 0===e.timeout&&(e.timeout=Math.max(2*e.freeSocketTimeout,8e3)),e.timeout=oN(e.timeout),e.freeSocketTimeout=oN(e.freeSocketTimeout),e.socketActiveTTL=e.socketActiveTTL?oN(e.socketActiveTTL):0,super(e),this[o_]=0,this.createSocketCount=0,this.createSocketCountLastCheck=0,this.createSocketErrorCount=0,this.createSocketErrorCountLastCheck=0,this.closeSocketCount=0,this.closeSocketCountLastCheck=0,this.errorSocketCount=0,this.errorSocketCountLastCheck=0,this.requestCount=0,this.requestCountLastCheck=0,this.timeoutSocketCount=0,this.timeoutSocketCountLastCheck=0,this.on("free",e=>{let t=this.calcSocketTimeout(e);t>0&&e.timeout!==t&&e.setTimeout(t)})}get freeSocketKeepAliveTimeout(){return oR("agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead"),this.options.freeSocketTimeout}get timeout(){return oR("agent.timeout is deprecated, please use agent.options.timeout instead"),this.options.timeout}get socketActiveTTL(){return oR("agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead"),this.options.socketActiveTTL}calcSocketTimeout(e){let t=this.options.freeSocketTimeout,a=this.options.socketActiveTTL;if(a){let d=a-(Date.now()-e[oI]);if(d<=0)return d;t&&d<t&&(t=d)}if(t)return e.freeSocketTimeout||e.freeSocketKeepAliveTimeout||t}keepSocketAlive(e){let t=super.keepSocketAlive(e);if(!t)return t;let a=this.calcSocketTimeout(e);return void 0===a||(a<=0?(oT("%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s",e[oB],e[oD],e[oP],a),!1):(e.timeout!==a&&e.setTimeout(a),!0))}reuseSocket(...e){super.reuseSocket(...e);let t=e[0];e[1].reusedSocket=!0;let a=this.options.timeout;oC(t)!==a&&(t.setTimeout(a),oT("%s reset timeout to %sms",t[oB],a)),t[oD]++,oT("%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms",t[oB],t[oD],t[oP],oC(t))}[ok](){let e=this[o_]++;return this[o_]===Number.MAX_SAFE_INTEGER&&(this[o_]=0),e}[oA](e,t){t.timeout&&(oC(e)||e.setTimeout(t.timeout)),this.options.keepAlive&&e.setNoDelay(!0),this.createSocketCount++,this.options.socketActiveTTL&&(e[oI]=Date.now()),e[oB]=`sock[${this[ok]()}#${t._agentKey}]`.split("-----BEGIN",1)[0],e[oD]=1,e[oP]=0,function(e,t,a){function d(){if(!t._httpMessage&&1===t[oD])return;t[oP]++,e.requestCount++,oT("%s(requests: %s, finished: %s) free",t[oB],t[oD],t[oP]);let d=e.getName(a);t.writable&&e.requests[d]&&e.requests[d].length&&(t[oD]++,oT("%s(requests: %s, finished: %s) will be reuse on agent free event",t[oB],t[oD],t[oP]))}function i(a){oT("%s(requests: %s, finished: %s) close, isError: %s",t[oB],t[oD],t[oP],a),e.closeSocketCount++}function p(){let d=t.listeners("timeout").length,i=oC(t),p=t._httpMessage,r=p&&p.listeners("timeout").length||0;oT("%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s",t[oB],t[oD],t[oP],i,d,oO,!!p,r),oT.enabled&&oT("timeout listeners: %s",t.listeners("timeout").map(e=>e.name).join(", ")),e.timeoutSocketCount++;let n=e.getName(a);if(e.freeSockets[n]&&-1!==e.freeSockets[n].indexOf(t))t.destroy(),e.removeSocket(t,a),oT("%s is free, destroy quietly",t[oB]);else if(0===r){let d=Error("Socket timeout");d.code="ERR_SOCKET_TIMEOUT",d.timeout=i,t.destroy(d),e.removeSocket(t,a),oT("%s destroy with timeout error",t[oB])}}function r(a){let d=t.listeners("error").length;oT("%s(requests: %s, finished: %s) error: %s, listenerCount: %s",t[oB],t[oD],t[oP],a,d),e.errorSocketCount++,1===d&&(oT("%s emit uncaught error event",t[oB]),t.removeListener("error",r),t.emit("error",a))}oT("%s create, timeout %sms",t[oB],oC(t)),t.on("free",d),t.on("close",i),t.on("timeout",p),t.on("error",r),t.on("agentRemove",function e(){oT("%s(requests: %s, finished: %s) agentRemove",t[oB],t[oD],t[oP]),t.removeListener("close",i),t.removeListener("error",r),t.removeListener("free",d),t.removeListener("timeout",p),t.removeListener("agentRemove",e)})}(this,e,t)}createConnection(e,t){let a=!1,d=(d,i)=>{if(!a){if(a=!0,d)return this.createSocketErrorCount++,t(d);this[oA](i,e),t(d,i)}},i=super.createConnection(e,d);return i&&d(null,i),i}get statusChanged(){let e=this.createSocketCount!==this.createSocketCountLastCheck||this.createSocketErrorCount!==this.createSocketErrorCountLastCheck||this.closeSocketCount!==this.closeSocketCountLastCheck||this.errorSocketCount!==this.errorSocketCountLastCheck||this.timeoutSocketCount!==this.timeoutSocketCountLastCheck||this.requestCount!==this.requestCountLastCheck;return e&&(this.createSocketCountLastCheck=this.createSocketCount,this.createSocketErrorCountLastCheck=this.createSocketErrorCount,this.closeSocketCountLastCheck=this.closeSocketCount,this.errorSocketCountLastCheck=this.errorSocketCount,this.timeoutSocketCountLastCheck=this.timeoutSocketCount,this.requestCountLastCheck=this.requestCount),e}getCurrentStatus(){return{createSocketCount:this.createSocketCount,createSocketErrorCount:this.createSocketErrorCount,closeSocketCount:this.closeSocketCount,errorSocketCount:this.errorSocketCount,timeoutSocketCount:this.timeoutSocketCount,requestCount:this.requestCount,freeSockets:oL(this.freeSockets),sockets:oL(this.sockets),requests:oL(this.requests)}}}function oC(e){return e.timeout||e._idleTimeout}function oL(e){let t={};for(let a in e)t[a]=e[a].length;return t}let oU=r3().Agent,oF=oM,{INIT_SOCKET:oz,CREATE_HTTPS_CONNECTION:oK}=oS,oH=class extends oF{constructor(e){super(e),this.defaultPort=443,this.protocol="https:",this.maxCachedSessions=this.options.maxCachedSessions,void 0===this.maxCachedSessions&&(this.maxCachedSessions=100),this._sessionCache={map:{},list:[]}}createConnection(e,t){let a=this[oK](e,t);return this[oz](a,e),a}};oH.prototype[oK]=oU.prototype.createConnection,["getName","_getSession","_cacheSession","_evictSession"].forEach(function(e){"function"==typeof oU.prototype[e]&&(oH.prototype[e]=oU.prototype[e])}),ov.exports=oM,ov.exports.HttpsAgent=oH,ov.exports.constants=oS,ov.exports,Object.prototype.toString,Object.keys,"function"==typeof globalThis.fetch&&globalThis.fetch,!function(){var e=Error("Cannot find module 'rpc-websockets/dist/lib/client'");throw e.code="MODULE_NOT_FOUND",e}(),rJ.w3([rJ.DH("typeIndex"),oc("deactivationSlot"),rJ.I0("lastExtendedSlot"),rJ.u8("lastExtendedStartIndex"),rJ.u8(),rJ.O6(s0(),rJ.cY(rJ.u8(),-1),"authority")]);let oj=ng(nn(sY),nc(),e=>new sY(e)),oq=nh([nc(),ns("base64")]),o$=ng(nn(i4.Buffer),oq,e=>i4.Buffer.from(e[0],"base64"));function oW(e){return nb([nx({jsonrpc:ns("2.0"),id:nc(),result:e}),nx({jsonrpc:ns("2.0"),id:nc(),error:nx({code:nv(),message:nc(),data:nu(ni("any",()=>!0))})})])}let oG=oW(nv());function oZ(e){return ng(oW(e),oG,t=>"error"in t?t:{...t,result:na(t.result,e)})}function oY(e){return oZ(nx({context:nx({slot:nm()}),value:e}))}function oX(e){return nx({context:nx({slot:nm()}),value:e})}let oJ=nx({foundation:nm(),foundationTerm:nm(),initial:nm(),taper:nm(),terminal:nm()});oZ(np(nl(nx({epoch:nm(),effectiveSlot:nm(),amount:nm(),postBalance:nm(),commission:nu(nl(nm()))}))));let oQ=np(nx({slot:nm(),prioritizationFee:nm()})),o1=nx({total:nm(),validator:nm(),foundation:nm(),epoch:nm()}),o0=nx({epoch:nm(),slotIndex:nm(),slotsInEpoch:nm(),absoluteSlot:nm(),blockHeight:nu(nm()),transactionCount:nu(nm())}),o2=nx({slotsPerEpoch:nm(),leaderScheduleSlotOffset:nm(),warmup:nr(),firstNormalEpoch:nm(),firstNormalSlot:nm()}),o6=nf(nc(),np(nm())),o4=nl(nb([nx({}),nc()])),o3=nx({err:o4}),o9=ns("receivedSignature");nx({"solana-core":nc(),"feature-set":nu(nm())}),oY(nx({err:nl(nb([nx({}),nc()])),logs:nl(np(nc())),accounts:nu(nl(np(nl(nx({executable:nr(),owner:nc(),lamports:nm(),data:np(nc()),rentEpoch:nu(nm())}))))),unitsConsumed:nu(nm()),returnData:nu(nl(nx({programId:nc(),data:nh([nc(),ns("base64")])})))})),oY(nx({byIdentity:nf(nc(),np(nm())),range:nx({firstSlot:nm(),lastSlot:nm()})})),oZ(oJ),oZ(o1),oZ(oQ),oZ(o0),oZ(o2),oZ(o6),oZ(nm()),oY(nx({total:nm(),circulating:nm(),nonCirculating:nm(),nonCirculatingAccounts:np(oj)}));let o8=nx({amount:nc(),uiAmount:nl(nm()),decimals:nm(),uiAmountString:nu(nc())});oY(np(nx({address:oj,amount:nc(),uiAmount:nl(nm()),decimals:nm(),uiAmountString:nu(nc())}))),oY(np(nx({pubkey:oj,account:nx({executable:nr(),owner:oj,lamports:nm(),data:o$,rentEpoch:nm()})})));let o5=nx({program:nc(),parsed:nv(),space:nm()});oY(np(nx({pubkey:oj,account:nx({executable:nr(),owner:oj,lamports:nm(),data:o5,rentEpoch:nm()})}))),oY(np(nx({lamports:nm(),address:oj})));let o7=nx({executable:nr(),owner:oj,lamports:nm(),data:o$,rentEpoch:nm()});nx({pubkey:oj,account:o7});let le=ng(nb([nn(i4.Buffer),o5]),nb([oq,o5]),e=>Array.isArray(e)?na(e,o$):e),lt=nx({executable:nr(),owner:oj,lamports:nm(),data:le,rentEpoch:nm()});nx({pubkey:oj,account:lt}),nx({state:nb([ns("active"),ns("inactive"),ns("activating"),ns("deactivating")]),active:nm(),inactive:nm()}),oZ(np(nx({signature:nc(),slot:nm(),err:o4,memo:nl(nc()),blockTime:nu(nl(nm()))}))),oZ(np(nx({signature:nc(),slot:nm(),err:o4,memo:nl(nc()),blockTime:nu(nl(nm()))}))),nx({subscription:nm(),result:oX(o7)});let la=nx({pubkey:oj,account:o7});nx({subscription:nm(),result:oX(la)});let ld=nx({parent:nm(),slot:nm(),root:nm()});nx({subscription:nm(),result:ld});let li=nb([nx({type:nb([ns("firstShredReceived"),ns("completed"),ns("optimisticConfirmation"),ns("root")]),slot:nm(),timestamp:nm()}),nx({type:ns("createdBank"),parent:nm(),slot:nm(),timestamp:nm()}),nx({type:ns("frozen"),slot:nm(),timestamp:nm(),stats:nx({numTransactionEntries:nm(),numSuccessfulTransactions:nm(),numFailedTransactions:nm(),maxTransactionsPerEntry:nm()})}),nx({type:ns("dead"),slot:nm(),timestamp:nm(),err:nc()})]);nx({subscription:nm(),result:li}),nx({subscription:nm(),result:oX(nb([o3,o9]))}),nx({subscription:nm(),result:nm()}),nx({pubkey:nc(),gossip:nl(nc()),tpu:nl(nc()),rpc:nl(nc()),version:nl(nc())});let lp=nx({votePubkey:nc(),nodePubkey:nc(),activatedStake:nm(),epochVoteAccount:nr(),epochCredits:np(nh([nm(),nm(),nm()])),commission:nm(),lastVote:nm(),rootSlot:nl(nm())});oZ(nx({current:np(lp),delinquent:np(lp)}));let lr=nb([ns("processed"),ns("confirmed"),ns("finalized")]),ln=nx({slot:nm(),confirmations:nl(nm()),err:o4,confirmationStatus:nu(lr)});oY(np(nl(ln))),oZ(nm());let ls=nx({accountKey:oj,writableIndexes:np(nm()),readonlyIndexes:np(nm())}),lo=nx({signatures:np(nc()),message:nx({accountKeys:np(nc()),header:nx({numRequiredSignatures:nm(),numReadonlySignedAccounts:nm(),numReadonlyUnsignedAccounts:nm()}),instructions:np(nx({accounts:np(nm()),data:nc(),programIdIndex:nm()})),recentBlockhash:nc(),addressTableLookups:nu(np(ls))})}),ll=nx({pubkey:oj,signer:nr(),writable:nr(),source:nu(nb([ns("transaction"),ns("lookupTable")]))}),lm=nx({accountKeys:np(ll),signatures:np(nc())}),lu=nx({parsed:nv(),program:nc(),programId:oj}),lf=nx({accounts:np(oj),data:nc(),programId:oj}),lc=ng(nb([lf,lu]),nb([nx({parsed:nv(),program:nc(),programId:nc()}),nx({accounts:np(nc()),data:nc(),programId:nc()})]),e=>"accounts"in e?na(e,lf):na(e,lu)),lh=nx({signatures:np(nc()),message:nx({accountKeys:np(ll),instructions:np(lc),recentBlockhash:nc(),addressTableLookups:nu(nl(np(ls)))})}),lx=nx({accountIndex:nm(),mint:nc(),owner:nu(nc()),uiTokenAmount:o8}),lb=nx({writable:np(oj),readonly:np(oj)}),lv=nx({err:o4,fee:nm(),innerInstructions:nu(nl(np(nx({index:nm(),instructions:np(nx({accounts:np(nm()),data:nc(),programIdIndex:nm()}))})))),preBalances:np(nm()),postBalances:np(nm()),logMessages:nu(nl(np(nc()))),preTokenBalances:nu(nl(np(lx))),postTokenBalances:nu(nl(np(lx))),loadedAddresses:nu(lb),computeUnitsConsumed:nu(nm())}),lg=nx({err:o4,fee:nm(),innerInstructions:nu(nl(np(nx({index:nm(),instructions:np(lc)})))),preBalances:np(nm()),postBalances:np(nm()),logMessages:nu(nl(np(nc()))),preTokenBalances:nu(nl(np(lx))),postTokenBalances:nu(nl(np(lx))),loadedAddresses:nu(lb),computeUnitsConsumed:nu(nm())}),ly=nb([ns(0),ns("legacy")]),lw=nx({pubkey:nc(),lamports:nm(),postBalance:nl(nm()),rewardType:nl(nc()),commission:nu(nl(nm()))});oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),transactions:np(nx({transaction:lo,meta:nl(lv),version:nu(ly)})),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),transactions:np(nx({transaction:lm,meta:nl(lv),version:nu(ly)})),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),transactions:np(nx({transaction:lh,meta:nl(lg),version:nu(ly)})),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),transactions:np(nx({transaction:lm,meta:nl(lg),version:nu(ly)})),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),rewards:nu(np(lw)),blockTime:nl(nm()),blockHeight:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),transactions:np(nx({transaction:lo,meta:nl(lv)})),rewards:nu(np(lw)),blockTime:nl(nm())}))),oZ(nl(nx({blockhash:nc(),previousBlockhash:nc(),parentSlot:nm(),signatures:np(nc()),blockTime:nl(nm())}))),oZ(nl(nx({slot:nm(),meta:nl(lv),blockTime:nu(nl(nm())),transaction:lo,version:nu(ly)}))),oZ(nl(nx({slot:nm(),transaction:lh,meta:nl(lg),blockTime:nu(nl(nm())),version:nu(ly)}))),oY(nx({blockhash:nc(),feeCalculator:nx({lamportsPerSignature:nm()})})),oY(nx({blockhash:nc(),lastValidBlockHeight:nm()})),oY(nr()),oZ(np(nx({slot:nm(),numTransactions:nm(),numSlots:nm(),samplePeriodSecs:nm()}))),oY(nl(nx({feeCalculator:nx({lamportsPerSignature:nm()})}))),oZ(nc()),oZ(nc());let lS=nx({err:o4,logs:np(nc()),signature:nc()});nx({result:oX(lS),subscription:nm()});class lE{constructor(e){this._keypair=void 0,this._keypair=e??sz()}static generate(){return new lE(sz())}static fromSecretKey(e,t){if(64!==e.byteLength)throw Error("bad secret key size");let a=e.slice(32,64);if(!t||!t.skipValidation){let t=sK(e.slice(0,32));for(let e=0;e<32;e++)if(a[e]!==t[e])throw Error("provided secretKey is invalid")}return new lE({publicKey:a,secretKey:e})}static fromSeed(e){let t=sK(e),a=new Uint8Array(64);return a.set(e),a.set(t,32),new lE({publicKey:t,secretKey:a})}get publicKey(){return new sY(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}let lN=Object.freeze({CreateLookupTable:{index:0,layout:rJ.w3([rJ.DH("instruction"),oc("recentSlot"),rJ.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:rJ.w3([rJ.DH("instruction")])},ExtendLookupTable:{index:2,layout:rJ.w3([rJ.DH("instruction"),oc(),rJ.O6(s0(),rJ.cY(rJ.DH(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:rJ.w3([rJ.DH("instruction")])},CloseLookupTable:{index:4,layout:rJ.w3([rJ.DH("instruction")])}});class lT{constructor(){}static createLookupTable(e){let[t,a]=sY.findProgramAddressSync([e.authority.toBuffer(),(0,rQ.Bq)(BigInt(e.recentSlot),8)],this.programId),d=ol(lN.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:a}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ox.programId,isSigner:!1,isWritable:!1}];return[new od({programId:this.programId,keys:i,data:d}),t]}static freezeLookupTable(e){let t=ol(lN.FreezeLookupTable),a=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new od({programId:this.programId,keys:a,data:t})}static extendLookupTable(e){let t=ol(lN.ExtendLookupTable,{addresses:e.addresses.map(e=>e.toBytes())}),a=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&a.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ox.programId,isSigner:!1,isWritable:!1}),new od({programId:this.programId,keys:a,data:t})}static deactivateLookupTable(e){let t=ol(lN.DeactivateLookupTable),a=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new od({programId:this.programId,keys:a,data:t})}static closeLookupTable(e){let t=ol(lN.CloseLookupTable),a=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new od({programId:this.programId,keys:a,data:t})}}lT.programId=new sY("AddressLookupTab1e1111111111111111111111111");let lA=Object.freeze({RequestUnits:{index:0,layout:rJ.w3([rJ.u8("instruction"),rJ.DH("units"),rJ.DH("additionalFee")])},RequestHeapFrame:{index:1,layout:rJ.w3([rJ.u8("instruction"),rJ.DH("bytes")])},SetComputeUnitLimit:{index:2,layout:rJ.w3([rJ.u8("instruction"),rJ.DH("units")])},SetComputeUnitPrice:{index:3,layout:rJ.w3([rJ.u8("instruction"),oc("microLamports")])}});class l_{constructor(){}static requestUnits(e){let t=ol(lA.RequestUnits,e);return new od({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){let t=ol(lA.RequestHeapFrame,e);return new od({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){let t=ol(lA.SetComputeUnitLimit,e);return new od({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){let t=ol(lA.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new od({keys:[],programId:this.programId,data:t})}}l_.programId=new sY("ComputeBudget111111111111111111111111111111");let lk=rJ.w3([rJ.u8("numSignatures"),rJ.u8("padding"),rJ.NX("signatureOffset"),rJ.NX("signatureInstructionIndex"),rJ.NX("publicKeyOffset"),rJ.NX("publicKeyInstructionIndex"),rJ.NX("messageDataOffset"),rJ.NX("messageDataSize"),rJ.NX("messageInstructionIndex")]);class lI{constructor(){}static createInstructionWithPublicKey(e){let{publicKey:t,message:a,signature:d,instructionIndex:i}=e;s3(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),s3(64===d.length,`Signature must be 64 bytes but received ${d.length} bytes`);let p=lk.span,r=p+t.length,n=r+d.length,s=i4.Buffer.alloc(n+a.length),o=null==i?65535:i;return lk.encode({numSignatures:1,padding:0,signatureOffset:r,signatureInstructionIndex:o,publicKeyOffset:p,publicKeyInstructionIndex:o,messageDataOffset:n,messageDataSize:a.length,messageInstructionIndex:o},s),s.fill(t,p),s.fill(d,r),s.fill(a,n),new od({keys:[],programId:lI.programId,data:s})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:a,instructionIndex:d}=e;s3(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{let e=lE.fromSecretKey(t),i=e.publicKey.toBytes(),p=sj(a,e.secretKey);return this.createInstructionWithPublicKey({publicKey:i,message:a,signature:p,instructionIndex:d})}catch(e){throw Error(`Error creating instruction; ${e}`)}}}lI.programId=new sY("Ed25519SigVerify111111111111111111111111111");let lB=(e,t)=>{let a=sM.sign(e,t);return[a.toCompactRawBytes(),a.recovery]};sM.utils.isValidPrivateKey;let lD=sM.getPublicKey,lP=rJ.w3([rJ.u8("numSignatures"),rJ.NX("signatureOffset"),rJ.u8("signatureInstructionIndex"),rJ.NX("ethAddressOffset"),rJ.u8("ethAddressInstructionIndex"),rJ.NX("messageDataOffset"),rJ.NX("messageDataSize"),rJ.u8("messageInstructionIndex"),rJ.av(20,"ethAddress"),rJ.av(64,"signature"),rJ.u8("recoveryId")]);class lO{constructor(){}static publicKeyToEthAddress(e){s3(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return i4.Buffer.from(sb(s$(e))).slice(-20)}catch(e){throw Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){let{publicKey:t,message:a,signature:d,recoveryId:i,instructionIndex:p}=e;return lO.createInstructionWithEthAddress({ethAddress:lO.publicKeyToEthAddress(t),message:a,signature:d,recoveryId:i,instructionIndex:p})}static createInstructionWithEthAddress(e){let t,{ethAddress:a,message:d,signature:i,recoveryId:p,instructionIndex:r=0}=e;s3(20===(t="string"==typeof a?a.startsWith("0x")?i4.Buffer.from(a.substr(2),"hex"):i4.Buffer.from(a,"hex"):a).length,`Address must be 20 bytes but received ${t.length} bytes`);let n=12+t.length,s=n+i.length+1,o=i4.Buffer.alloc(lP.span+d.length);return lP.encode({numSignatures:1,signatureOffset:n,signatureInstructionIndex:r,ethAddressOffset:12,ethAddressInstructionIndex:r,messageDataOffset:s,messageDataSize:d.length,messageInstructionIndex:r,signature:s$(i),ethAddress:s$(t),recoveryId:p},o),o.fill(s$(d),lP.span),new od({keys:[],programId:lO.programId,data:o})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:a,instructionIndex:d}=e;s3(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{let e=s$(t),i=lD(e,!1).slice(1),p=i4.Buffer.from(sb(s$(a))),[r,n]=lB(p,e);return this.createInstructionWithPublicKey({publicKey:i,message:a,signature:r,recoveryId:n,instructionIndex:d})}catch(e){throw Error(`Error creating instruction; ${e}`)}}}lO.programId=new sY("KeccakSecp256k11111111111111111111111111111");let lV=new sY("StakeConfig11111111111111111111111111111111");class lR{constructor(e,t,a){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=a}}lR.default=new lR(0,0,sY.default);let lM=Object.freeze({Initialize:{index:0,layout:rJ.w3([rJ.DH("instruction"),((e="authorized")=>rJ.w3([s0("staker"),s0("withdrawer")],e))(),((e="lockup")=>rJ.w3([rJ.Wg("unixTimestamp"),rJ.Wg("epoch"),s0("custodian")],e))()])},Authorize:{index:1,layout:rJ.w3([rJ.DH("instruction"),s0("newAuthorized"),rJ.DH("stakeAuthorizationType")])},Delegate:{index:2,layout:rJ.w3([rJ.DH("instruction")])},Split:{index:3,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("lamports")])},Withdraw:{index:4,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("lamports")])},Deactivate:{index:5,layout:rJ.w3([rJ.DH("instruction")])},Merge:{index:7,layout:rJ.w3([rJ.DH("instruction")])},AuthorizeWithSeed:{index:8,layout:rJ.w3([rJ.DH("instruction"),s0("newAuthorized"),rJ.DH("stakeAuthorizationType"),s2("authoritySeed"),s0("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class lC{constructor(){}static initialize(e){let{stakePubkey:t,authorized:a,lockup:d}=e,i=d||lR.default,p=ol(lM.Initialize,{authorized:{staker:s$(a.staker.toBuffer()),withdrawer:s$(a.withdrawer.toBuffer())},lockup:{unixTimestamp:i.unixTimestamp,epoch:i.epoch,custodian:s$(i.custodian.toBuffer())}});return new od({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1}],programId:this.programId,data:p})}static createAccountWithSeed(e){let t=new oi;t.add(ox.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:a,authorized:d,lockup:i}=e;return t.add(this.initialize({stakePubkey:a,authorized:d,lockup:i}))}static createAccount(e){let t=new oi;t.add(ox.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:a,authorized:d,lockup:i}=e;return t.add(this.initialize({stakePubkey:a,authorized:d,lockup:i}))}static delegate(e){let{stakePubkey:t,authorizedPubkey:a,votePubkey:d}=e,i=ol(lM.Delegate);return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!1},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:os,isSigner:!1,isWritable:!1},{pubkey:lV,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static authorize(e){let{stakePubkey:t,authorizedPubkey:a,newAuthorizedPubkey:d,stakeAuthorizationType:i,custodianPubkey:p}=e,r=ol(lM.Authorize,{newAuthorized:s$(d.toBuffer()),stakeAuthorizationType:i.index}),n=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!0,isWritable:!1}];return p&&n.push({pubkey:p,isSigner:!0,isWritable:!1}),new oi().add({keys:n,programId:this.programId,data:r})}static authorizeWithSeed(e){let{stakePubkey:t,authorityBase:a,authoritySeed:d,authorityOwner:i,newAuthorizedPubkey:p,stakeAuthorizationType:r,custodianPubkey:n}=e,s=ol(lM.AuthorizeWithSeed,{newAuthorized:s$(p.toBuffer()),stakeAuthorizationType:r.index,authoritySeed:d,authorityOwner:s$(i.toBuffer())}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!0,isWritable:!1},{pubkey:op,isSigner:!1,isWritable:!1}];return n&&o.push({pubkey:n,isSigner:!0,isWritable:!1}),new oi().add({keys:o,programId:this.programId,data:s})}static splitInstruction(e){let{stakePubkey:t,authorizedPubkey:a,splitStakePubkey:d,lamports:i}=e,p=ol(lM.Split,{lamports:i});return new od({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:p})}static split(e,t){let a=new oi;return a.add(ox.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),a.add(this.splitInstruction(e))}static splitWithSeed(e,t){let{stakePubkey:a,authorizedPubkey:d,splitStakePubkey:i,basePubkey:p,seed:r,lamports:n}=e,s=new oi;return s.add(ox.allocate({accountPubkey:i,basePubkey:p,seed:r,space:this.space,programId:this.programId})),t&&t>0&&s.add(ox.transfer({fromPubkey:e.authorizedPubkey,toPubkey:i,lamports:t})),s.add(this.splitInstruction({stakePubkey:a,authorizedPubkey:d,splitStakePubkey:i,lamports:n}))}static merge(e){let{stakePubkey:t,sourceStakePubKey:a,authorizedPubkey:d}=e,i=ol(lM.Merge);return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:os,isSigner:!1,isWritable:!1},{pubkey:d,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static withdraw(e){let{stakePubkey:t,authorizedPubkey:a,toPubkey:d,lamports:i,custodianPubkey:p}=e,r=ol(lM.Withdraw,{lamports:i}),n=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:os,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}];return p&&n.push({pubkey:p,isSigner:!0,isWritable:!1}),new oi().add({keys:n,programId:this.programId,data:r})}static deactivate(e){let{stakePubkey:t,authorizedPubkey:a}=e,d=ol(lM.Deactivate);return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:d})}}lC.programId=new sY("Stake11111111111111111111111111111111111111"),lC.space=200;let lL=Object.freeze({InitializeAccount:{index:0,layout:rJ.w3([rJ.DH("instruction"),((e="voteInit")=>rJ.w3([s0("nodePubkey"),s0("authorizedVoter"),s0("authorizedWithdrawer"),rJ.u8("commission")],e))()])},Authorize:{index:1,layout:rJ.w3([rJ.DH("instruction"),s0("newAuthorized"),rJ.DH("voteAuthorizationType")])},Withdraw:{index:3,layout:rJ.w3([rJ.DH("instruction"),rJ.Wg("lamports")])},UpdateValidatorIdentity:{index:4,layout:rJ.w3([rJ.DH("instruction")])},AuthorizeWithSeed:{index:10,layout:rJ.w3([rJ.DH("instruction"),((e="voteAuthorizeWithSeedArgs")=>rJ.w3([rJ.DH("voteAuthorizationType"),s0("currentAuthorityDerivedKeyOwnerPubkey"),s2("currentAuthorityDerivedKeySeed"),s0("newAuthorized")],e))()])}});Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class lU{constructor(){}static initializeAccount(e){let{votePubkey:t,nodePubkey:a,voteInit:d}=e,i=ol(lL.InitializeAccount,{voteInit:{nodePubkey:s$(d.nodePubkey.toBuffer()),authorizedVoter:s$(d.authorizedVoter.toBuffer()),authorizedWithdrawer:s$(d.authorizedWithdrawer.toBuffer()),commission:d.commission}});return new od({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:on,isSigner:!1,isWritable:!1},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static createAccount(e){let t=new oi;return t.add(ox.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){let{votePubkey:t,authorizedPubkey:a,newAuthorizedPubkey:d,voteAuthorizationType:i}=e,p=ol(lL.Authorize,{newAuthorized:s$(d.toBuffer()),voteAuthorizationType:i.index});return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:p})}static authorizeWithSeed(e){let{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:a,currentAuthorityDerivedKeySeed:d,newAuthorizedPubkey:i,voteAuthorizationType:p,votePubkey:r}=e,n=ol(lL.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:s$(a.toBuffer()),currentAuthorityDerivedKeySeed:d,newAuthorized:s$(i.toBuffer()),voteAuthorizationType:p.index}});return new oi().add({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:op,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static withdraw(e){let{votePubkey:t,authorizedWithdrawerPubkey:a,lamports:d,toPubkey:i}=e,p=ol(lL.Withdraw,{lamports:d});return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:p})}static safeWithdraw(e,t,a){if(e.lamports>t-a)throw Error("Withdraw will leave vote account with insufficient funds.");return lU.withdraw(e)}static updateValidatorIdentity(e){let{votePubkey:t,authorizedWithdrawerPubkey:a,nodePubkey:d}=e,i=ol(lL.UpdateValidatorIdentity);return new oi().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:d,isSigner:!0,isWritable:!1},{pubkey:a,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}}lU.programId=new sY("Vote111111111111111111111111111111111111111"),lU.space=3762,new sY("Va1idator1nfo111111111111111111111111111111"),nx({name:nc(),website:nu(nc()),details:nu(nc()),keybaseUsername:nu(nc())}),new sY("Vote111111111111111111111111111111111111111"),rJ.w3([s0("nodePubkey"),s0("authorizedWithdrawer"),rJ.u8("commission"),rJ.I0(),rJ.O6(rJ.w3([rJ.I0("slot"),rJ.DH("confirmationCount")]),rJ.cY(rJ.DH(),-8),"votes"),rJ.u8("rootSlotValid"),rJ.I0("rootSlot"),rJ.I0(),rJ.O6(rJ.w3([rJ.I0("epoch"),s0("authorizedVoter")]),rJ.cY(rJ.DH(),-8),"authorizedVoters"),rJ.w3([rJ.O6(rJ.w3([s0("authorizedPubkey"),rJ.I0("epochOfLastAuthorizedSwitch"),rJ.I0("targetEpoch")]),32,"buf"),rJ.I0("idx"),rJ.u8("isEmpty")],"priorVoters"),rJ.I0(),rJ.O6(rJ.w3([rJ.I0("epoch"),rJ.I0("credits"),rJ.I0("prevCredits")]),rJ.cY(rJ.DH(),-8),"epochCredits"),rJ.w3([rJ.I0("slot"),rJ.I0("timestamp")],"lastTimestamp")]);async function lF(e){try{let{searchParams:t}=new URL(e.url),a=t.get("userId");if(!a)return S.NextResponse.json({success:!1,error:"User ID is required"},{status:400});let d=_.qp.findByUserId(a).map(e=>{let{encryptedPrivateKey:t,...a}=e;return a});return S.NextResponse.json({success:!0,data:d})}catch(e){return console.error("Error fetching wallets:",e),S.NextResponse.json({success:!1,error:"Failed to fetch wallets"},{status:500})}}async function lz(e){try{let t,{privateKey:a,walletName:d,chain:i,userId:p}=await e.json();if(!a||!i||!p)return S.NextResponse.json({success:!1,error:"Private key, chain, and user ID are required"},{status:400});if(!["ETH","BSC","SOL"].includes(i))return S.NextResponse.json({success:!1,error:"Invalid chain. Must be ETH, BSC, or SOL"},{status:400});try{t=function(e,t){try{if("ETH"===t||"BSC"===t)return new i6(e).address;if("SOL"===t){let t=new Uint8Array(JSON.parse(e));return lE.fromSecretKey(t).publicKey.toString()}throw Error(`Unsupported chain: ${t}`)}catch(e){throw Error(`Invalid private key for chain ${t}`)}}(a,i)}catch(e){return S.NextResponse.json({success:!1,error:e.message},{status:400})}if(_.qp.findByUserId(p).some(e=>e.address===t&&e.chain===i))return S.NextResponse.json({success:!1,error:"Wallet already exists for this chain"},{status:400});let r=function(e){let t=new Uint8Array((0,E.randomBytes)(16)),a=(0,E.createCipheriv)(N,A,t),d=a.update(e,"utf8","hex");return d+=a.final("hex"),`${Buffer.from(t).toString("hex")}:${d}`}(a),n=`wallet_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,s={id:n,userId:p,address:t,encryptedPrivateKey:r,chain:i,name:d||`${i} Wallet`};return _.qp.create(s),S.NextResponse.json({success:!0,data:{id:n}})}catch(e){return console.error("Error adding wallet:",e),S.NextResponse.json({success:!1,error:"Failed to add wallet"},{status:500})}}async function lK(e){try{let{searchParams:t}=new URL(e.url),a=t.get("walletId");if(!a)return S.NextResponse.json({success:!1,error:"Wallet ID is required"},{status:400});return _.qp.delete(a),S.NextResponse.json({success:!0,data:!0})}catch(e){return console.error("Error deleting wallet:",e),S.NextResponse.json({success:!1,error:"Failed to delete wallet"},{status:500})}}async function lH(e){try{let t=_.qp.findById(e);if(!t)return null;return function(e){let[t,a]=e.split(":");if(!t||!a)throw Error("Invalid hash format for decryption.");let d=new Uint8Array(Buffer.from(t,"hex")),i=(0,E.createDecipheriv)(N,A,d),p=i.update(a,"hex","utf8");return p+=i.final("utf8")}(t.encryptedPrivateKey)}catch(e){return console.error("Error decrypting private key:",e),null}}let lj=new g.AppRouteRouteModule({definition:{kind:y.RouteKind.APP_ROUTE,page:"/api/wallets/route",pathname:"/api/wallets",filename:"route",bundlePath:"app/api/wallets/route"},resolvedPagePath:"C:\\Users\\User1\\Downloads\\TradingBot\\apps\\frontend\\src\\app\\api\\wallets\\route.ts",nextConfigOutput:"",userland:v}),{workAsyncStorage:lq,workUnitAsyncStorage:l$,serverHooks:lW}=lj;function lG(){return(0,w.patchFetch)({workAsyncStorage:lq,workUnitAsyncStorage:l$})}},4798:(e,t,a)=>{"use strict";t.I0=t.DH=t.NX=t.u8=t.cY=void 0,t.av=t.O6=t.w3=t.Wg=void 0;let d=a(9428);function i(e){if(!(e instanceof Uint8Array))throw TypeError("b must be a Uint8Array")}function p(e){return i(e),d.Buffer.from(e.buffer,e.byteOffset,e.length)}class r{constructor(e,t){if(!Number.isInteger(e))throw TypeError("span must be an integer");this.span=e,this.property=t}makeDestinationObject(){return{}}getSpan(e,t){if(0>this.span)throw RangeError("indeterminate span");return this.span}replicate(e){let t=Object.create(this.constructor.prototype);return Object.assign(t,this),t.property=e,t}fromArray(e){}}function n(e,t){return t.property?e+"["+t.property+"]":e}class s extends r{isCount(){throw Error("ExternalLayout is abstract")}}class o extends s{constructor(e,t=0,a){if(!(e instanceof r))throw TypeError("layout must be a Layout");if(!Number.isInteger(t))throw TypeError("offset must be integer or undefined");super(e.span,a||e.property),this.layout=e,this.offset=t}isCount(){return this.layout instanceof l||this.layout instanceof m}decode(e,t=0){return this.layout.decode(e,t+this.offset)}encode(e,t,a=0){return this.layout.encode(e,t,a+this.offset)}}class l extends r{constructor(e,t){if(super(e,t),6<this.span)throw RangeError("span must not exceed 6 bytes")}decode(e,t=0){return p(e).readUIntLE(t,this.span)}encode(e,t,a=0){return p(t).writeUIntLE(e,a,this.span),this.span}}class m extends r{constructor(e,t){if(super(e,t),6<this.span)throw RangeError("span must not exceed 6 bytes")}decode(e,t=0){return p(e).readUIntBE(t,this.span)}encode(e,t,a=0){return p(t).writeUIntBE(e,a,this.span),this.span}}function u(e){let t=Math.floor(e/0x100000000);return{hi32:t,lo32:e-0x100000000*t}}function f(e,t){return 0x100000000*e+t}class c extends r{constructor(e){super(8,e)}decode(e,t=0){let a=p(e),d=a.readUInt32LE(t);return f(a.readUInt32LE(t+4),d)}encode(e,t,a=0){let d=u(e),i=p(t);return i.writeUInt32LE(d.lo32,a),i.writeUInt32LE(d.hi32,a+4),8}}class h extends r{constructor(e){super(8,e)}decode(e,t=0){let a=p(e),d=a.readUInt32LE(t);return f(a.readInt32LE(t+4),d)}encode(e,t,a=0){let d=u(e),i=p(t);return i.writeUInt32LE(d.lo32,a),i.writeInt32LE(d.hi32,a+4),8}}class x extends r{constructor(e,t,a){if(!(e instanceof r))throw TypeError("elementLayout must be a Layout");if(!(t instanceof s&&t.isCount()||Number.isInteger(t)&&0<=t))throw TypeError("count must be non-negative integer or an unsigned integer ExternalLayout");let d=-1;t instanceof s||!(0<e.span)||(d=t*e.span),super(d,a),this.elementLayout=e,this.count=t}getSpan(e,t=0){if(0<=this.span)return this.span;let a=0,d=this.count;if(d instanceof s&&(d=d.decode(e,t)),0<this.elementLayout.span)a=d*this.elementLayout.span;else{let i=0;for(;i<d;)a+=this.elementLayout.getSpan(e,t+a),++i}return a}decode(e,t=0){let a=[],d=0,i=this.count;for(i instanceof s&&(i=i.decode(e,t));d<i;)a.push(this.elementLayout.decode(e,t)),t+=this.elementLayout.getSpan(e,t),d+=1;return a}encode(e,t,a=0){let d=this.elementLayout,i=e.reduce((e,i)=>e+d.encode(i,t,a+e),0);return this.count instanceof s&&this.count.encode(e.length,t,a),i}}class b extends r{constructor(e,t,a){if(!(Array.isArray(e)&&e.reduce((e,t)=>e&&t instanceof r,!0)))throw TypeError("fields must be array of Layout instances");for(let d of("boolean"==typeof t&&void 0===a&&(a=t,t=void 0),e))if(0>d.span&&void 0===d.property)throw Error("fields cannot contain unnamed variable-length layout");let d=-1;try{d=e.reduce((e,t)=>e+t.getSpan(),0)}catch(e){}super(d,t),this.fields=e,this.decodePrefixes=!!a}getSpan(e,t=0){if(0<=this.span)return this.span;let a=0;try{a=this.fields.reduce((a,d)=>{let i=d.getSpan(e,t);return t+=i,a+i},0)}catch(e){throw RangeError("indeterminate span")}return a}decode(e,t=0){i(e);let a=this.makeDestinationObject();for(let d of this.fields)if(void 0!==d.property&&(a[d.property]=d.decode(e,t)),t+=d.getSpan(e,t),this.decodePrefixes&&e.length===t)break;return a}encode(e,t,a=0){let d=a,i=0,p=0;for(let d of this.fields){let r=d.span;if(p=0<r?r:0,void 0!==d.property){let i=e[d.property];void 0!==i&&(p=d.encode(i,t,a),0>r&&(r=d.getSpan(t,a)))}i=a,a+=r}return i+p-d}fromArray(e){let t=this.makeDestinationObject();for(let a of this.fields)void 0!==a.property&&0<e.length&&(t[a.property]=e.shift());return t}layoutFor(e){if("string"!=typeof e)throw TypeError("property must be string");for(let t of this.fields)if(t.property===e)return t}offsetOf(e){if("string"!=typeof e)throw TypeError("property must be string");let t=0;for(let a of this.fields){if(a.property===e)return t;0>a.span?t=-1:0<=t&&(t+=a.span)}}}class v{constructor(e){this.property=e}decode(e,t){throw Error("UnionDiscriminator is abstract")}encode(e,t,a){throw Error("UnionDiscriminator is abstract")}}class g extends v{constructor(e,t){if(!(e instanceof s&&e.isCount()))throw TypeError("layout must be an unsigned integer ExternalLayout");super(t||e.property||"variant"),this.layout=e}decode(e,t){return this.layout.decode(e,t)}encode(e,t,a){return this.layout.encode(e,t,a)}}class y extends r{constructor(e,t,a){let d;if(e instanceof l||e instanceof m)d=new g(new o(e));else if(e instanceof s&&e.isCount())d=new g(e);else if(e instanceof v)d=e;else throw TypeError("discr must be a UnionDiscriminator or an unsigned integer layout");if(void 0===t&&(t=null),!(null===t||t instanceof r))throw TypeError("defaultLayout must be null or a Layout");if(null!==t){if(0>t.span)throw Error("defaultLayout must have constant span");void 0===t.property&&(t=t.replicate("content"))}let i=-1;t&&0<=(i=t.span)&&(e instanceof l||e instanceof m)&&(i+=d.layout.span),super(i,a),this.discriminator=d,this.usesPrefixDiscriminator=e instanceof l||e instanceof m,this.defaultLayout=t,this.registry={};let p=this.defaultGetSourceVariant.bind(this);this.getSourceVariant=function(e){return p(e)},this.configGetSourceVariant=function(e){p=e.bind(this)}}getSpan(e,t=0){if(0<=this.span)return this.span;let a=this.getVariant(e,t);if(!a)throw Error("unable to determine span for unrecognized variant");return a.getSpan(e,t)}defaultGetSourceVariant(e){if(Object.prototype.hasOwnProperty.call(e,this.discriminator.property)){if(this.defaultLayout&&this.defaultLayout.property&&Object.prototype.hasOwnProperty.call(e,this.defaultLayout.property))return;let t=this.registry[e[this.discriminator.property]];if(t&&(!t.layout||t.property&&Object.prototype.hasOwnProperty.call(e,t.property)))return t}else for(let t in this.registry){let a=this.registry[t];if(a.property&&Object.prototype.hasOwnProperty.call(e,a.property))return a}throw Error("unable to infer src variant")}decode(e,t=0){let a,d=this.discriminator,i=d.decode(e,t),p=this.registry[i];if(void 0===p){let p=this.defaultLayout,r=0;this.usesPrefixDiscriminator&&(r=d.layout.span),(a=this.makeDestinationObject())[d.property]=i,a[p.property]=p.decode(e,t+r)}else a=p.decode(e,t);return a}encode(e,t,a=0){let d=this.getSourceVariant(e);if(void 0===d){let d=this.discriminator,i=this.defaultLayout,p=0;return this.usesPrefixDiscriminator&&(p=d.layout.span),d.encode(e[d.property],t,a),p+i.encode(e[i.property],t,a+p)}return d.encode(e,t,a)}addVariant(e,t,a){let d=new w(this,e,t,a);return this.registry[e]=d,d}getVariant(e,t=0){let a;return a=e instanceof Uint8Array?this.discriminator.decode(e,t):e,this.registry[a]}}class w extends r{constructor(e,t,a,d){if(!(e instanceof y))throw TypeError("union must be a Union");if(!Number.isInteger(t)||0>t)throw TypeError("variant must be a (non-negative) integer");if("string"==typeof a&&void 0===d&&(d=a,a=null),a){if(!(a instanceof r))throw TypeError("layout must be a Layout");if(null!==e.defaultLayout&&0<=a.span&&a.span>e.defaultLayout.span)throw Error("variant span exceeds span of containing union");if("string"!=typeof d)throw TypeError("variant must have a String property")}let i=e.span;0>e.span&&0<=(i=a?a.span:0)&&e.usesPrefixDiscriminator&&(i+=e.discriminator.layout.span),super(i,d),this.union=e,this.variant=t,this.layout=a||null}getSpan(e,t=0){if(0<=this.span)return this.span;let a=0;this.union.usesPrefixDiscriminator&&(a=this.union.discriminator.layout.span);let d=0;return this.layout&&(d=this.layout.getSpan(e,t+a)),a+d}decode(e,t=0){let a=this.makeDestinationObject();if(this!==this.union.getVariant(e,t))throw Error("variant mismatch");let d=0;return this.union.usesPrefixDiscriminator&&(d=this.union.discriminator.layout.span),this.layout?a[this.property]=this.layout.decode(e,t+d):this.property?a[this.property]=!0:this.union.usesPrefixDiscriminator&&(a[this.union.discriminator.property]=this.variant),a}encode(e,t,a=0){let d=0;if(this.union.usesPrefixDiscriminator&&(d=this.union.discriminator.layout.span),this.layout&&!Object.prototype.hasOwnProperty.call(e,this.property))throw TypeError("variant lacks property "+this.property);this.union.discriminator.encode(this.variant,t,a);let i=d;if(this.layout&&(this.layout.encode(e[this.property],t,a+d),i+=this.layout.getSpan(t,a+d),0<=this.union.span&&i>this.union.span))throw Error("encoded variant overruns containing union");return i}fromArray(e){if(this.layout)return this.layout.fromArray(e)}}function S(e){return 0>e&&(e+=0x100000000),e}class E extends r{constructor(e,t,a){if(!(e instanceof l||e instanceof m))throw TypeError("word must be a UInt or UIntBE layout");if("string"==typeof t&&void 0===a&&(a=t,t=!1),4<e.span)throw RangeError("word cannot exceed 32 bits");super(e.span,a),this.word=e,this.msb=!!t,this.fields=[];let d=0;this._packedSetValue=function(e){return d=S(e),this},this._packedGetValue=function(){return d}}decode(e,t=0){let a=this.makeDestinationObject(),d=this.word.decode(e,t);for(let t of(this._packedSetValue(d),this.fields))void 0!==t.property&&(a[t.property]=t.decode(e));return a}encode(e,t,a=0){let d=this.word.decode(t,a);for(let t of(this._packedSetValue(d),this.fields))if(void 0!==t.property){let a=e[t.property];void 0!==a&&t.encode(a)}return this.word.encode(this._packedGetValue(),t,a)}addField(e,t){let a=new N(this,e,t);return this.fields.push(a),a}addBoolean(e){let t=new T(this,e);return this.fields.push(t),t}fieldFor(e){if("string"!=typeof e)throw TypeError("property must be string");for(let t of this.fields)if(t.property===e)return t}}class N{constructor(e,t,a){if(!(e instanceof E))throw TypeError("container must be a BitStructure");if(!Number.isInteger(t)||0>=t)throw TypeError("bits must be positive integer");let d=8*e.span,i=e.fields.reduce((e,t)=>e+t.bits,0);if(t+i>d)throw Error("bits too long for span remainder ("+(d-i)+" of "+d+" remain)");this.container=e,this.bits=t,this.valueMask=(1<<t)-1,32===t&&(this.valueMask=0xffffffff),this.start=i,this.container.msb&&(this.start=d-i-t),this.wordMask=S(this.valueMask<<this.start),this.property=a}decode(e,t){return S(this.container._packedGetValue()&this.wordMask)>>>this.start}encode(e){if("number"!=typeof e||!Number.isInteger(e)||e!==S(e&this.valueMask))throw TypeError(n("BitField.encode",this)+" value must be integer not exceeding "+this.valueMask);let t=this.container._packedGetValue(),a=S(e<<this.start);this.container._packedSetValue(S(t&~this.wordMask)|a)}}class T extends N{constructor(e,t){super(e,1,t)}decode(e,t){return!!super.decode(e,t)}encode(e){"boolean"==typeof e&&(e*=1),super.encode(e)}}class A extends r{constructor(e,t){if(!(e instanceof s&&e.isCount()||Number.isInteger(e)&&0<=e))throw TypeError("length must be positive integer or an unsigned integer ExternalLayout");let a=-1;e instanceof s||(a=e),super(a,t),this.length=e}getSpan(e,t){let a=this.span;return 0>a&&(a=this.length.decode(e,t)),a}decode(e,t=0){let a=this.span;return 0>a&&(a=this.length.decode(e,t)),p(e).slice(t,t+a)}encode(e,t,a){let d=this.length;if(this.length instanceof s&&(d=e.length),!(e instanceof Uint8Array&&d===e.length))throw TypeError(n("Blob.encode",this)+" requires (length "+d+") Uint8Array as src");if(a+d>t.length)throw RangeError("encoding overruns Uint8Array");let i=p(e);return p(t).write(i.toString("hex"),a,d,"hex"),this.length instanceof s&&this.length.encode(d,t,a),d}}t.cY=(e,t,a)=>new o(e,t,a),t.u8=e=>new l(1,e),t.NX=e=>new l(2,e),t.DH=e=>new l(4,e),t.I0=e=>new c(e),t.Wg=e=>new h(e),t.w3=(e,t,a)=>new b(e,t,a),t.O6=(e,t,a)=>new x(e,t,a),t.av=(e,t)=>new A(e,t)},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5511:e=>{"use strict";e.exports=require("crypto")},5832:(e,t,a)=>{"use strict";let d=a(2329);t.implementation=class{constructor(e){let t=e[0],a=e[1],i=null;if(void 0!==a&&"failure"===(i=d.basicURLParse(a)))throw TypeError("Invalid base URL");let p=d.basicURLParse(t,{baseURL:i});if("failure"===p)throw TypeError("Invalid URL");this._url=p}get href(){return d.serializeURL(this._url)}set href(e){let t=d.basicURLParse(e);if("failure"===t)throw TypeError("Invalid URL");this._url=t}get origin(){return d.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){d.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){d.cannotHaveAUsernamePasswordPort(this._url)||d.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){d.cannotHaveAUsernamePasswordPort(this._url)||d.setThePassword(this._url,e)}get host(){let e=this._url;return null===e.host?"":null===e.port?d.serializeHost(e.host):d.serializeHost(e.host)+":"+d.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||d.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":d.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||d.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":d.serializeInteger(this._url.port)}set port(e){d.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:d.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],d.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){let t=this._url;if(""===e){t.query=null;return}let a="?"===e[0]?e.substring(1):e;t.query="",d.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e){this._url.fragment=null;return}let t="#"===e[0]?e.substring(1):e;this._url.fragment="",d.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},6230:(e,t,a)=>{"use strict";var d=a(1997),i=a(62),p={TRANSITIONAL:0,NONTRANSITIONAL:1};function r(e){return e.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function n(e){for(var t=0,a=i.length-1;t<=a;){var d=Math.floor((t+a)/2),p=i[d];if(p[0][0]<=e&&p[0][1]>=e)return p;p[0][0]>e?a=d-1:t=d+1}return null}var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function o(e){return e.replace(s,"_").length}var l=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function m(e,t,a){var i=function(e,t,a){for(var d=!1,i="",r=o(e),s=0;s<r;++s){var l=e.codePointAt(s),m=n(l);switch(m[1]){case"disallowed":d=!0,i+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,m[2]);break;case"deviation":a===p.TRANSITIONAL?i+=String.fromCodePoint.apply(String,m[2]):i+=String.fromCodePoint(l);break;case"valid":i+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":t?(d=!0,i+=String.fromCodePoint(l)):i+=String.fromCodePoint.apply(String,m[2]);break;case"disallowed_STD3_valid":t&&(d=!0),i+=String.fromCodePoint(l)}}return{string:i,error:d}}(e,t,a);i.string=r(i.string);for(var s=i.string.split("."),u=0;u<s.length;++u)try{var f=function(e,t){"xn--"===e.substr(0,4)&&(e=d.toUnicode(e),p.NONTRANSITIONAL);var a=!1;(r(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(l))&&(a=!0);for(var i=o(e),s=0;s<i;++s){var u=n(e.codePointAt(s));if(m===p.TRANSITIONAL&&"valid"!==u[1]||m===p.NONTRANSITIONAL&&"valid"!==u[1]&&"deviation"!==u[1]){a=!0;break}}return{label:e,error:a}}(s[u]);s[u]=f.label,i.error=i.error||f.error}catch(e){i.error=!0}return{string:s.join("."),error:i.error}}e.exports.toASCII=function(e,t,a,i){var p=m(e,t,a),r=p.string.split(".");if(r=r.map(function(e){try{return d.toASCII(e)}catch(t){return p.error=!0,e}}),i){var n=r.slice(0,r.length-1).join(".").length;(n.length>253||0===n.length)&&(p.error=!0);for(var s=0;s<r.length;++s)if(r.length>63||0===r.length){p.error=!0;break}}return p.error?null:r.join(".")},e.exports.toUnicode=function(e,t){var a=m(e,t,p.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=p},6301:(e,t,a)=>{var d=a(9021),i=a(3873),p=a(4340),r=i.join,n=i.dirname,s=d.accessSync&&function(e){try{d.accessSync(e)}catch(e){return!1}return!0}||d.existsSync||i.existsSync,o={arrow:process.env.NODE_BINDINGS_ARROW||" → ",compiled:process.env.NODE_BINDINGS_COMPILED_DIR||"compiled",platform:process.platform,arch:process.arch,nodePreGyp:"node-v"+process.versions.modules+"-"+process.platform+"-"+process.arch,version:process.versions.node,bindings:"bindings.node",try:[["module_root","build","bindings"],["module_root","build","Debug","bindings"],["module_root","build","Release","bindings"],["module_root","out","Debug","bindings"],["module_root","Debug","bindings"],["module_root","out","Release","bindings"],["module_root","Release","bindings"],["module_root","build","default","bindings"],["module_root","compiled","version","platform","arch","bindings"],["module_root","addon-build","release","install-root","bindings"],["module_root","addon-build","debug","install-root","bindings"],["module_root","addon-build","default","install-root","bindings"],["module_root","lib","binding","nodePreGyp","bindings"]]};e.exports=t=function(e){"string"==typeof e?e={bindings:e}:e||(e={}),Object.keys(o).map(function(t){t in e||(e[t]=o[t])}),e.module_root||(e.module_root=t.getRoot(t.getFileName())),".node"!=i.extname(e.bindings)&&(e.bindings+=".node");for(var a,d,p,n=require,s=[],l=0,m=e.try.length;l<m;l++){a=r.apply(null,e.try[l].map(function(t){return e[t]||t})),s.push(a);try{return d=e.path?n.resolve(a):n(a),e.path||(d.path=a),d}catch(e){if("MODULE_NOT_FOUND"!==e.code&&"QUALIFIED_PATH_RESOLUTION_FAILED"!==e.code&&!/not find/i.test(e.message))throw e}}throw(p=Error("Could not locate the bindings file. Tried:\n"+s.map(function(t){return e.arrow+t}).join("\n"))).tries=s,p},t.getFileName=function(e){var t,a=Error.prepareStackTrace,d=Error.stackTraceLimit,i={};return Error.stackTraceLimit=10,Error.prepareStackTrace=function(a,d){for(var i=0,p=d.length;i<p;i++)if((t=d[i].getFileName())!==__filename){if(!e)return;else if(t!==e)return}},Error.captureStackTrace(i),i.stack,Error.prepareStackTrace=a,Error.stackTraceLimit=d,0===t.indexOf("file://")&&(t=p(t)),t},t.getRoot=function(e){for(var t,a=n(e);;){if("."===a&&(a=process.cwd()),s(r(a,"package.json"))||s(r(a,"node_modules")))return a;if(t===a)throw Error('Could not find module root given file: "'+e+'". Do you have a `package.json` file? ');t=a,a=r(a,"..")}}},7394:(e,t)=>{"use strict";function a(e,t,a){return t<=e&&e<=a}function d(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function i(e){this.tokens=[].slice.call(e)}function p(e,t){if(e)throw TypeError("Decoder error");return t||65533}i.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.shift():-1},prepend:function(e){if(Array.isArray(e))for(;e.length;)this.tokens.unshift(e.pop());else this.tokens.unshift(e)},push:function(e){if(Array.isArray(e))for(;e.length;)this.tokens.push(e.shift());else this.tokens.push(e)}};var r="utf-8";function n(e,t){if(!(this instanceof n))return new n(e,t);if((e=void 0!==e?String(e).toLowerCase():r)!==r)throw Error("Encoding not supported. Only utf-8 is supported");t=d(t),this._streaming=!1,this._BOMseen=!1,this._decoder=null,this._fatal=!!t.fatal,this._ignoreBOM=!!t.ignoreBOM,Object.defineProperty(this,"encoding",{value:"utf-8"}),Object.defineProperty(this,"fatal",{value:this._fatal}),Object.defineProperty(this,"ignoreBOM",{value:this._ignoreBOM})}function s(e,t){if(!(this instanceof s))return new s(e,t);if((e=void 0!==e?String(e).toLowerCase():r)!==r)throw Error("Encoding not supported. Only utf-8 is supported");t=d(t),this._streaming=!1,this._encoder=null,this._options={fatal:!!t.fatal},Object.defineProperty(this,"encoding",{value:"utf-8"})}function o(e){var t=e.fatal,d=0,i=0,r=0,n=128,s=191;this.handler=function(e,o){if(-1===o&&0!==r)return r=0,p(t);if(-1===o)return -1;if(0===r){if(a(o,0,127))return o;if(a(o,194,223))r=1,d=o-192;else if(a(o,224,239))224===o&&(n=160),237===o&&(s=159),r=2,d=o-224;else{if(!a(o,240,244))return p(t);240===o&&(n=144),244===o&&(s=143),r=3,d=o-240}return d<<=6*r,null}if(!a(o,n,s))return d=r=i=0,n=128,s=191,e.prepend(o),p(t);if(n=128,s=191,i+=1,d+=o-128<<6*(r-i),i!==r)return null;var l=d;return d=r=i=0,l}}function l(e){e.fatal,this.handler=function(e,t){if(-1===t)return -1;if(a(t,0,127))return t;a(t,128,2047)?(d=1,i=192):a(t,2048,65535)?(d=2,i=224):a(t,65536,1114111)&&(d=3,i=240);for(var d,i,p=[(t>>6*d)+i];d>0;){var r=t>>6*(d-1);p.push(128|63&r),d-=1}return p}}n.prototype={decode:function(e,t){a="object"==typeof e&&e instanceof ArrayBuffer?new Uint8Array(e):"object"==typeof e&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=d(t),this._streaming||(this._decoder=new o({fatal:this._fatal}),this._BOMseen=!1),this._streaming=!!t.stream;for(var a,p,r=new i(a),n=[];!r.endOfStream()&&-1!==(p=this._decoder.handler(r,r.read()));)null!==p&&(Array.isArray(p)?n.push.apply(n,p):n.push(p));if(!this._streaming){do{if(-1===(p=this._decoder.handler(r,r.read())))break;if(null===p)continue;Array.isArray(p)?n.push.apply(n,p):n.push(p)}while(!r.endOfStream());this._decoder=null}!n.length||-1===["utf-8"].indexOf(this.encoding)||this._ignoreBOM||this._BOMseen||(65279===n[0]?(this._BOMseen=!0,n.shift()):this._BOMseen=!0);for(var s="",l=0;l<n.length;++l){var m=n[l];m<=65535?s+=String.fromCharCode(m):(m-=65536,s+=String.fromCharCode((m>>10)+55296,(1023&m)+56320))}return s}},s.prototype={encode:function(e,t){e=e?String(e):"",t=d(t),this._streaming||(this._encoder=new l(this._options)),this._streaming=!!t.stream;for(var a,p=[],r=new i(function(e){for(var t=String(e),a=t.length,d=0,i=[];d<a;){var p=t.charCodeAt(d);if(p<55296||p>57343)i.push(p);else if(56320<=p&&p<=57343)i.push(65533);else if(55296<=p&&p<=56319)if(d===a-1)i.push(65533);else{var r=e.charCodeAt(d+1);if(56320<=r&&r<=57343){var n=1023&p,s=1023&r;i.push(65536+(n<<10)+s),d+=1}else i.push(65533)}d+=1}return i}(e));!r.endOfStream()&&-1!==(a=this._encoder.handler(r,r.read()));)Array.isArray(a)?p.push.apply(p,a):p.push(a);if(!this._streaming){for(;-1!==(a=this._encoder.handler(r,r.read()));)Array.isArray(a)?p.push.apply(p,a):p.push(a);this._encoder=null}return new Uint8Array(p)}},t.TextEncoder=s,t.TextDecoder=n},7646:e=>{"use strict";e.exports.mixin=function(e,t){let a=Object.getOwnPropertyNames(t);for(let d=0;d<a.length;++d)Object.defineProperty(e,a[d],Object.getOwnPropertyDescriptor(t,a[d]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},7801:(e,t,a)=>{"use strict";let d=a(8e3).v4;e.exports=function(e,t,a,i){if("string"!=typeof e)throw TypeError(e+" must be a string");let p="number"==typeof(i=i||{}).version?i.version:2;if(1!==p&&2!==p)throw TypeError(p+" must be 1 or 2");let r={method:e};if(2===p&&(r.jsonrpc="2.0"),t){if("object"!=typeof t&&!Array.isArray(t))throw TypeError(t+" must be an object, array or omitted");r.params=t}return void 0===a?r.id=("function"==typeof i.generator?i.generator:function(){return d()})(r,i):2===p&&null===a?i.notificationIdNull&&(r.id=null):r.id=a,r}},7821:(e,t,a)=>{"use strict";var d=a(3945).Buffer;e.exports=function(e){if(e.length>=255)throw TypeError("Alphabet too long");for(var t=new Uint8Array(256),a=0;a<t.length;a++)t[a]=255;for(var i=0;i<e.length;i++){var p=e.charAt(i),r=p.charCodeAt(0);if(255!==t[r])throw TypeError(p+" is ambiguous");t[r]=i}var n=e.length,s=e.charAt(0),o=Math.log(n)/Math.log(256),l=Math.log(256)/Math.log(n);function m(e){if("string"!=typeof e)throw TypeError("Expected String");if(0===e.length)return d.alloc(0);for(var a=0,i=0,p=0;e[a]===s;)i++,a++;for(var r=(e.length-a)*o+1>>>0,l=new Uint8Array(r);a<e.length;){var m=e.charCodeAt(a);if(m>255)return;var u=t[m];if(255===u)return;for(var f=0,c=r-1;(0!==u||f<p)&&-1!==c;c--,f++)u+=n*l[c]>>>0,l[c]=u%256>>>0,u=u/256>>>0;if(0!==u)throw Error("Non-zero carry");p=f,a++}for(var h=r-p;h!==r&&0===l[h];)h++;var x=d.allocUnsafe(i+(r-h));x.fill(0,0,i);for(var b=i;h!==r;)x[b++]=l[h++];return x}return{encode:function(t){if((Array.isArray(t)||t instanceof Uint8Array)&&(t=d.from(t)),!d.isBuffer(t))throw TypeError("Expected Buffer");if(0===t.length)return"";for(var a=0,i=0,p=0,r=t.length;p!==r&&0===t[p];)p++,a++;for(var o=(r-p)*l+1>>>0,m=new Uint8Array(o);p!==r;){for(var u=t[p],f=0,c=o-1;(0!==u||f<i)&&-1!==c;c--,f++)u+=256*m[c]>>>0,m[c]=u%n>>>0,u=u/n>>>0;if(0!==u)throw Error("Non-zero carry");i=f,p++}for(var h=o-i;h!==o&&0===m[h];)h++;for(var x=s.repeat(a);h<o;++h)x+=e.charAt(m[h]);return x},decodeUnsafe:m,decode:function(e){var t=m(e);if(t)return t;throw Error("Non-base"+n+" character")}}}},7851:(e,t,a)=>{"use strict";let d;try{d=a(6301)("bigint_buffer")}catch(e){console.warn("bigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)")}t.k5=function(e){if(void 0===d){let t=Buffer.from(e);t.reverse();let a=t.toString("hex");return 0===a.length?BigInt(0):BigInt(`0x${a}`)}return d.toBigInt(e,!1)},t.Bq=function(e,t){if(void 0===d){let a=e.toString(16),d=Buffer.from(a.padStart(2*t,"0").slice(0,2*t),"hex");return d.reverse(),d}return d.fromBigInt(e,Buffer.allocUnsafe(t),!1)}},7944:(e,t,a)=>{e.exports=a(7821)("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},8e3:(e,t,a)=>{"use strict";a.d(t,{v4:()=>l});var d=a(5511),i=a.n(d);let p=new Uint8Array(256),r=p.length,n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).substr(1));let o=function(e,t=0){let a=(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase();if(!("string"==typeof a&&n.test(a)))throw TypeError("Stringified UUID is invalid");return a},l=function(e,t,a){let d=(e=e||{}).random||(e.rng||function(){return r>p.length-16&&(i().randomFillSync(p),r=0),p.slice(r,r+=16)})();if(d[6]=15&d[6]|64,d[8]=63&d[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=d[e];return t}return o(d)}},8009:()=>{},8281:()=>{},8923:(e,t,a)=>{"use strict";a.d(t,{uR:()=>r,vC:()=>n,qp:()=>p});let d=require("better-sqlite3"),i=new(a.n(d)())(process.env.DATABASE_PATH||"trading_bot.db"),p={create:e=>i.prepare(`
      INSERT INTO wallets (id, user_id, address, encrypted_private_key, chain, name)
      VALUES (?, ?, ?, ?, ?, ?)
    `).run(e.id,e.userId,e.address,e.encryptedPrivateKey,e.chain,e.name),findByUserId:e=>i.prepare("SELECT * FROM wallets WHERE user_id = ?").all(e).map(e=>({id:e.id,userId:e.user_id,address:e.address,encryptedPrivateKey:e.encrypted_private_key,chain:e.chain,name:e.name,createdAt:e.created_at})),findById:e=>{let t=i.prepare("SELECT * FROM wallets WHERE id = ?").get(e);return t?{id:t.id,userId:t.user_id,address:t.address,encryptedPrivateKey:t.encrypted_private_key,chain:t.chain,name:t.name,createdAt:t.created_at}:null},delete:e=>i.prepare("DELETE FROM wallets WHERE id = ?").run(e)},r={create:e=>i.prepare(`
      INSERT INTO bot_configs (id, user_id, wallet_id, bot_type, config_data, is_active)
      VALUES (?, ?, ?, ?, ?, ?)
    `).run(e.id,e.userId,e.walletId,"ARBITRAGE",JSON.stringify(e),e.isActive),findByUserId:e=>i.prepare("SELECT * FROM bot_configs WHERE user_id = ?").all(e).map(e=>JSON.parse(e.config_data)),findById:e=>{let t=i.prepare("SELECT * FROM bot_configs WHERE id = ?").get(e);return t?JSON.parse(t.config_data):null},updateStatus:(e,t)=>i.prepare("UPDATE bot_configs SET is_active = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?").run(t,e),delete:e=>i.prepare("DELETE FROM bot_configs WHERE id = ?").run(e)},n={create:e=>i.prepare(`
      INSERT INTO trades (id, bot_config_id, bot_type, tx_hash, chain, token_in, token_out, amount_in, amount_out, gas_used, gas_price, profit, status)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).run(e.id,e.botConfigId,e.botType,e.txHash,e.chain,e.tokenIn,e.tokenOut,e.amountIn,e.amountOut,e.gasUsed,e.gasPrice,e.profit,e.status),findByBotConfigId:e=>i.prepare("SELECT * FROM trades WHERE bot_config_id = ? ORDER BY created_at DESC").all(e).map(e=>({id:e.id,botConfigId:e.bot_config_id,botType:e.bot_type,txHash:e.tx_hash,chain:e.chain,tokenIn:e.token_in,tokenOut:e.token_out,amountIn:e.amount_in,amountOut:e.amount_out,gasUsed:e.gas_used,gasPrice:e.gas_price,profit:e.profit,status:e.status,createdAt:e.created_at,completedAt:e.completed_at})),findByUserId:e=>i.prepare(`
      SELECT t.* FROM trades t
      JOIN bot_configs bc ON t.bot_config_id = bc.id
      WHERE bc.user_id = ?
      ORDER BY t.created_at DESC
    `).all(e).map(e=>({id:e.id,botConfigId:e.bot_config_id,botType:e.bot_type,txHash:e.tx_hash,chain:e.chain,tokenIn:e.token_in,tokenOut:e.token_out,amountIn:e.amount_in,amountOut:e.amount_out,gasUsed:e.gas_used,gasPrice:e.gas_price,profit:e.profit,status:e.status,createdAt:e.created_at,completedAt:e.completed_at})),updateStatus:(e,t,a)=>i.prepare("UPDATE trades SET status = ?, completed_at = ? WHERE id = ?").run(t,a,e)};i.exec(`
    CREATE TABLE IF NOT EXISTS users (
      id TEXT PRIMARY KEY,
      email TEXT UNIQUE NOT NULL,
      password_hash TEXT NOT NULL,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )
  `),i.exec(`
    CREATE TABLE IF NOT EXISTS wallets (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      address TEXT NOT NULL,
      encrypted_private_key TEXT NOT NULL,
      chain TEXT NOT NULL,
      name TEXT,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users (id)
    )
  `),i.exec(`
    CREATE TABLE IF NOT EXISTS bot_configs (
      id TEXT PRIMARY KEY,
      user_id TEXT NOT NULL,
      wallet_id TEXT NOT NULL,
      bot_type TEXT NOT NULL,
      config_data TEXT NOT NULL,
      is_active BOOLEAN DEFAULT FALSE,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users (id),
      FOREIGN KEY (wallet_id) REFERENCES wallets (id)
    )
  `),i.exec(`
    CREATE TABLE IF NOT EXISTS trades (
      id TEXT PRIMARY KEY,
      bot_config_id TEXT NOT NULL,
      bot_type TEXT NOT NULL,
      tx_hash TEXT NOT NULL,
      chain TEXT NOT NULL,
      token_in TEXT NOT NULL,
      token_out TEXT NOT NULL,
      amount_in TEXT NOT NULL,
      amount_out TEXT NOT NULL,
      gas_used TEXT NOT NULL,
      gas_price TEXT NOT NULL,
      profit TEXT,
      status TEXT NOT NULL,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      completed_at DATETIME,
      FOREIGN KEY (bot_config_id) REFERENCES bot_configs (id)
    )
  `),i.exec(`
    CREATE TABLE IF NOT EXISTS bot_status (
      bot_config_id TEXT PRIMARY KEY,
      is_running BOOLEAN DEFAULT FALSE,
      last_activity DATETIME,
      total_trades INTEGER DEFAULT 0,
      total_profit TEXT DEFAULT '0',
      errors TEXT,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (bot_config_id) REFERENCES bot_configs (id)
    )
  `),console.log("Database initialized successfully")},9021:e=>{"use strict";e.exports=require("fs")},9248:function(e,t,a){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,t,a,d){void 0===d&&(d=a),Object.defineProperty(e,d,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,d){void 0===d&&(d=a),e[d]=t[a]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),p=this&&this.__decorate||function(e,t,a,d){var i,p=arguments.length,r=p<3?t:null===d?d=Object.getOwnPropertyDescriptor(t,a):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,d);else for(var n=e.length-1;n>=0;n--)(i=e[n])&&(r=(p<3?i(r):p>3?i(t,a,r):i(t,a))||r);return p>3&&r&&Object.defineProperty(t,a,r),r},r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&d(t,e,a);return i(t,e),t},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.deserializeUnchecked=t.deserialize=t.serialize=t.BinaryReader=t.BinaryWriter=t.BorshError=t.baseDecode=t.baseEncode=void 0;let s=n(a(3778)),o=n(a(7944)),l=r(a(7394)),m=new("function"!=typeof TextDecoder?l.TextDecoder:TextDecoder)("utf-8",{fatal:!0});t.baseEncode=function(e){return"string"==typeof e&&(e=Buffer.from(e,"utf8")),o.default.encode(Buffer.from(e))},t.baseDecode=function(e){return Buffer.from(o.default.decode(e))};class u extends Error{constructor(e){super(e),this.fieldPath=[],this.originalMessage=e}addToFieldPath(e){this.fieldPath.splice(0,0,e),this.message=this.originalMessage+": "+this.fieldPath.join(".")}}t.BorshError=u;class f{constructor(){this.buf=Buffer.alloc(1024),this.length=0}maybeResize(){this.buf.length<16+this.length&&(this.buf=Buffer.concat([this.buf,Buffer.alloc(1024)]))}writeU8(e){this.maybeResize(),this.buf.writeUInt8(e,this.length),this.length+=1}writeU16(e){this.maybeResize(),this.buf.writeUInt16LE(e,this.length),this.length+=2}writeU32(e){this.maybeResize(),this.buf.writeUInt32LE(e,this.length),this.length+=4}writeU64(e){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(e).toArray("le",8)))}writeU128(e){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(e).toArray("le",16)))}writeU256(e){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(e).toArray("le",32)))}writeU512(e){this.maybeResize(),this.writeBuffer(Buffer.from(new s.default(e).toArray("le",64)))}writeBuffer(e){this.buf=Buffer.concat([Buffer.from(this.buf.subarray(0,this.length)),e,Buffer.alloc(1024)]),this.length+=e.length}writeString(e){this.maybeResize();let t=Buffer.from(e,"utf8");this.writeU32(t.length),this.writeBuffer(t)}writeFixedArray(e){this.writeBuffer(Buffer.from(e))}writeArray(e,t){for(let a of(this.maybeResize(),this.writeU32(e.length),e))this.maybeResize(),t(a)}toArray(){return this.buf.subarray(0,this.length)}}function c(e,t,a){let d=a.value;a.value=function(...e){try{return d.apply(this,e)}catch(e){if(e instanceof RangeError&&["ERR_BUFFER_OUT_OF_BOUNDS","ERR_OUT_OF_RANGE"].indexOf(e.code)>=0)throw new u("Reached the end of buffer when deserializing");throw e}}}t.BinaryWriter=f;class h{constructor(e){this.buf=e,this.offset=0}readU8(){let e=this.buf.readUInt8(this.offset);return this.offset+=1,e}readU16(){let e=this.buf.readUInt16LE(this.offset);return this.offset+=2,e}readU32(){let e=this.buf.readUInt32LE(this.offset);return this.offset+=4,e}readU64(){let e=this.readBuffer(8);return new s.default(e,"le")}readU128(){let e=this.readBuffer(16);return new s.default(e,"le")}readU256(){let e=this.readBuffer(32);return new s.default(e,"le")}readU512(){let e=this.readBuffer(64);return new s.default(e,"le")}readBuffer(e){if(this.offset+e>this.buf.length)throw new u(`Expected buffer length ${e} isn't within bounds`);let t=this.buf.slice(this.offset,this.offset+e);return this.offset+=e,t}readString(){let e=this.readU32(),t=this.readBuffer(e);try{return m.decode(t)}catch(e){throw new u(`Error decoding UTF-8 string: ${e}`)}}readFixedArray(e){return new Uint8Array(this.readBuffer(e))}readArray(e){let t=this.readU32(),a=[];for(let d=0;d<t;++d)a.push(e());return a}}function x(e){return e.charAt(0).toUpperCase()+e.slice(1)}function b(e,t,a,d,i){try{if("string"==typeof d)i[`write${x(d)}`](a);else if(d instanceof Array)if("number"==typeof d[0]){if(a.length!==d[0])throw new u(`Expecting byte array of length ${d[0]}, but got ${a.length} bytes`);i.writeFixedArray(a)}else if(2===d.length&&"number"==typeof d[1]){if(a.length!==d[1])throw new u(`Expecting byte array of length ${d[1]}, but got ${a.length} bytes`);for(let t=0;t<d[1];t++)b(e,null,a[t],d[0],i)}else i.writeArray(a,a=>{b(e,t,a,d[0],i)});else if(void 0!==d.kind)switch(d.kind){case"option":null==a?i.writeU8(0):(i.writeU8(1),b(e,t,a,d.type,i));break;case"map":i.writeU32(a.size),a.forEach((a,p)=>{b(e,t,p,d.key,i),b(e,t,a,d.value,i)});break;default:throw new u(`FieldType ${d} unrecognized`)}else v(e,a,i)}catch(e){throw e instanceof u&&e.addToFieldPath(t),e}}function v(e,t,a){if("function"==typeof t.borshSerialize)return void t.borshSerialize(a);let d=e.get(t.constructor);if(!d)throw new u(`Class ${t.constructor.name} is missing in schema`);if("struct"===d.kind)d.fields.map(([d,i])=>{b(e,d,t[d],i,a)});else if("enum"===d.kind){let i=t[d.field];for(let p=0;p<d.values.length;++p){let[r,n]=d.values[p];if(r===i){a.writeU8(p),b(e,r,t[r],n,a);break}}}else throw new u(`Unexpected schema kind: ${d.kind} for ${t.constructor.name}`)}function g(e,t,a,d){try{if("string"==typeof a)return d[`read${x(a)}`]();if(a instanceof Array)if("number"==typeof a[0])return d.readFixedArray(a[0]);else{if("number"!=typeof a[1])return d.readArray(()=>g(e,t,a[0],d));let i=[];for(let t=0;t<a[1];t++)i.push(g(e,null,a[0],d));return i}if("option"===a.kind){if(d.readU8())return g(e,t,a.type,d);return}if("map"===a.kind){let i=new Map,p=d.readU32();for(let r=0;r<p;r++){let p=g(e,t,a.key,d),r=g(e,t,a.value,d);i.set(p,r)}return i}return y(e,a,d)}catch(e){throw e instanceof u&&e.addToFieldPath(t),e}}function y(e,t,a){if("function"==typeof t.borshDeserialize)return t.borshDeserialize(a);let d=e.get(t);if(!d)throw new u(`Class ${t.name} is missing in schema`);if("struct"===d.kind){let d={};for(let[i,p]of e.get(t).fields)d[i]=g(e,i,p,a);return new t(d)}if("enum"===d.kind){let i=a.readU8();if(i>=d.values.length)throw new u(`Enum index: ${i} is out of range`);let[p,r]=d.values[i],n=g(e,p,r,a);return new t({[p]:n})}throw new u(`Unexpected schema kind: ${d.kind} for ${t.constructor.name}`)}p([c],h.prototype,"readU8",null),p([c],h.prototype,"readU16",null),p([c],h.prototype,"readU32",null),p([c],h.prototype,"readU64",null),p([c],h.prototype,"readU128",null),p([c],h.prototype,"readU256",null),p([c],h.prototype,"readU512",null),p([c],h.prototype,"readString",null),p([c],h.prototype,"readFixedArray",null),p([c],h.prototype,"readArray",null),t.BinaryReader=h,t.serialize=function(e,t,a=f){let d=new a;return v(e,t,d),d.toArray()},t.deserialize=function(e,t,a,d=h){let i=new d(a),p=y(e,t,i);if(i.offset<a.length)throw new u(`Unexpected ${a.length-i.offset} bytes after deserialized data`);return p},t.deserializeUnchecked=function(e,t,a,d=h){return y(e,t,new d(a))}},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9428:e=>{"use strict";e.exports=require("buffer")},9466:(e,t,a)=>{"use strict";let d=a(8e3).v4,i=a(7801),p=function(e,t){if(!(this instanceof p))return new p(e,t);t||(t={}),this.options={reviver:void 0!==t.reviver?t.reviver:null,replacer:void 0!==t.replacer?t.replacer:null,generator:void 0!==t.generator?t.generator:function(){return d()},version:void 0!==t.version?t.version:2,notificationIdNull:"boolean"==typeof t.notificationIdNull&&t.notificationIdNull},this.callServer=e};e.exports=p,p.prototype.request=function(e,t,a,d){let p,r=this,n=null,s=Array.isArray(e)&&"function"==typeof t;if(1===this.options.version&&s)throw TypeError("JSON-RPC 1.0 does not support batching");let o=!s&&e&&"object"==typeof e&&"function"==typeof t;if(s||o)d=t,n=e;else{"function"==typeof a&&(d=a,a=void 0);let p="function"==typeof d;try{n=i(e,t,a,{generator:this.options.generator,version:this.options.version,notificationIdNull:this.options.notificationIdNull})}catch(e){if(p)return d(e);throw e}if(!p)return n}try{p=JSON.stringify(n,this.options.replacer)}catch(e){return d(e)}return this.callServer(p,function(e,t){r._parseResponse(e,t,d)}),n},p.prototype._parseResponse=function(e,t,a){let d;if(e)return void a(e);if(!t)return a();try{d=JSON.parse(t,this.options.reviver)}catch(e){return a(e)}if(3===a.length)if(!Array.isArray(d))return a(null,d.error,d.result);else{let e=function(e){return void 0!==e.error};return a(null,d.filter(e),d.filter(function(t){return!e(t)}))}a(null,d)}},9989:e=>{"use strict";var t={};function a(e,t){!t.unsigned&&--e;let a=t.unsigned?0:-Math.pow(2,e),d=Math.pow(2,e)-1,i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),p=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,r){r||(r={});let n=+e;if(r.enforceRange){if(!Number.isFinite(n))throw TypeError("Argument is not a finite number");if((n=(n<0?-1:1)*Math.floor(Math.abs(n)))<a||n>d)throw TypeError("Argument is not in byte range");return n}if(!isNaN(n)&&r.clamp){var s;return(n=(s=n)%1==.5&&(1&s)==0?Math.floor(s):Math.round(s))<a&&(n=a),n>d&&(n=d),n}if(!Number.isFinite(n)||0===n)return 0;if(n=(n<0?-1:1)*Math.floor(Math.abs(n))%i,!t.unsigned&&n>=p)return n-i;if(t.unsigned){if(n<0)n+=i;else if(-0===n)return 0}return n}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=a(8,{unsigned:!1}),t.octet=a(8,{unsigned:!0}),t.short=a(16,{unsigned:!1}),t["unsigned short"]=a(16,{unsigned:!0}),t.long=a(32,{unsigned:!1}),t["unsigned long"]=a(32,{unsigned:!0}),t["long long"]=a(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=a(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){let t=+e;if(!Number.isFinite(t))throw TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){let t=+e;if(isNaN(t))throw TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return(t||(t={}),t.treatNullAsEmptyString&&null===e)?"":String(e)},t.ByteString=function(e,t){let a,d=String(e);for(let e=0;void 0!==(a=d.codePointAt(e));++e)if(a>255)throw TypeError("Argument is not a valid bytestring");return d},t.USVString=function(e){let t=String(e),a=t.length,d=[];for(let e=0;e<a;++e){let i=t.charCodeAt(e);if(i<55296||i>57343)d.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)d.push(String.fromCodePoint(65533));else if(e===a-1)d.push(String.fromCodePoint(65533));else{let a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){let t=1023&i,p=1023&a;d.push(String.fromCodePoint(65536+1024*t+p)),++e}else d.push(String.fromCodePoint(65533))}}return d.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),d=t.X(0,[683,658],()=>a(4618));module.exports=d})();